{"version":3,"sources":["redux/actions/actions.js","components/center/AddTask.js","components/MenuV2.js","components/center/EditTaskName.js","redux/utilities.js","components/center/TaskItemV3.js","components/center/TaskItemsV3.js","components/center/EditListName.js","components/center/TasksHeader.js","components/center/Tasks.js","components/left/AddList.js","components/left/GroupList.js","components/left/EditGroupName.js","components/left/Group.js","components/left/Groups.js","components/left/PremadeLists.js","components/left/List.js","components/left/Toolbar.js","components/right/AddStep.js","components/right/AddToMyDay.js","components/right/DetailFooter.js","components/Menu.js","components/right/Steps.js","components/right/TaskDetail.js","components/right/Detailbar.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/listsReducer.js","redux/reducers/groupsReducer.js","redux/reducers/menuReducer.js","redux/reducers/screenReducer.js","redux/reducers/rootReducer.js","redux/reducers/currentReducer.js","redux/reducers/addingReducer.js","redux/reducers/barsReducer.js","redux/store.js","index.js"],"names":["setCurrentGroup","groupId","type","payload","id","addingGroup","title","isEditingGroup","isEditing","setCurrentList","listId","addingList","editingList","isEditingList","deleteList","setCurrentTask","taskId","addingTask","importantTask","isImportant","Important","checkTask","isChecked","editingTask","isEditingTask","deleteTask","openMenu","isOpen","source","sourceId","menuRename","openDetailbar","openToolbar","AddTask","dispatch","useDispatch","taskTitle","useSelector","state","currentListId","currentList","className","onClick","uuid","steps","addedToMyDay","Planned","parentList","createdAt","Date","now","actions","name","maxLength","placeholder","value","onChange","e","target","MenuV2","taskOrList","menuSource","menu","EditTaskName","oldName","currentTask","useEffect","isToday","inputDate","setHours","isFutur","TaskItemV3","task","tasks","find","getTaskById","isMenuOpen","currentTaskId","isDetailbarOpen","detailbar","TaskItmesV3","WhatToShow","taskIds","checkedTaskIds","map","push","key","length","impTaskIds","checkedImpTaskIds","planTaskIds","checkedPlanTaskIds","tasksTaskIds","checkedTasksTaskIds","listsTaskIds","checkedListsTaskIds","EditListName","listTitle","TasksHeader","currentListTitle","globalListId","Tasks","lists","list","undefined","screenWidth","screen","width","isToolbarOpen","toolbar","isBarOpen","AddList","group","GroupList","activeTaskCount","EditGroupName","groupTitle","Group","currentGroup","checkNewGroup","listsCount","filter","Groups","groups","PremadeLists","store","myDay","important","planned","tasksList","forEach","obj","List","Toolbar","AddStep","AddToMyDay","date","DetailFooter","currentTaskDate","Menu","openOrNot","Steps","parentTaskId","step","TaskDetail","currentTaskTitle","currentTaskSteps","Detailbar","currentTaskIsChecked","toDateString","App","window","addEventListener","document","documentElement","clientWidth","tasksReducer","DummyData","action","foundEditingTask","newEditingState","foundTask","newState","foundImportanTask","newImportantState","foundMyDayTask","newMyDayState","foundParentTask","foundStep","taskSteps","newTaskSteps","newTask","newStepState","newDeleteState","listsReducer","Lists","foundEditingList","groupsReducer","menuReducer","screenReducer","rootReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc73bd06.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                Group Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentGroup = (groupId) => {\r\n  return {\r\n    type: \"SET_GROUP\",\r\n    payload: { id: groupId },\r\n  };\r\n};\r\n\r\nexport const addingGroup = (title) => {\r\n  return {\r\n    type: \"ADDING_GROUP\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addGroup = (id, title) => {\r\n  return {\r\n    type: \"ADD_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editGroup = (id, title) => {\r\n  return {\r\n    type: \"EDIT_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const isEditingGroup = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_GROUP\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                List Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentList = (listId) => {\r\n  return {\r\n    type: \"SET_LIST\",\r\n    payload: { id: listId },\r\n  };\r\n};\r\n\r\nexport const addingList = (title) => {\r\n  return {\r\n    type: \"ADDING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addList = (id, title, groupId) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      group: groupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editList = (id, title) => {\r\n  return {\r\n    type: \"EDIT_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingList = (title) => {\r\n  return {\r\n    type: \"EDITING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingList = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_LIST\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Task Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentTask = (taskId) => {\r\n  return {\r\n    type: \"SET_TASK\",\r\n    payload: { id: taskId },\r\n  };\r\n};\r\n\r\nexport const addingTask = (title) => {\r\n  return {\r\n    type: \"ADDING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addTask = (id, title, listId) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      steps: [],\r\n      isChecked: false,\r\n      addedToMyDay: null,\r\n      Important: false,\r\n      Planned: null,\r\n      parentList: listId,\r\n      createdAt: Date.now(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const importantTask = (id, isImportant) => {\r\n  return {\r\n    type: \"IMPORTANT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      Important: isImportant,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkTask = (id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_TASK\",\r\n    payload: {\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkStep = (parentTaskId, id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_STEP\",\r\n    payload: {\r\n      parentTaskId: parentTaskId,\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editTask = (id, title) => {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingTask = (title) => {\r\n  return {\r\n    type: \"EDITING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingTask = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_TASK\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addedToMyDay = (id, date) => {\r\n  return {\r\n    type: \"ADD_TO_MY_DAY\",\r\n    payload: {\r\n      id: id,\r\n      addedToMyDay: date,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Menu Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openMenu = (isOpen, source, sourceId) => {\r\n  return {\r\n    type: \"OPEN_MENU\",\r\n    payload: { isOpen: isOpen, source: source, sourceId: sourceId },\r\n  };\r\n};\r\n\r\nexport const menuRename = (source, sourceId) => {\r\n  switch (source) {\r\n    case \"TASK_ITEM\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_DETAIL\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_HEADER\":\r\n      return {\r\n        type: \"RENAMEING_LIST\",\r\n        payload: {\r\n          listId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Bars Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openDetailbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_DETAILBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\nexport const openToolbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_TOOLBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Screen Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setScreenWidth = (screenWidth) => {\r\n  return {\r\n    type: \"SET_WIDTH\",\r\n    payload: {\r\n      screenWidth: screenWidth,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.addingTask.title);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  return (\r\n    <div className=\"task-item-body add-task-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button\r\n          className=\"btn btn-no-hover\"\r\n          onClick={() => {\r\n            dispatch(actions.addTask(uuid(), taskTitle, currentListId));\r\n            dispatch(actions.addingTask(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Task\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingTask(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\nconst MenuV2 = ({ source, sourceId, taskOrList }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const currentListId = useSelector((state) => state.currentList.listId);\r\n  // const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  // const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n\r\n  // const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n\r\n  // const openOrNot =\r\n  //   source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  // const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div className=\"tasks-toolbar-menu unhide\">\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuV2;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditTaskName = ({ taskId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingTask(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editTask(taskId, taskTitle));\r\n          dispatch(actions.editingTask(\"\"));\r\n          dispatch(actions.isEditingTask(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editTask\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingTask(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskName;\r\n","export const isToday = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  if (today === new Date(inputDate).setHours(0, 0, 0, 0)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isFutur = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  let futur = new Date(inputDate).setHours(0, 0, 0, 0);\r\n  if (today < futur) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditTaskName from \"./EditTaskName\";\r\n\r\nconst getTaskById = (state, taskId) => {\r\n  return state.tasks.find((task) => task.id === taskId);\r\n};\r\n\r\nconst TaskItemV3 = ({ taskId }) => {\r\n  const task = useSelector((state) => getTaskById(state, taskId));\r\n  const { id, title, isChecked, Important } = task;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask =\r\n    currentTaskId === taskId && source === \"TASK_ITEM\" && isEditingTask;\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n\r\n  return (\r\n    <div className=\"task-item-body\">\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.checkTask(id, !isChecked));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isChecked\r\n                ? \"icon icon-checkbox-checked\"\r\n                : \"icon icon-checkbox-empty\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      {editingTask ? (\r\n        <EditTaskName taskId={id} isEditing={isEditingTask} oldName={title} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button\r\n        className={\r\n          editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n        }\r\n        onClick={() => {\r\n          currentTaskId === id\r\n            ? dispatch(actions.setCurrentTask(null))\r\n            : dispatch(actions.setCurrentTask(id));\r\n          dispatch(actions.openDetailbar(!isDetailbarOpen));\r\n        }}>\r\n        <span>{title}</span>\r\n      </button>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.importantTask(id, !Important));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              Important ? \"icon icon-star-checked\" : \"icon icon-star\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      <div\r\n        className=\"tasks-toolbar-options\"\r\n        onClick={() => {\r\n          dispatch(actions.openMenu(false, null, null));\r\n          dispatch(actions.setCurrentTask(id));\r\n          dispatch(actions.openMenu(!isMenuOpen, \"TASK_ITEM\", id));\r\n        }}>\r\n        <div className=\"tasks-toolbar-title-item\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        {/* <Menu id={currentTaskId} source={\"TASK_ITEM\"} sourceId={taskId} /> */}\r\n\r\n        {id === currentTaskId && menuSource === \"TASK_ITEM\" && isMenuOpen ? (\r\n          <MenuV2 source={\"TASK_ITEM\"} sourceId={id} taskOrList={\" task\"} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItemV3;\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport TaskItemV3 from \"./TaskItemV3\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst TaskItmesV3 = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n\r\n  const WhatToShow = () => {\r\n    switch (currentListId) {\r\n      case \"My Day\":\r\n        let taskIds = [];\r\n        let checkedTaskIds = [];\r\n        tasks.map((task) => {\r\n          return isToday(task.addedToMyDay)\r\n            ? task.isChecked\r\n              ? checkedTaskIds.push(task.id)\r\n              : taskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {taskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedTaskIds.length > 0 ? (\r\n              <>\r\n                <br />\r\n                <br />\r\n                <div>Completed Tasks</div>\r\n              </>\r\n            ) : null}\r\n            {checkedTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Important\":\r\n        let impTaskIds = [];\r\n        let checkedImpTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.Important\r\n            ? task.isChecked\r\n              ? checkedImpTaskIds.push(task.id)\r\n              : impTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {impTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedImpTaskIds.length > 0 ? (\r\n              <>\r\n                <br />\r\n                <br />\r\n                <div>Completed Tasks</div>\r\n              </>\r\n            ) : null}\r\n            {checkedImpTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Planned\":\r\n        let planTaskIds = [];\r\n        let checkedPlanTaskIds = [];\r\n        tasks.map((task) => {\r\n          return isFutur(task.Planned)\r\n            ? task.isChecked\r\n              ? checkedPlanTaskIds.push(task.id)\r\n              : planTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {planTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedPlanTaskIds.length > 0 ? (\r\n              <>\r\n                <br />\r\n                <br />\r\n                <div>Completed Tasks</div>\r\n              </>\r\n            ) : null}\r\n            {checkedPlanTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Tasks\":\r\n        let tasksTaskIds = [];\r\n        let checkedTasksTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.parentList === \"Tasks\"\r\n            ? task.isChecked\r\n              ? checkedTasksTaskIds.push(task.id)\r\n              : tasksTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {tasksTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedTasksTaskIds.length > 0 ? (\r\n              <>\r\n                <br />\r\n                <br />\r\n                <div>Completed Tasks</div>\r\n              </>\r\n            ) : null}\r\n            {checkedTasksTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        let listsTaskIds = [];\r\n        let checkedListsTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.parentList === currentListId\r\n            ? task.isChecked\r\n              ? checkedListsTaskIds.push(task.id)\r\n              : listsTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {listsTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedListsTaskIds.length > 0 ? (\r\n              <>\r\n                <br />\r\n                <br />\r\n                <div>Completed Tasks</div>\r\n              </>\r\n            ) : null}\r\n            {checkedListsTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return <div className=\"task-items\">{<WhatToShow />}</div>;\r\n};\r\n\r\nexport default TaskItmesV3;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditListName = ({ listId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.currentList.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingList(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editList(listId, listTitle));\r\n          dispatch(actions.editingList(\"\"));\r\n          dispatch(actions.isEditingList(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editList\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={listTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingList(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListName;\r\n","import React from \"react\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditListName from \"./EditListName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TasksHeader = ({ currentListId, currentListTitle }) => {\r\n  const isEditingList = useSelector((state) => state.currentList.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingList = source === \"TASK_HEADER\" && isEditingList;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const globalListId = useSelector((state) => state.currentList.listId);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  return (\r\n    <div className=\"tasks-toolbar\">\r\n      <div className=\"tasks-toolbar-title\">\r\n        {editingList ? (\r\n          <EditListName\r\n            listId={currentListId}\r\n            isEditing={isEditingList}\r\n            oldName={currentListTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            editingList\r\n              ? \"tasks-toolbar-title-item hide\"\r\n              : \"tasks-toolbar-title-item\"\r\n          }>\r\n          <h1 className=\"list-title\">{currentListTitle}</h1>\r\n        </div>\r\n      </div>\r\n      {currentListId === \"My Day\" ||\r\n      currentListId === \"Important\" ||\r\n      currentListId === \"Planned\" ||\r\n      currentListId === \"Tasks\" ? (\r\n        \"\"\r\n      ) : (\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(actions.openMenu(false, null, null));\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_HEADER\", currentListId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          {/* <Menu\r\n            id={currentListId}\r\n            source={\"TASK_HEADER\"}\r\n            sourceId={currentListId}\r\n          /> */}\r\n\r\n          {/* Open menu if menu is opened and currentList is current list */}\r\n\r\n          {globalListId === currentListId &&\r\n          menuSource === \"TASK_HEADER\" &&\r\n          isMenuOpen ? (\r\n            <MenuV2\r\n              source={\"TASK_HEADER\"}\r\n              sourceId={currentListId}\r\n              taskOrList={\" list\"}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksHeader;\r\n","import React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskItmes from \"./TaskItems\";\r\nimport TaskItmesV2 from \"./TaskItemsV2\";\r\nimport TaskItmesV3 from \"./TaskItemsV3\";\r\nimport TasksHeader from \"./TasksHeader\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Tasks = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentList = lists.find((list) => list.id === currentListId);\r\n  const currentListTitle =\r\n    currentList === undefined ? currentListId : currentList.title;\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const isBarOpen = isDetailbarOpen || isToolbarOpen;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container container-center\">\r\n      <button\r\n        className={\r\n          screenWidth < 800 ? \"btn overlay-btn\" : \"btn overlay-btn hide\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openToolbar(!isToolbarOpen));\r\n        }}>\r\n        <i className=\"icon icon-ham\"></i>\r\n      </button>\r\n\r\n      <div\r\n        className={\r\n          screenWidth < 1020 && isBarOpen ? \"overlay unhide\" : \"overlay\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}></div>\r\n\r\n      <div className=\"center tasks\">\r\n        <TasksHeader\r\n          currentListId={currentListId}\r\n          currentListTitle={currentListTitle}\r\n        />\r\n        {/* Task Items */}\r\n        {/* <TaskItmes /> */}\r\n        {/* <TaskItmesV2 /> */}\r\n        <TaskItmesV3 />\r\n        {/* Add Task */}\r\n        <AddTask />\r\n        {/* End Task Items */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.addingList.title);\r\n\r\n  return (\r\n    <div className=\"add-list-and-group\">\r\n      <div className=\"add-list\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addList(uuid(), listTitle, null));\r\n            dispatch(actions.addingList(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addList\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New List\"\r\n          value={listTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingList(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"add-group\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addGroup(uuid(), \"New Group\"));\r\n          }}>\r\n          <i className=\"icon icon-group-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupList = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditGroupName = ({ groupId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const groupTitle = useSelector((state) => state.addingGroup.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingGroup(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editGroup(groupId, groupTitle));\r\n          dispatch(actions.addingGroup(\"\"));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editGroup\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={groupTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.addingGroup(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupName;\r\n","import React from \"react\";\r\nimport GroupList from \"./GroupList\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditGroupName from \"./EditGroupName\";\r\n\r\nconst Group = ({ groupId, groupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentGroup = useSelector((state) => state.currentGroup.groupId);\r\n  const isEditingGroup = useSelector((state) => state.currentGroup.isEditing);\r\n  const checkNewGroup = currentGroup === groupId && groupTitle === \"New Group\";\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n  const listsCount = lists.filter((list) => list.group === groupId);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li className=\"toolbar-item\">\r\n          {checkNewGroup ? (\r\n            <EditGroupName\r\n              groupId={groupId}\r\n              isEditing={true}\r\n              oldName={groupTitle}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className={\r\n              isEditingGroup && checkNewGroup\r\n                ? \"toolbar-inner hide\"\r\n                : \"toolbar-inner\"\r\n            }\r\n            key={groupId}\r\n            onClick={() => {\r\n              currentGroup === groupId\r\n                ? dispatch(actions.setCurrentGroup(null)) &&\r\n                  dispatch(actions.isEditingGroup(false))\r\n                : dispatch(actions.setCurrentGroup(groupId));\r\n            }}>\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-group\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>{groupTitle}</span>\r\n            </div>\r\n            {listsCount.length > 0 ? (\r\n              <div className=\"toolbar-collapse-arrow\">\r\n                <i className=\"icon icon-arrow\"></i>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <ul\r\n        className={\r\n          currentGroup === groupId ? \"group-lists unhide\" : \"group-lists\"\r\n        }>\r\n        {lists.map((list) => {\r\n          return list.group === groupId ? (\r\n            <GroupList\r\n              key={list.id}\r\n              listId={list.id}\r\n              listTitle={list.title}\r\n              activeTaskCount={tasksCount(list.id).length}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Groups = () => {\r\n  const groups = useSelector((state) => state.groups);\r\n  return (\r\n    <div className=\"groups\">\r\n      {groups.map((group) => {\r\n        return (\r\n          <Group key={group.id} groupId={group.id} groupTitle={group.title} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst PremadeLists = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector((store) => store.tasks);\r\n  let myDay = 0;\r\n  let important = 0;\r\n  let planned = 0;\r\n  let tasksList = 0;\r\n\r\n  tasks.forEach((obj) => {\r\n    if (isToday(obj.addedToMyDay) && !obj.isChecked) {\r\n      myDay++;\r\n    }\r\n    if (obj.Important && !obj.isChecked) {\r\n      important++;\r\n    }\r\n    if (isFutur(obj.Planned) && !obj.isChecked) {\r\n      planned++;\r\n    }\r\n    if (obj.parentList === \"Tasks\" && !obj.isChecked) {\r\n      tasksList++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"My Day\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-sun\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>My Day</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{myDay > 0 ? myDay : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Important\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-star\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Important</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {important > 0 ? important : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Planned\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-calendar\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Planned</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{planned > 0 ? planned : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Tasks\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-home\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Tasks</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {tasksList > 0 ? tasksList : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremadeLists;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst List = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport AddList from \"./AddList\";\r\nimport Groups from \"./Groups\";\r\nimport PremadeLists from \"./PremadeLists\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"./List\";\r\n\r\nconst Toolbar = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth < 800 && isToolbarOpen\r\n          ? \"container container-left unshift\"\r\n          : \"container container-left\"\r\n      }>\r\n      <div className=\"left toolbar\">\r\n        <ul>\r\n          <PremadeLists />\r\n          {/* Devider */}\r\n          <div className=\"devider\"></div>\r\n          {/* End Devider */}\r\n          <Groups />\r\n          {lists.map((list) => {\r\n            return list.group === null ? (\r\n              <List\r\n                key={list.id}\r\n                listId={list.id}\r\n                listTitle={list.title}\r\n                activeTaskCount={tasksCount(list.id).length}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* Add List */}\r\n      <AddList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nconst AddStep = () => {\r\n  return (\r\n    <div className=\"task-item-body add-task-body add-step-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button className=\"btn btn-no-hover\">\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Step\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStep;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddToMyDay = ({ taskId }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"toolbar-item detailbar-item\"\r\n      onClick={() => {\r\n        dispatch(actions.addedToMyDay(taskId, Date.now()));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-sun\"></i>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Add To My Day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToMyDay;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DetailFooter = ({ currentTaskDate, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toolbar-item detail-footer\">\r\n      <div className=\"toolbar-inner\">\r\n        <div\r\n          className=\"toolbar-icon add-group\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Created on {currentTaskDate}</span>\r\n        </div>\r\n        <div\r\n          className=\"add-group detail-delete\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.deleteTask(sourceId));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailFooter;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\nconst Menu = ({ id, source, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n  const openOrNot =\r\n    source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        openOrNot ? \"tasks-toolbar-menu unhide\" : \"tasks-toolbar-menu\"\r\n      }>\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Steps = ({ parentTaskId, steps }) => {\r\n  const dispatch = useDispatch();\r\n  return steps.map((step) => {\r\n    return (\r\n      <div key={step.id} className=\"task-item-body task-detail-title step\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkStep(parentTaskId, step.id, !step.isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                step.isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        <button className=\"btn task-item-title\">\r\n          <span>{step.title}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport Steps from \"./Steps\";\r\nimport EditTaskName from \"../center/EditTaskName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TaskDetail = ({\r\n  currentTaskId,\r\n  currentTaskTitle,\r\n  isChecked,\r\n  currentTaskSteps,\r\n}) => {\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask = source === \"TASK_DETAIL\" && isEditingTask;\r\n\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  return (\r\n    <div className=\"task-item-body task-detail-title\">\r\n      <div className=\"task-detail-header\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkTask(currentTaskId, !isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        {editingTask ? (\r\n          <EditTaskName\r\n            taskId={currentTaskId}\r\n            isEditing={isEditingTask}\r\n            oldName={currentTaskTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          className={\r\n            editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n          }>\r\n          <span>\r\n            <h2>{currentTaskTitle}</h2>\r\n          </span>\r\n        </button>\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_DETAIL\", currentTaskId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n          <Menu\r\n            id={currentTaskId}\r\n            source={\"TASK_DETAIL\"}\r\n            sourceId={currentTaskId}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Steps parentTaskId={currentTaskId} steps={currentTaskSteps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport AddStep from \"./AddStep\";\r\nimport AddToMyDay from \"./AddToMyDay\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Detailbar = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n\r\n  const currentTask = tasks.find((task) => task.id === currentTaskId);\r\n\r\n  const currentTaskTitle =\r\n    currentTask === undefined ? currentTaskId : currentTask.title;\r\n\r\n  const currentTaskIsChecked =\r\n    currentTask === undefined ? false : currentTask.isChecked;\r\n\r\n  const currentTaskSteps = currentTask === undefined ? [] : currentTask.steps;\r\n\r\n  const currentTaskDate =\r\n    currentTask === undefined\r\n      ? currentTaskId\r\n      : new Date(currentTask.createdAt).toDateString();\r\n\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth > 1020 && isDetailbarOpen\r\n          ? \"container container-right\"\r\n          : screenWidth > 1020 && !isDetailbarOpen\r\n          ? \"container container-right hide\"\r\n          : screenWidth < 1020 && isDetailbarOpen\r\n          ? \"container container-right unshift\"\r\n          : \"container container-right\"\r\n      }>\r\n      <TaskDetail\r\n        currentTaskId={currentTaskId}\r\n        currentTaskTitle={currentTaskTitle}\r\n        isChecked={currentTaskIsChecked}\r\n        currentTaskSteps={currentTaskSteps}\r\n      />\r\n      <AddStep />\r\n      <AddToMyDay taskId={currentTaskId} />\r\n      <DetailFooter\r\n        currentTaskDate={currentTaskDate}\r\n        sourceId={currentTaskId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detailbar;\r\n","import React from \"react\";\nimport Tasks from \"./components/center/Tasks\";\nimport Toolbar from \"./components/left/Toolbar\";\nimport Detailbar from \"./components/right/Detailbar\";\n\nimport * as actions from \"./redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  window.addEventListener(\"resize\", () => {\n    dispatch(actions.setScreenWidth(document.documentElement.clientWidth));\n  });\n\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Tasks />\n      <Detailbar />\n    </div>\n  );\n}\n\nexport default App;\n","import DummyData from \"../DummyData\";\r\n\r\nconst tasksReducer = (state = DummyData.Tasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          steps: action.payload.steps,\r\n          isChecked: action.payload.isChecked,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n          Important: action.payload.Important,\r\n          Planned: action.payload.Planned,\r\n          parentList: action.payload.parentList,\r\n          createdAt: action.payload.createdAt,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_TASK\":\r\n      const foundEditingTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingTask,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_TASK\":\r\n      const foundTask = state.find((task) => task.id === action.payload.id);\r\n      const newState = state.filter((task) => task.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          ...foundTask,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n\r\n    case \"IMPORTANT_TASK\":\r\n      const foundImportanTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newImportantState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newImportantState,\r\n        {\r\n          ...foundImportanTask,\r\n          Important: action.payload.Important,\r\n        },\r\n      ];\r\n\r\n    case \"ADD_TO_MY_DAY\":\r\n      const foundMyDayTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newMyDayState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newMyDayState,\r\n        {\r\n          ...foundMyDayTask,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_STEP\":\r\n      const foundParentTask = state.find(\r\n        (task) => task.id === action.payload.parentTaskId\r\n      );\r\n      const foundStep = foundParentTask.steps.find(\r\n        (step) => step.id === action.payload.id\r\n      );\r\n      const taskSteps = foundParentTask.steps.filter(\r\n        (step) => step.id !== action.payload.id\r\n      );\r\n      const newTaskSteps = [\r\n        ...taskSteps,\r\n        {\r\n          ...foundStep,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n      const newTask = {\r\n        ...foundParentTask,\r\n        steps: [...newTaskSteps],\r\n      };\r\n      const newStepState = state.filter(\r\n        (task) => task.id !== action.payload.parentTaskId\r\n      );\r\n      return [\r\n        ...newStepState,\r\n        {\r\n          ...newTask,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_TASK\":\r\n      const newDeleteState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst listsReducer = (state = DummyData.Lists, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          group: action.payload.group,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_LIST\":\r\n      const foundEditingList = state.find(\r\n        (list) => list.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingList,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_LIST\":\r\n      const newDeleteState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst groupsReducer = (state = DummyData.Groups, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GROUP\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_GROUP\":\r\n      const newState = state.filter((group) => group.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupsReducer;\r\n","const menuReducer = (\r\n  state = { isOpen: false, source: null, sourceId: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n        source: action.payload.source,\r\n        sourceId: action.payload.sourceId,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menuReducer;\r\n","const screenReducer = (\r\n  state = { width: document.documentElement.clientWidth },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WIDTH\":\r\n      return {\r\n        ...state,\r\n        width: action.payload.screenWidth,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import tasksReducer from \"./tasksReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport groupsReducer from \"./groupsReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\nimport {\r\n  currentListIdReducer,\r\n  currentTaskIdReducer,\r\n  currentGroupIdReducer,\r\n} from \"./currentReducer\";\r\nimport {\r\n  addingListReducer,\r\n  addingTaskReducer,\r\n  addingGroupReducer,\r\n} from \"./addingReducer\";\r\nimport { detailbarReducer, toolbarReducer } from \"./barsReducer\";\r\nimport screenReducer from \"./screenReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  lists: listsReducer,\r\n  groups: groupsReducer,\r\n  currentList: currentListIdReducer,\r\n  currentGroup: currentGroupIdReducer,\r\n  currentTask: currentTaskIdReducer,\r\n  addingList: addingListReducer,\r\n  addingGroup: addingGroupReducer,\r\n  addingTask: addingTaskReducer,\r\n  menu: menuReducer,\r\n  detailbar: detailbarReducer,\r\n  toolbar: toolbarReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const currentListIdReducer = (\r\n  state = { listId: \"Tasks\", title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LIST\":\r\n      return { ...state, listId: action.payload.id };\r\n\r\n    case \"IS_EDITING_LIST\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_LIST\":\r\n      return {\r\n        ...state,\r\n        listId: action.payload.listId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentGroupIdReducer = (\r\n  state = { groupId: null, isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_GROUP\":\r\n      return { ...state, groupId: action.payload.id };\r\n\r\n    case \"IS_EDITING_GROUP\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentTaskIdReducer = (\r\n  state = { taskId: null, title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_TASK\":\r\n      return { ...state, taskId: action.payload.id };\r\n\r\n    case \"IS_EDITING_TASK\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_TASK\":\r\n      return {\r\n        ...state,\r\n        taskId: action.payload.taskId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const addingListReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingGroupReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_GROUP\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingTaskReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const detailbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_DETAILBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toolbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_TOOLBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}