{"version":3,"sources":["redux/actions/actions.js","components/center/AddTask.js","components/Menu.js","components/center/EditTaskName.js","components/center/TaskItem.js","redux/utilities.js","components/center/TaskItems.js","components/center/EditListName.js","components/center/TasksHeader.js","components/center/Tasks.js","components/left/AddList.js","components/left/GroupList.js","components/left/EditGroupName.js","components/left/Group.js","components/left/Groups.js","components/left/PremadeLists.js","components/left/List.js","components/left/Toolbar.js","components/right/AddStep.js","components/right/AddToMyDay.js","components/right/DetailFooter.js","components/right/Steps.js","components/right/TaskDetail.js","components/right/Detailbar.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/listsReducer.js","redux/reducers/groupsReducer.js","redux/reducers/menuReducer.js","redux/reducers/screenReducer.js","redux/reducers/rootReducer.js","redux/reducers/currentReducer.js","redux/reducers/addingReducer.js","redux/reducers/barsReducer.js","redux/store.js","index.js"],"names":["setCurrentGroup","groupId","type","payload","id","addingGroup","title","isEditingGroup","isEditing","setCurrentList","listId","addingList","editingList","isEditingList","setCurrentTask","taskId","addingTask","checkTask","isChecked","editingTask","isEditingTask","deleteTask","openMenu","isOpen","source","sourceId","openDetailbar","openToolbar","AddTask","dispatch","useDispatch","taskTitle","useSelector","state","currentListId","currentList","className","onClick","uuid","steps","addedToMyDay","Important","Planned","parentList","createdAt","Date","now","actions","name","maxLength","placeholder","value","onChange","e","target","Menu","currentTaskId","currentTask","isMenuOpen","menu","menuSource","openOrNot","taskOrList","EditTaskName","oldName","useEffect","TaskItem","isImportant","isDetailbarOpen","detailbar","key","console","log","isToday","inputDate","setHours","isFutur","TaskItmes","tasks","WhatToShow","map","task","EditListName","listTitle","TasksHeader","currentListTitle","Tasks","lists","find","list","undefined","screenWidth","screen","width","isToolbarOpen","toolbar","isBarOpen","AddList","group","GroupList","activeTaskCount","EditGroupName","groupTitle","Group","currentGroup","checkNewGroup","listsCount","filter","length","Groups","groups","PremadeLists","store","myDay","important","planned","tasksList","forEach","obj","List","Toolbar","AddStep","AddToMyDay","date","DetailFooter","currentTaskDate","Steps","parentTaskId","step","TaskDetail","currentTaskTitle","currentTaskSteps","Detailbar","currentTaskIsChecked","toDateString","App","window","addEventListener","document","documentElement","clientWidth","tasksReducer","DummyData","action","foundEditingTask","newEditingState","foundTask","newState","foundImportanTask","newImportantState","foundMyDayTask","newMyDayState","foundParentTask","foundStep","taskSteps","newTaskSteps","newTask","newStepState","newDeleteState","listsReducer","Lists","foundEditingList","groupsReducer","menuReducer","screenReducer","rootReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f88cb543.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                Group Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentGroup = (groupId) => {\r\n  return {\r\n    type: \"SET_GROUP\",\r\n    payload: { id: groupId },\r\n  };\r\n};\r\n\r\nexport const addingGroup = (title) => {\r\n  return {\r\n    type: \"ADDING_GROUP\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addGroup = (id, title) => {\r\n  return {\r\n    type: \"ADD_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editGroup = (id, title) => {\r\n  return {\r\n    type: \"EDIT_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const isEditingGroup = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_GROUP\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                List Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentList = (listId) => {\r\n  return {\r\n    type: \"SET_LIST\",\r\n    payload: { id: listId },\r\n  };\r\n};\r\n\r\nexport const addingList = (title) => {\r\n  return {\r\n    type: \"ADDING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addList = (id, title, groupId) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      group: groupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editList = (id, title) => {\r\n  return {\r\n    type: \"EDIT_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingList = (title) => {\r\n  return {\r\n    type: \"EDITING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingList = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_LIST\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Task Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentTask = (taskId) => {\r\n  return {\r\n    type: \"SET_TASK\",\r\n    payload: { id: taskId },\r\n  };\r\n};\r\n\r\nexport const addingTask = (title) => {\r\n  return {\r\n    type: \"ADDING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addTask = (id, title, listId) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      steps: [],\r\n      isChecked: false,\r\n      addedToMyDay: null,\r\n      Important: false,\r\n      Planned: null,\r\n      parentList: listId,\r\n      createdAt: Date.now(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const importantTask = (id, isImportant) => {\r\n  console.log(`id: ${id}, isImportant ${isImportant}`);\r\n  return {\r\n    type: \"IMPORTANT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      Important: isImportant,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkTask = (id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_TASK\",\r\n    payload: {\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkStep = (parentTaskId, id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_STEP\",\r\n    payload: {\r\n      parentTaskId: parentTaskId,\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editTask = (id, title) => {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingTask = (title) => {\r\n  return {\r\n    type: \"EDITING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingTask = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_TASK\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addedToMyDay = (id, date) => {\r\n  return {\r\n    type: \"ADD_TO_MY_DAY\",\r\n    payload: {\r\n      id: id,\r\n      addedToMyDay: date,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Menu Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openMenu = (isOpen, source, sourceId) => {\r\n  return {\r\n    type: \"OPEN_MENU\",\r\n    payload: { isOpen: isOpen, source: source, sourceId: sourceId },\r\n  };\r\n};\r\n\r\nexport const menuRename = (source, sourceId) => {\r\n  switch (source) {\r\n    case \"TASK_ITEM\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_DETAIL\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_HEADER\":\r\n      return {\r\n        type: \"RENAMEING_LIST\",\r\n        payload: {\r\n          listId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Bars Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openDetailbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_DETAILBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\nexport const openToolbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_TOOLBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Screen Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setScreenWidth = (screenWidth) => {\r\n  return {\r\n    type: \"SET_WIDTH\",\r\n    payload: {\r\n      screenWidth: screenWidth,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.addingTask.title);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  return (\r\n    <div className=\"task-item-body add-task-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button\r\n          className=\"btn btn-no-hover\"\r\n          onClick={() => {\r\n            dispatch(actions.addTask(uuid(), taskTitle, currentListId));\r\n            dispatch(actions.addingTask(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Task\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingTask(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\n// id={currentTaskId} type={\"TASK_ITEM\"}\r\n// id={currentTaskId} type={\"TASK_DETAIL\"}\r\n// id={currentListId} type={\"TASK_HEADER\"}\r\n\r\nconst Menu = ({ id, source, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n  const openOrNot =\r\n    source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        openOrNot ? \"tasks-toolbar-menu unhide\" : \"tasks-toolbar-menu\"\r\n      }>\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditTaskName = ({ taskId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingTask(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editTask(taskId, taskTitle));\r\n          dispatch(actions.editingTask(\"\"));\r\n          dispatch(actions.isEditingTask(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editTask\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingTask(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskName;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Menu from \"../Menu\";\r\nimport EditTaskName from \"./EditTaskName\";\r\n\r\nconst TaskItem = ({ taskId, taskTitle, isChecked, isImportant }) => {\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask =\r\n    currentTaskId === taskId && source === \"TASK_ITEM\" && isEditingTask;\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"task-item-body\" key={taskId}>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.checkTask(taskId, !isChecked));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isChecked\r\n                ? \"icon icon-checkbox-checked\"\r\n                : \"icon icon-checkbox-empty\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      {editingTask ? (\r\n        <EditTaskName\r\n          taskId={taskId}\r\n          isEditing={isEditingTask}\r\n          oldName={taskTitle}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button\r\n        className={\r\n          editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n        }\r\n        onClick={() => {\r\n          currentTaskId === taskId\r\n            ? dispatch(actions.setCurrentTask(null))\r\n            : dispatch(actions.setCurrentTask(taskId));\r\n          dispatch(actions.openDetailbar(!isDetailbarOpen));\r\n        }}>\r\n        <span>{taskTitle}</span>\r\n      </button>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.importantTask(taskId, !isImportant));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isImportant ? \"icon icon-star-checked\" : \"icon icon-star\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      <div\r\n        className=\"tasks-toolbar-options\"\r\n        onClick={() => {\r\n          dispatch(actions.openMenu(!isMenuOpen, \"TASK_ITEM\", taskId));\r\n        }}>\r\n        <div className=\"tasks-toolbar-title-item\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <Menu id={currentTaskId} source={\"TASK_ITEM\"} sourceId={taskId} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","export const isToday = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  if (today === new Date(inputDate).setHours(0, 0, 0, 0)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isFutur = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  let futur = new Date(inputDate).setHours(0, 0, 0, 0);\r\n  if (today < futur) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst TaskItmes = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n\r\n  const WhatToShow = () => {\r\n    switch (currentListId) {\r\n      case \"My Day\":\r\n        return tasks.map((task) => {\r\n          return isToday(task.addedToMyDay) ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Important\":\r\n        return tasks.map((task) => {\r\n          return task.Important ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Planned\":\r\n        return tasks.map((task) => {\r\n          return isFutur(task.Planned) ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Tasks\":\r\n        return tasks.map((task) => {\r\n          return task.parentList === \"Tasks\" ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      default:\r\n        return tasks.map((task) => {\r\n          return task.parentList === currentListId ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n    }\r\n  };\r\n\r\n  return <div className=\"task-items\">{<WhatToShow />}</div>;\r\n};\r\n\r\nexport default TaskItmes;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditListName = ({ listId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.currentList.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingList(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editList(listId, listTitle));\r\n          dispatch(actions.editingList(\"\"));\r\n          dispatch(actions.isEditingList(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editList\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={listTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingList(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListName;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport EditListName from \"./EditListName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TasksHeader = ({ currentListId, currentListTitle }) => {\r\n  const isEditingList = useSelector((state) => state.currentList.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingList = source === \"TASK_HEADER\" && isEditingList;\r\n\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n\r\n  return (\r\n    <div className=\"tasks-toolbar\">\r\n      <div className=\"tasks-toolbar-title\">\r\n        {editingList ? (\r\n          <EditListName\r\n            listId={currentListId}\r\n            isEditing={isEditingList}\r\n            oldName={currentListTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            editingList\r\n              ? \"tasks-toolbar-title-item hide\"\r\n              : \"tasks-toolbar-title-item\"\r\n          }>\r\n          <h1 className=\"list-title\">{currentListTitle}</h1>\r\n        </div>\r\n      </div>\r\n      {currentListId === \"My Day\" ||\r\n      currentListId === \"Important\" ||\r\n      currentListId === \"Planned\" ||\r\n      currentListId === \"Tasks\" ? (\r\n        \"\"\r\n      ) : (\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_HEADER\", currentListId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <Menu\r\n            id={currentListId}\r\n            source={\"TASK_HEADER\"}\r\n            sourceId={currentListId}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksHeader;\r\n","import React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskItmes from \"./TaskItems\";\r\nimport TasksHeader from \"./TasksHeader\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Tasks = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentList = lists.find((list) => list.id === currentListId);\r\n  const currentListTitle =\r\n    currentList === undefined ? currentListId : currentList.title;\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const isBarOpen = isDetailbarOpen || isToolbarOpen;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container container-center\">\r\n      <button\r\n        className={\r\n          screenWidth < 800 ? \"btn overlay-btn\" : \"btn overlay-btn hide\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openToolbar(!isToolbarOpen));\r\n        }}>\r\n        <i className=\"icon icon-ham\"></i>\r\n      </button>\r\n\r\n      <div\r\n        className={\r\n          screenWidth < 1020 && isBarOpen ? \"overlay unhide\" : \"overlay\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}></div>\r\n\r\n      <div className=\"center tasks\">\r\n        <TasksHeader\r\n          currentListId={currentListId}\r\n          currentListTitle={currentListTitle}\r\n        />\r\n        {/* Task Items */}\r\n        <TaskItmes />\r\n        {/* Add Task */}\r\n        <AddTask />\r\n        {/* End Task Items */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.addingList.title);\r\n\r\n  return (\r\n    <div className=\"add-list-and-group\">\r\n      <div className=\"add-list\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addList(uuid(), listTitle, null));\r\n            dispatch(actions.addingList(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addList\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New List\"\r\n          value={listTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingList(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"add-group\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addGroup(uuid(), \"New Group\"));\r\n          }}>\r\n          <i className=\"icon icon-group-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupList = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditGroupName = ({ groupId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const groupTitle = useSelector((state) => state.addingGroup.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingGroup(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editGroup(groupId, groupTitle));\r\n          dispatch(actions.addingGroup(\"\"));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editGroup\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={groupTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.addingGroup(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupName;\r\n","import React from \"react\";\r\nimport GroupList from \"./GroupList\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditGroupName from \"./EditGroupName\";\r\n\r\nconst Group = ({ groupId, groupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentGroup = useSelector((state) => state.currentGroup.groupId);\r\n  const isEditingGroup = useSelector((state) => state.currentGroup.isEditing);\r\n  const checkNewGroup = currentGroup === groupId && groupTitle === \"New Group\";\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n  const listsCount = lists.filter((list) => list.group === groupId);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li className=\"toolbar-item\">\r\n          {checkNewGroup ? (\r\n            <EditGroupName\r\n              groupId={groupId}\r\n              isEditing={true}\r\n              oldName={groupTitle}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className={\r\n              isEditingGroup && checkNewGroup\r\n                ? \"toolbar-inner hide\"\r\n                : \"toolbar-inner\"\r\n            }\r\n            key={groupId}\r\n            onClick={() => {\r\n              currentGroup === groupId\r\n                ? dispatch(actions.setCurrentGroup(null)) &&\r\n                  dispatch(actions.isEditingGroup(false))\r\n                : dispatch(actions.setCurrentGroup(groupId));\r\n            }}>\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-group\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>{groupTitle}</span>\r\n            </div>\r\n            {listsCount.length > 0 ? (\r\n              <div className=\"toolbar-collapse-arrow\">\r\n                <i className=\"icon icon-arrow\"></i>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <ul\r\n        className={\r\n          currentGroup === groupId ? \"group-lists unhide\" : \"group-lists\"\r\n        }>\r\n        {lists.map((list) => {\r\n          return list.group === groupId ? (\r\n            <GroupList\r\n              key={list.id}\r\n              listId={list.id}\r\n              listTitle={list.title}\r\n              activeTaskCount={tasksCount(list.id).length}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Groups = () => {\r\n  const groups = useSelector((state) => state.groups);\r\n  return (\r\n    <div className=\"groups\">\r\n      {groups.map((group) => {\r\n        return (\r\n          <Group key={group.id} groupId={group.id} groupTitle={group.title} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst PremadeLists = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector((store) => store.tasks);\r\n  let myDay = 0;\r\n  let important = 0;\r\n  let planned = 0;\r\n  let tasksList = 0;\r\n\r\n  tasks.forEach((obj) => {\r\n    if (isToday(obj.addedToMyDay) && !obj.isChecked) {\r\n      myDay++;\r\n    }\r\n    if (obj.Important && !obj.isChecked) {\r\n      important++;\r\n    }\r\n    if (isFutur(obj.Planned) && !obj.isChecked) {\r\n      planned++;\r\n    }\r\n    if (obj.parentList === \"Tasks\" && !obj.isChecked) {\r\n      tasksList++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"My Day\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-sun\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>My Day</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{myDay > 0 ? myDay : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Important\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-star\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Important</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {important > 0 ? important : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Planned\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-calendar\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Planned</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{planned > 0 ? planned : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Tasks\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-home\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Tasks</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {tasksList > 0 ? tasksList : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremadeLists;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst List = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport AddList from \"./AddList\";\r\nimport Groups from \"./Groups\";\r\nimport PremadeLists from \"./PremadeLists\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"./List\";\r\n\r\nconst Toolbar = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth < 800 && isToolbarOpen\r\n          ? \"container container-left unshift\"\r\n          : \"container container-left\"\r\n      }>\r\n      <div className=\"left toolbar\">\r\n        <ul>\r\n          <PremadeLists />\r\n          {/* Devider */}\r\n          <div className=\"devider\"></div>\r\n          {/* End Devider */}\r\n          <Groups />\r\n          {lists.map((list) => {\r\n            return list.group === null ? (\r\n              <List\r\n                key={list.id}\r\n                listId={list.id}\r\n                listTitle={list.title}\r\n                activeTaskCount={tasksCount(list.id).length}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* Add List */}\r\n      <AddList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nconst AddStep = () => {\r\n  return (\r\n    <div className=\"task-item-body add-task-body add-step-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button className=\"btn btn-no-hover\">\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Step\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStep;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddToMyDay = ({ taskId }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"toolbar-item detailbar-item\"\r\n      onClick={() => {\r\n        dispatch(actions.addedToMyDay(taskId, Date.now()));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-sun\"></i>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Add To My Day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToMyDay;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DetailFooter = ({ currentTaskDate, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toolbar-item detail-footer\">\r\n      <div className=\"toolbar-inner\">\r\n        <div\r\n          className=\"toolbar-icon add-group\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Created on {currentTaskDate}</span>\r\n        </div>\r\n        <div\r\n          className=\"add-group detail-delete\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.deleteTask(sourceId));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailFooter;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Steps = ({ parentTaskId, steps }) => {\r\n  const dispatch = useDispatch();\r\n  return steps.map((step) => {\r\n    return (\r\n      <div key={step.id} className=\"task-item-body task-detail-title step\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkStep(parentTaskId, step.id, !step.isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                step.isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        <button className=\"btn task-item-title\">\r\n          <span>{step.title}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport Steps from \"./Steps\";\r\nimport EditTaskName from \"../center/EditTaskName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TaskDetail = ({\r\n  currentTaskId,\r\n  currentTaskTitle,\r\n  isChecked,\r\n  currentTaskSteps,\r\n}) => {\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask = source === \"TASK_DETAIL\" && isEditingTask;\r\n\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  return (\r\n    <div className=\"task-item-body task-detail-title\">\r\n      <div className=\"task-detail-header\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkTask(currentTaskId, !isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        {editingTask ? (\r\n          <EditTaskName\r\n            taskId={currentTaskId}\r\n            isEditing={isEditingTask}\r\n            oldName={currentTaskTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          className={\r\n            editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n          }>\r\n          <span>\r\n            <h2>{currentTaskTitle}</h2>\r\n          </span>\r\n        </button>\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_DETAIL\", currentTaskId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n          <Menu\r\n            id={currentTaskId}\r\n            source={\"TASK_DETAIL\"}\r\n            sourceId={currentTaskId}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Steps parentTaskId={currentTaskId} steps={currentTaskSteps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport AddStep from \"./AddStep\";\r\nimport AddToMyDay from \"./AddToMyDay\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Detailbar = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n\r\n  const currentTask = tasks.find((task) => task.id === currentTaskId);\r\n\r\n  const currentTaskTitle =\r\n    currentTask === undefined ? currentTaskId : currentTask.title;\r\n\r\n  const currentTaskIsChecked =\r\n    currentTask === undefined ? false : currentTask.isChecked;\r\n\r\n  const currentTaskSteps = currentTask === undefined ? [] : currentTask.steps;\r\n\r\n  const currentTaskDate =\r\n    currentTask === undefined\r\n      ? currentTaskId\r\n      : new Date(currentTask.createdAt).toDateString();\r\n\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth > 1020 && isDetailbarOpen\r\n          ? \"container container-right\"\r\n          : screenWidth > 1020 && !isDetailbarOpen\r\n          ? \"container container-right hide\"\r\n          : screenWidth < 1020 && isDetailbarOpen\r\n          ? \"container container-right unshift\"\r\n          : \"container container-right\"\r\n      }>\r\n      <TaskDetail\r\n        currentTaskId={currentTaskId}\r\n        currentTaskTitle={currentTaskTitle}\r\n        isChecked={currentTaskIsChecked}\r\n        currentTaskSteps={currentTaskSteps}\r\n      />\r\n      <AddStep />\r\n      <AddToMyDay taskId={currentTaskId} />\r\n      <DetailFooter\r\n        currentTaskDate={currentTaskDate}\r\n        sourceId={currentTaskId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detailbar;\r\n","import React from \"react\";\nimport Tasks from \"./components/center/Tasks\";\nimport Toolbar from \"./components/left/Toolbar\";\nimport Detailbar from \"./components/right/Detailbar\";\n\nimport * as actions from \"./redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  window.addEventListener(\"resize\", () => {\n    dispatch(actions.setScreenWidth(document.documentElement.clientWidth));\n  });\n\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Tasks />\n      <Detailbar />\n    </div>\n  );\n}\n\nexport default App;\n","import DummyData from \"../DummyData\";\r\n\r\nconst tasksReducer = (state = DummyData.Tasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          steps: action.payload.steps,\r\n          isChecked: action.payload.isChecked,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n          Important: action.payload.Important,\r\n          Planned: action.payload.Planned,\r\n          parentList: action.payload.parentList,\r\n          createdAt: action.payload.createdAt,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_TASK\":\r\n      const foundEditingTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingTask,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_TASK\":\r\n      const foundTask = state.find((task) => task.id === action.payload.id);\r\n      const newState = state.filter((task) => task.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          ...foundTask,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n\r\n    case \"IMPORTANT_TASK\":\r\n      const foundImportanTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newImportantState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newImportantState,\r\n        {\r\n          ...foundImportanTask,\r\n          Important: action.payload.Important,\r\n        },\r\n      ];\r\n\r\n    case \"ADD_TO_MY_DAY\":\r\n      const foundMyDayTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newMyDayState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newMyDayState,\r\n        {\r\n          ...foundMyDayTask,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_STEP\":\r\n      const foundParentTask = state.find(\r\n        (task) => task.id === action.payload.parentTaskId\r\n      );\r\n      const foundStep = foundParentTask.steps.find(\r\n        (step) => step.id === action.payload.id\r\n      );\r\n      const taskSteps = foundParentTask.steps.filter(\r\n        (step) => step.id !== action.payload.id\r\n      );\r\n      const newTaskSteps = [\r\n        ...taskSteps,\r\n        {\r\n          ...foundStep,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n      const newTask = {\r\n        ...foundParentTask,\r\n        steps: [...newTaskSteps],\r\n      };\r\n      const newStepState = state.filter(\r\n        (task) => task.id !== action.payload.parentTaskId\r\n      );\r\n      return [\r\n        ...newStepState,\r\n        {\r\n          ...newTask,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_TASK\":\r\n      const newDeleteState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst listsReducer = (state = DummyData.Lists, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          group: action.payload.group,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_LIST\":\r\n      const foundEditingList = state.find(\r\n        (list) => list.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingList,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_LIST\":\r\n      const newDeleteState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst groupsReducer = (state = DummyData.Groups, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GROUP\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_GROUP\":\r\n      const newState = state.filter((group) => group.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupsReducer;\r\n","const menuReducer = (\r\n  state = { isOpen: false, source: null, sourceId: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n        source: action.payload.source,\r\n        sourceId: action.payload.sourceId,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menuReducer;\r\n","const screenReducer = (\r\n  state = { width: document.documentElement.clientWidth },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WIDTH\":\r\n      return {\r\n        ...state,\r\n        width: action.payload.screenWidth,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import tasksReducer from \"./tasksReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport groupsReducer from \"./groupsReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\nimport {\r\n  currentListIdReducer,\r\n  currentTaskIdReducer,\r\n  currentGroupIdReducer,\r\n} from \"./currentReducer\";\r\nimport {\r\n  addingListReducer,\r\n  addingTaskReducer,\r\n  addingGroupReducer,\r\n} from \"./addingReducer\";\r\nimport { detailbarReducer, toolbarReducer } from \"./barsReducer\";\r\nimport screenReducer from \"./screenReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  lists: listsReducer,\r\n  groups: groupsReducer,\r\n  currentList: currentListIdReducer,\r\n  currentGroup: currentGroupIdReducer,\r\n  currentTask: currentTaskIdReducer,\r\n  addingList: addingListReducer,\r\n  addingGroup: addingGroupReducer,\r\n  addingTask: addingTaskReducer,\r\n  menu: menuReducer,\r\n  detailbar: detailbarReducer,\r\n  toolbar: toolbarReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const currentListIdReducer = (\r\n  state = { listId: \"Tasks\", title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LIST\":\r\n      return { ...state, listId: action.payload.id };\r\n\r\n    case \"IS_EDITING_LIST\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_LIST\":\r\n      return {\r\n        ...state,\r\n        listId: action.payload.listId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentGroupIdReducer = (\r\n  state = { groupId: null, isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_GROUP\":\r\n      return { ...state, groupId: action.payload.id };\r\n\r\n    case \"IS_EDITING_GROUP\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentTaskIdReducer = (\r\n  state = { taskId: null, title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_TASK\":\r\n      return { ...state, taskId: action.payload.id };\r\n\r\n    case \"IS_EDITING_TASK\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_TASK\":\r\n      return {\r\n        ...state,\r\n        taskId: action.payload.taskId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const addingListReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingGroupReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_GROUP\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingTaskReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const detailbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_DETAILBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toolbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_TOOLBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}