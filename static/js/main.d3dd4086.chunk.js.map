{"version":3,"sources":["redux/actions/actions.js","components/center/AddTask.js","components/MenuV2.js","components/center/EditTaskName.js","components/center/TaskItemV3.js","redux/utilities.js","components/ClickeOutSide.js","components/center/TaskItemsV3.js","components/center/EditListName.js","components/center/TasksHeader.js","components/center/Tasks.js","components/left/AddList.js","components/left/GroupList.js","components/left/EditGroupName.js","components/left/Group.js","components/left/Groups.js","components/left/PremadeLists.js","components/left/List.js","components/left/Toolbar.js","components/right/AddStep.js","components/right/AddToMyDay.js","components/right/DetailFooter.js","components/right/Steps.js","components/right/TaskDetail.js","components/right/DueDate.js","components/right/Detailbar.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/listsReducer.js","redux/reducers/groupsReducer.js","redux/reducers/menuReducer.js","redux/reducers/screenReducer.js","redux/reducers/rootReducer.js","redux/reducers/currentReducer.js","redux/reducers/addingReducer.js","redux/reducers/barsReducer.js","redux/store.js","redux/localStorage.js","index.js"],"names":["setCurrentGroup","groupId","type","payload","id","addingGroup","title","isEditingGroup","isEditing","setCurrentList","listId","addingList","editingList","isEditingList","setCurrentTask","taskId","addingTask","checkTask","isChecked","editingTask","isEditingTask","deleteTask","addedToMyDay","date","dueDate","Planned","openMenu","isOpen","source","sourceId","menuRename","openDetailbar","openToolbar","AddTask","dispatch","useDispatch","taskTitle","useSelector","state","currentListId","currentList","className","onClick","uuid","steps","Important","parentList","createdAt","Date","now","actions","name","maxLength","placeholder","value","onChange","e","target","MenuV2","taskOrList","menuSource","menu","EditTaskName","oldName","currentTask","useEffect","onBlurCapture","autoFocus","onFocus","TaskItemV3","task","tasks","find","getTaskById","isMenuOpen","currentTaskId","isDetailbarOpen","detailbar","toLocaleDateString","isImportant","console","log","isToday","inputDate","setHours","isFutur","ClickeOutSide","props","wrapperRef","useRef","ref","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useOutsideAlerter","children","TaskItmesV3","WhatToShow","taskIds","checkedTaskIds","map","push","key","length","impTaskIds","checkedImpTaskIds","planTaskIds","checkedPlanTaskIds","tasksTaskIds","checkedTasksTaskIds","listsTaskIds","checkedListsTaskIds","EditListName","listTitle","TasksHeader","currentListTitle","globalListId","Tasks","lists","list","undefined","screenWidth","screen","width","isToolbarOpen","toolbar","isBarOpen","AddList","group","GroupList","activeTaskCount","EditGroupName","groupTitle","Group","currentGroup","checkNewGroup","listsCount","filter","Groups","groups","PremadeLists","store","myDay","important","planned","tasksList","forEach","obj","List","Toolbar","AddStep","AddToMyDay","style","color","DetailFooter","currentTaskDate","Steps","parentTaskId","step","TaskDetail","currentTaskTitle","currentTaskSteps","DueDate","valueAsNumber","Detailbar","currentTaskIsChecked","toDateString","App","window","documentElement","clientWidth","tasksReducer","DummyData","action","foundEditingTask","newEditingState","foundTask","newState","foundImportanTask","newImportantState","foundMyDayTask","newMyDayState","foundDueDateTask","newDueDateState","foundParentTask","foundStep","taskSteps","newTaskSteps","newTask","newStepState","newDeleteState","listsReducer","Lists","foundEditingList","groupsReducer","menuReducer","screenReducer","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","saveState","getState","tists","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3dd4086.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                Group Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentGroup = (groupId) => {\r\n  return {\r\n    type: \"SET_GROUP\",\r\n    payload: { id: groupId },\r\n  };\r\n};\r\n\r\nexport const addingGroup = (title) => {\r\n  return {\r\n    type: \"ADDING_GROUP\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addGroup = (id, title) => {\r\n  return {\r\n    type: \"ADD_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editGroup = (id, title) => {\r\n  return {\r\n    type: \"EDIT_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const isEditingGroup = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_GROUP\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                List Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentList = (listId) => {\r\n  return {\r\n    type: \"SET_LIST\",\r\n    payload: { id: listId },\r\n  };\r\n};\r\n\r\nexport const addingList = (title) => {\r\n  return {\r\n    type: \"ADDING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addList = (id, title, groupId) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      group: groupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editList = (id, title) => {\r\n  return {\r\n    type: \"EDIT_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingList = (title) => {\r\n  return {\r\n    type: \"EDITING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingList = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_LIST\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Task Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentTask = (taskId) => {\r\n  return {\r\n    type: \"SET_TASK\",\r\n    payload: { id: taskId },\r\n  };\r\n};\r\n\r\nexport const addingTask = (title) => {\r\n  return {\r\n    type: \"ADDING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addTask = (id, title, listId) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      steps: [],\r\n      isChecked: false,\r\n      addedToMyDay: null,\r\n      Important: false,\r\n      Planned: null,\r\n      parentList: listId,\r\n      createdAt: Date.now(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const importantTask = (id, isImportant) => {\r\n  return {\r\n    type: \"IMPORTANT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      Important: isImportant,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkTask = (id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_TASK\",\r\n    payload: {\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkStep = (parentTaskId, id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_STEP\",\r\n    payload: {\r\n      parentTaskId: parentTaskId,\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editTask = (id, title) => {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingTask = (title) => {\r\n  return {\r\n    type: \"EDITING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingTask = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_TASK\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addedToMyDay = (id, date) => {\r\n  return {\r\n    type: \"ADD_TO_MY_DAY\",\r\n    payload: {\r\n      id: id,\r\n      addedToMyDay: date,\r\n    },\r\n  };\r\n};\r\n\r\nexport const dueDate = (id, date) => {\r\n  return {\r\n    type: \"DUE_DATE\",\r\n    payload: {\r\n      id: id,\r\n      Planned: date,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Menu Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openMenu = (isOpen, source, sourceId) => {\r\n  return {\r\n    type: \"OPEN_MENU\",\r\n    payload: { isOpen: isOpen, source: source, sourceId: sourceId },\r\n  };\r\n};\r\n\r\nexport const toggleMenu = (isOpen) => {\r\n  return {\r\n    type: \"TOGGLE_MENU\",\r\n    payload: { isOpen: isOpen },\r\n  };\r\n};\r\n\r\nexport const menuRename = (source, sourceId) => {\r\n  switch (source) {\r\n    case \"TASK_ITEM\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_DETAIL\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_HEADER\":\r\n      return {\r\n        type: \"RENAMEING_LIST\",\r\n        payload: {\r\n          listId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Bars Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openDetailbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_DETAILBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\nexport const openToolbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_TOOLBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Screen Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setScreenWidth = (screenWidth) => {\r\n  return {\r\n    type: \"SET_WIDTH\",\r\n    payload: {\r\n      screenWidth: screenWidth,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.addingTask.title);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  return (\r\n    <div className=\"task-item-body add-task-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button\r\n          className=\"btn btn-no-hover\"\r\n          onClick={() => {\r\n            dispatch(actions.addTask(uuid(), taskTitle, currentListId));\r\n            dispatch(actions.addingTask(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Task\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingTask(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\nconst MenuV2 = ({ source, sourceId, taskOrList }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const currentListId = useSelector((state) => state.currentList.listId);\r\n  // const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  // const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n\r\n  // const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n\r\n  // const openOrNot =\r\n  //   source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  // const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div className=\"tasks-toolbar-menu unhide\">\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuV2;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditTaskName = ({ taskId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingTask(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"add-list\"\r\n      onBlurCapture={() => {\r\n        dispatch(actions.editTask(taskId, taskTitle));\r\n        dispatch(actions.editingTask(\"\"));\r\n        dispatch(actions.isEditingTask(false));\r\n      }}>\r\n      {/* <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editTask(taskId, taskTitle));\r\n          dispatch(actions.editingTask(\"\"));\r\n          dispatch(actions.isEditingTask(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button> */}\r\n      <input\r\n        autoFocus\r\n        onFocus={() => {\r\n          dispatch(actions.editingTask(oldName));\r\n        }}\r\n        type=\"text\"\r\n        name=\"editTask\"\r\n        maxLength=\"255\"\r\n        // placeholder={oldName}\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingTask(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskName;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditTaskName from \"./EditTaskName\";\r\n\r\nconst getTaskById = (state, taskId) => {\r\n  return state.tasks.find((task) => task.id === taskId);\r\n};\r\n\r\nconst TaskItemV3 = ({ taskId }) => {\r\n  const task = useSelector((state) => getTaskById(state, taskId));\r\n  const { id, title, isChecked, Important, Planned } = task;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask =\r\n    currentTaskId === taskId && source === \"TASK_ITEM\" && isEditingTask;\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n\r\n  return (\r\n    <div className=\"task-item-body\">\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.checkTask(id, !isChecked));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isChecked\r\n                ? \"icon icon-checkbox-checked\"\r\n                : \"icon icon-checkbox-empty\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      {editingTask ? (\r\n        <EditTaskName taskId={id} isEditing={isEditingTask} oldName={title} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button\r\n        className={\r\n          editingTask\r\n            ? \"btn task-item-title hide\"\r\n            : Planned !== null\r\n            ? \"btn task-item-title planned\"\r\n            : \"btn task-item-title\"\r\n        }\r\n        onClick={() => {\r\n          if (isDetailbarOpen === false && currentTaskId !== id) {\r\n            dispatch(actions.setCurrentTask(id));\r\n            dispatch(actions.openDetailbar(true));\r\n          } else if (isDetailbarOpen === true && currentTaskId !== id) {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(id));\r\n            dispatch(actions.openDetailbar(true));\r\n          } else if (isDetailbarOpen === true && currentTaskId === id) {\r\n            dispatch(actions.openDetailbar(false));\r\n          } else if (isDetailbarOpen === false && currentTaskId === id) {\r\n            dispatch(actions.openDetailbar(true));\r\n          }\r\n        }}>\r\n        <span className={Planned !== null ? \"planned-title\" : \"\"}>{title}</span>\r\n        {Planned !== null ? (\r\n          <span className=\"planned-date\">\r\n            {new Date(Planned).toLocaleDateString()}\r\n          </span>\r\n        ) : null}\r\n      </button>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.importantTask(id, !Important));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              Important ? \"icon icon-star-checked\" : \"icon icon-star\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"tasks-toolbar-options\"\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentTask(id));\r\n          // dispatch(actions.openMenu(false, null, null));\r\n          console.log(isMenuOpen);\r\n          dispatch(\r\n            actions.openMenu(\r\n              isMenuOpen && currentTaskId === id && menuSource === \"TASK_ITEM\"\r\n                ? false\r\n                : true,\r\n              \"TASK_ITEM\",\r\n              id\r\n            )\r\n          );\r\n        }}>\r\n        <div className=\"tasks-toolbar-title-item\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-menu\"></i>\r\n          </button>\r\n        </div>\r\n        {/* <Menu id={currentTaskId} source={\"TASK_ITEM\"} sourceId={taskId} /> */}\r\n\r\n        {id === currentTaskId && menuSource === \"TASK_ITEM\" && isMenuOpen ? (\r\n          <MenuV2 source={\"TASK_ITEM\"} sourceId={id} taskOrList={\" task\"} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItemV3;\r\n","export const isToday = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  if (today === new Date(inputDate).setHours(0, 0, 0, 0)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isFutur = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  let futur = new Date(inputDate).setHours(0, 0, 0, 0);\r\n  if (today < futur) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"./../redux/actions/actions\";\r\n\r\n/**\r\n * This Component isn't mine I just wanted a quick fix\r\n * https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n */\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref) {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        dispatch(actions.toggleMenu(false));\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref]);\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function ClickeOutSide(props) {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  return <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n","import React from \"react\";\r\n// import TaskItem from \"./TaskItem\";\r\nimport TaskItemV3 from \"./TaskItemV3\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\nimport ClickeOutSide from \"../ClickeOutSide\";\r\n\r\nconst TaskItmesV3 = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n\r\n  const WhatToShow = () => {\r\n    switch (currentListId) {\r\n      case \"My Day\":\r\n        let taskIds = [];\r\n        let checkedTaskIds = [];\r\n        tasks.map((task) => {\r\n          return isToday(task.addedToMyDay)\r\n            ? task.isChecked\r\n              ? checkedTaskIds.push(task.id)\r\n              : taskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {taskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Important\":\r\n        let impTaskIds = [];\r\n        let checkedImpTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.Important\r\n            ? task.isChecked\r\n              ? checkedImpTaskIds.push(task.id)\r\n              : impTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {impTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedImpTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedImpTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Planned\":\r\n        let planTaskIds = [];\r\n        let checkedPlanTaskIds = [];\r\n        tasks.map((task) => {\r\n          return isFutur(task.Planned)\r\n            ? task.isChecked\r\n              ? checkedPlanTaskIds.push(task.id)\r\n              : planTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {planTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedPlanTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedPlanTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Tasks\":\r\n        let tasksTaskIds = [];\r\n        let checkedTasksTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.parentList === \"Tasks\"\r\n            ? task.isChecked\r\n              ? checkedTasksTaskIds.push(task.id)\r\n              : tasksTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {tasksTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedTasksTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedTasksTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        let listsTaskIds = [];\r\n        let checkedListsTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.parentList === currentListId\r\n            ? task.isChecked\r\n              ? checkedListsTaskIds.push(task.id)\r\n              : listsTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {listsTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedListsTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedListsTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-items\">\r\n      <ClickeOutSide>\r\n        <WhatToShow />\r\n      </ClickeOutSide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItmesV3;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditListName = ({ listId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.currentList.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingList(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"add-list\"\r\n      onBlurCapture={() => {\r\n        dispatch(actions.editList(listId, listTitle));\r\n        dispatch(actions.editingList(\"\"));\r\n        dispatch(actions.isEditingList(false));\r\n      }}>\r\n      {/* <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editList(listId, listTitle));\r\n          dispatch(actions.editingList(\"\"));\r\n          dispatch(actions.isEditingList(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button> */}\r\n      <input\r\n        autoFocus\r\n        onFocus={() => {\r\n          dispatch(actions.editingList(oldName));\r\n        }}\r\n        type=\"text\"\r\n        name=\"editList\"\r\n        maxLength=\"255\"\r\n        // placeholder={oldName}\r\n        value={listTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingList(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListName;\r\n","import React from \"react\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditListName from \"./EditListName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ClickeOutSide from \"../ClickeOutSide\";\r\n\r\nconst TasksHeader = ({ currentListId, currentListTitle }) => {\r\n  const isEditingList = useSelector((state) => state.currentList.isEditing);\r\n  // const source = useSelector((state) => state.menu.source);\r\n  // const editingList = source === \"TASK_HEADER\" && isEditingList;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const globalListId = useSelector((state) => state.currentList.listId);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  return (\r\n    <div className=\"tasks-toolbar\">\r\n      <div className=\"tasks-toolbar-title\">\r\n        {isEditingList ? (\r\n          <EditListName\r\n            listId={currentListId}\r\n            isEditing={isEditingList}\r\n            oldName={currentListTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          onFocus={() => {\r\n            dispatch(actions.menuRename(\"TASK_HEADER\", currentListId));\r\n          }}\r\n          className={\r\n            isEditingList\r\n              ? \"btn task-item-title editable-title hide\"\r\n              : \"btn task-item-title editable-title\"\r\n          }>\r\n          <h1 className=\"list-title\">{currentListTitle}</h1>\r\n        </button>\r\n      </div>\r\n      {currentListId === \"My Day\" ||\r\n      currentListId === \"Important\" ||\r\n      currentListId === \"Planned\" ||\r\n      currentListId === \"Tasks\" ? (\r\n        \"\"\r\n      ) : (\r\n        <ClickeOutSide>\r\n          <div\r\n            className=\"tasks-toolbar-options\"\r\n            onClick={() => {\r\n              dispatch(\r\n                actions.openMenu(\r\n                  isMenuOpen &&\r\n                    globalListId === currentListId &&\r\n                    menuSource === \"TASK_HEADER\"\r\n                    ? false\r\n                    : true,\r\n                  \"TASK_HEADER\",\r\n                  currentListId\r\n                )\r\n              );\r\n            }}>\r\n            <div className=\"tasks-toolbar-title-item\">\r\n              <button className=\"btn\">\r\n                <i className=\"icon icon-menu\"></i>\r\n              </button>\r\n            </div>\r\n\r\n            {/* <Menu\r\n            id={currentListId}\r\n            source={\"TASK_HEADER\"}\r\n            sourceId={currentListId}\r\n          /> */}\r\n\r\n            {/* Open menu if menu is opened and currentList is current list */}\r\n\r\n            {globalListId === currentListId &&\r\n            menuSource === \"TASK_HEADER\" &&\r\n            isMenuOpen ? (\r\n              <MenuV2\r\n                source={\"TASK_HEADER\"}\r\n                sourceId={currentListId}\r\n                taskOrList={\" list\"}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </ClickeOutSide>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksHeader;\r\n","import React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\n// import TaskItmes from \"./TaskItems\";\r\n// import TaskItmesV2 from \"./TaskItemsV2\";\r\nimport TaskItmesV3 from \"./TaskItemsV3\";\r\nimport TasksHeader from \"./TasksHeader\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Tasks = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentList = lists.find((list) => list.id === currentListId);\r\n  const currentListTitle =\r\n    currentList === undefined ? currentListId : currentList.title;\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const isBarOpen = isDetailbarOpen || isToolbarOpen;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container container-center\">\r\n      <button\r\n        className={\r\n          screenWidth < 800 ? \"btn overlay-btn\" : \"btn overlay-btn hide\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openToolbar(!isToolbarOpen));\r\n        }}>\r\n        <i className=\"icon icon-ham\"></i>\r\n      </button>\r\n\r\n      <div\r\n        className={\r\n          screenWidth < 1020 && isBarOpen ? \"overlay unhide\" : \"overlay\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}></div>\r\n\r\n      <div className=\"center tasks\">\r\n        <TasksHeader\r\n          currentListId={currentListId}\r\n          currentListTitle={currentListTitle}\r\n        />\r\n        {/* Task Items */}\r\n        {/* <TaskItmes /> */}\r\n        {/* <TaskItmesV2 /> */}\r\n        <TaskItmesV3 />\r\n        {/* Add Task */}\r\n        <AddTask />\r\n        {/* End Task Items */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.addingList.title);\r\n\r\n  return (\r\n    <div className=\"add-list-and-group\">\r\n      <div className=\"add-list\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addList(uuid(), listTitle, null));\r\n            dispatch(actions.addingList(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addList\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New List\"\r\n          value={listTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingList(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"add-group\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addGroup(uuid(), \"New Group\"));\r\n          }}>\r\n          <i className=\"icon icon-group-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupList = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.openToolbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditGroupName = ({ groupId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const groupTitle = useSelector((state) => state.addingGroup.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingGroup(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editGroup(groupId, groupTitle));\r\n          dispatch(actions.addingGroup(\"\"));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editGroup\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={groupTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.addingGroup(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupName;\r\n","import React from \"react\";\r\nimport GroupList from \"./GroupList\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditGroupName from \"./EditGroupName\";\r\n\r\nconst Group = ({ groupId, groupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentGroup = useSelector((state) => state.currentGroup.groupId);\r\n  const isEditingGroup = useSelector((state) => state.currentGroup.isEditing);\r\n  const checkNewGroup = currentGroup === groupId && groupTitle === \"New Group\";\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n  const listsCount = lists.filter((list) => list.group === groupId);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li className=\"toolbar-item\">\r\n          {checkNewGroup ? (\r\n            <EditGroupName\r\n              groupId={groupId}\r\n              isEditing={true}\r\n              oldName={groupTitle}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className={\r\n              isEditingGroup && checkNewGroup\r\n                ? \"toolbar-inner hide\"\r\n                : \"toolbar-inner\"\r\n            }\r\n            key={groupId}\r\n            onClick={() => {\r\n              currentGroup === groupId\r\n                ? dispatch(actions.setCurrentGroup(null)) &&\r\n                  dispatch(actions.isEditingGroup(false))\r\n                : dispatch(actions.setCurrentGroup(groupId));\r\n            }}>\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-group\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>{groupTitle}</span>\r\n            </div>\r\n            {listsCount.length > 0 ? (\r\n              <div className=\"toolbar-collapse-arrow\">\r\n                <i className=\"icon icon-arrow\"></i>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <ul\r\n        className={\r\n          currentGroup === groupId ? \"group-lists unhide\" : \"group-lists\"\r\n        }>\r\n        {lists.map((list) => {\r\n          return list.group === groupId ? (\r\n            <GroupList\r\n              key={list.id}\r\n              listId={list.id}\r\n              listTitle={list.title}\r\n              activeTaskCount={tasksCount(list.id).length}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Groups = () => {\r\n  const groups = useSelector((state) => state.groups);\r\n  return (\r\n    <div className=\"groups\">\r\n      {groups.map((group) => {\r\n        return (\r\n          <Group key={group.id} groupId={group.id} groupTitle={group.title} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst PremadeLists = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector((store) => store.tasks);\r\n  let myDay = 0;\r\n  let important = 0;\r\n  let planned = 0;\r\n  let tasksList = 0;\r\n\r\n  tasks.forEach((obj) => {\r\n    if (isToday(obj.addedToMyDay) && !obj.isChecked) {\r\n      myDay++;\r\n    }\r\n    if (obj.Important && !obj.isChecked) {\r\n      important++;\r\n    }\r\n    if (isFutur(obj.Planned) && !obj.isChecked) {\r\n      planned++;\r\n    }\r\n    if (obj.parentList === \"Tasks\" && !obj.isChecked) {\r\n      tasksList++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"My Day\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-sun\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>My Day</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{myDay > 0 ? myDay : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Important\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-star\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Important</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {important > 0 ? important : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Planned\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-calendar\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Planned</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{planned > 0 ? planned : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Tasks\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-home\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Tasks</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {tasksList > 0 ? tasksList : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremadeLists;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst List = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.openToolbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport AddList from \"./AddList\";\r\nimport Groups from \"./Groups\";\r\nimport PremadeLists from \"./PremadeLists\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"./List\";\r\n\r\nconst Toolbar = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth < 800 && isToolbarOpen\r\n          ? \"container container-left unshift\"\r\n          : \"container container-left\"\r\n      }>\r\n      <div className=\"left toolbar\">\r\n        <ul>\r\n          <PremadeLists />\r\n          {/* Devider */}\r\n          <div className=\"devider\"></div>\r\n          {/* End Devider */}\r\n          <Groups />\r\n          {lists.map((list) => {\r\n            return list.group === null ? (\r\n              <List\r\n                key={list.id}\r\n                listId={list.id}\r\n                listTitle={list.title}\r\n                activeTaskCount={tasksCount(list.id).length}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* Add List */}\r\n      <AddList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nconst AddStep = () => {\r\n  return (\r\n    <div className=\"task-item-body add-task-body add-step-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button className=\"btn btn-no-hover\">\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Step\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStep;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isToday } from \"../../redux/utilities\";\r\n\r\nconst AddToMyDay = ({ taskId, addedToMyDay }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"detailbar-item\"\r\n      onClick={() => {\r\n        if (isToday(addedToMyDay)) {\r\n          return;\r\n        } else {\r\n          dispatch(actions.addedToMyDay(taskId, Date.now()));\r\n        }\r\n      }}>\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-sun\"></i>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          {isToday(addedToMyDay) ? (\r\n            <span style={{ color: \"lightblue\" }}>Added To My Day</span>\r\n          ) : (\r\n            <span>Add To My Day</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isToday(addedToMyDay) ? (\r\n        <button\r\n          className=\"return-to-null\"\r\n          onClick={() => {\r\n            dispatch(actions.addedToMyDay(taskId, null));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToMyDay;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DetailFooter = ({ currentTaskDate, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toolbar-item detail-footer\">\r\n      <div className=\"toolbar-inner\">\r\n        <div\r\n          className=\"toolbar-icon add-group\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Created on {currentTaskDate}</span>\r\n        </div>\r\n        <div\r\n          className=\"add-group detail-delete\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.deleteTask(sourceId));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailFooter;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Steps = ({ parentTaskId, steps }) => {\r\n  const dispatch = useDispatch();\r\n  return steps.map((step) => {\r\n    return (\r\n      <div key={step.id} className=\"task-item-body task-detail-title step\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkStep(parentTaskId, step.id, !step.isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                step.isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        <button className=\"btn task-item-title\">\r\n          <span>{step.title}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\n// import Menu from \"../Menu\";\r\nimport Steps from \"./Steps\";\r\nimport EditTaskName from \"../center/EditTaskName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TaskDetail = ({\r\n  currentTaskId,\r\n  currentTaskTitle,\r\n  isChecked,\r\n  currentTaskSteps,\r\n}) => {\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  // const source = useSelector((state) => state.menu.source);\r\n  // const editingTask = source === \"TASK_DETAIL\" && isEditingTask;\r\n  // const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  const dispatch = useDispatch();\r\n  // const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  return (\r\n    <div className=\"task-item-body task-detail-title\">\r\n      <div className=\"task-detail-header\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkTask(currentTaskId, !isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        {isEditingTask ? (\r\n          <EditTaskName\r\n            taskId={currentTaskId}\r\n            isEditing={isEditingTask}\r\n            oldName={currentTaskTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          onFocus={() => {\r\n            dispatch(actions.menuRename(\"TASK_DETAIL\", currentTaskId));\r\n          }}\r\n          className={\r\n            isEditingTask\r\n              ? \"btn task-item-title editable-title hide\"\r\n              : \"btn task-item-title editable-title\"\r\n          }>\r\n          <span>\r\n            <h2>{currentTaskTitle}</h2>\r\n          </span>\r\n        </button>\r\n        {/* <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_DETAIL\", currentTaskId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n          <Menu\r\n            id={currentTaskId}\r\n            source={\"TASK_DETAIL\"}\r\n            sourceId={currentTaskId}\r\n          />\r\n        </div> */}\r\n      </div>\r\n      <Steps parentTaskId={currentTaskId} steps={currentTaskSteps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\n\r\nconst DueDate = ({ taskId, Planned }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"detailbar-item input-container\">\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-calendar\"></i>\r\n        </div>\r\n        {Planned !== null ? (\r\n          <span style={{ color: \"lightblue\" }}>\r\n            &nbsp; Due Date {new Date(Planned).toLocaleDateString()}\r\n          </span>\r\n        ) : (\r\n          <span>&nbsp; Due Date</span>\r\n        )}\r\n        <input\r\n          type=\"date\"\r\n          className=\"datepicker-input\"\r\n          id=\"datepicker-input\"\r\n          onChange={(e) => {\r\n            return dispatch(actions.dueDate(taskId, e.target.valueAsNumber));\r\n          }}\r\n        />\r\n      </div>\r\n      {Planned !== null ? (\r\n        <button\r\n          className=\"return-to-null\"\r\n          onClick={() => {\r\n            dispatch(actions.dueDate(taskId, null));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DueDate;\r\n","import React from \"react\";\r\nimport AddStep from \"./AddStep\";\r\nimport AddToMyDay from \"./AddToMyDay\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DueDate from \"./DueDate\";\r\n\r\nconst Detailbar = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n\r\n  const currentTask = tasks.find((task) => task.id === currentTaskId);\r\n  const addedToMyDay =\r\n    currentTask === undefined ? null : currentTask.addedToMyDay;\r\n  const Planned = currentTask === undefined ? null : currentTask.Planned;\r\n\r\n  const currentTaskTitle =\r\n    currentTask === undefined ? currentTaskId : currentTask.title;\r\n\r\n  const currentTaskIsChecked =\r\n    currentTask === undefined ? false : currentTask.isChecked;\r\n\r\n  const currentTaskSteps = currentTask === undefined ? [] : currentTask.steps;\r\n\r\n  const currentTaskDate =\r\n    currentTask === undefined\r\n      ? currentTaskId\r\n      : new Date(currentTask.createdAt).toDateString();\r\n\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth > 1020 && isDetailbarOpen\r\n          ? \"container container-right\"\r\n          : screenWidth > 1020 && !isDetailbarOpen\r\n          ? \"container container-right hide\"\r\n          : screenWidth < 1020 && isDetailbarOpen\r\n          ? \"container container-right unshift\"\r\n          : \"container container-right\"\r\n      }>\r\n      <TaskDetail\r\n        currentTaskId={currentTaskId}\r\n        currentTaskTitle={currentTaskTitle}\r\n        isChecked={currentTaskIsChecked}\r\n        currentTaskSteps={currentTaskSteps}\r\n      />\r\n      <AddStep />\r\n      <AddToMyDay taskId={currentTaskId} addedToMyDay={addedToMyDay} />\r\n      <DueDate taskId={currentTaskId} Planned={Planned} />\r\n      <DetailFooter\r\n        currentTaskDate={currentTaskDate}\r\n        sourceId={currentTaskId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detailbar;\r\n","import React from \"react\";\nimport Tasks from \"./components/center/Tasks\";\nimport Toolbar from \"./components/left/Toolbar\";\nimport Detailbar from \"./components/right/Detailbar\";\n\nimport * as actions from \"./redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  window.addEventListener(\"resize\", () => {\n    dispatch(actions.setScreenWidth(document.documentElement.clientWidth));\n  });\n\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Tasks />\n      <Detailbar />\n    </div>\n  );\n}\n\nexport default App;\n","import DummyData from \"../DummyData\";\r\n\r\nconst tasksReducer = (state = DummyData.Tasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          steps: action.payload.steps,\r\n          isChecked: action.payload.isChecked,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n          Important: action.payload.Important,\r\n          Planned: action.payload.Planned,\r\n          parentList: action.payload.parentList,\r\n          createdAt: action.payload.createdAt,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_TASK\":\r\n      const foundEditingTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingTask,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_TASK\":\r\n      const foundTask = state.find((task) => task.id === action.payload.id);\r\n      const newState = state.filter((task) => task.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          ...foundTask,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n\r\n    case \"IMPORTANT_TASK\":\r\n      const foundImportanTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newImportantState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newImportantState,\r\n        {\r\n          ...foundImportanTask,\r\n          Important: action.payload.Important,\r\n        },\r\n      ];\r\n\r\n    case \"ADD_TO_MY_DAY\":\r\n      const foundMyDayTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newMyDayState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newMyDayState,\r\n        {\r\n          ...foundMyDayTask,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n        },\r\n      ];\r\n\r\n    case \"DUE_DATE\":\r\n      const foundDueDateTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newDueDateState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newDueDateState,\r\n        {\r\n          ...foundDueDateTask,\r\n          Planned: action.payload.Planned,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_STEP\":\r\n      const foundParentTask = state.find(\r\n        (task) => task.id === action.payload.parentTaskId\r\n      );\r\n      const foundStep = foundParentTask.steps.find(\r\n        (step) => step.id === action.payload.id\r\n      );\r\n      const taskSteps = foundParentTask.steps.filter(\r\n        (step) => step.id !== action.payload.id\r\n      );\r\n      const newTaskSteps = [\r\n        ...taskSteps,\r\n        {\r\n          ...foundStep,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n      const newTask = {\r\n        ...foundParentTask,\r\n        steps: [...newTaskSteps],\r\n      };\r\n      const newStepState = state.filter(\r\n        (task) => task.id !== action.payload.parentTaskId\r\n      );\r\n      return [\r\n        ...newStepState,\r\n        {\r\n          ...newTask,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_TASK\":\r\n      const newDeleteState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst listsReducer = (state = DummyData.Lists, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          group: action.payload.group,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_LIST\":\r\n      const foundEditingList = state.find(\r\n        (list) => list.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingList,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_LIST\":\r\n      const newDeleteState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst groupsReducer = (state = DummyData.Groups, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GROUP\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_GROUP\":\r\n      const newState = state.filter((group) => group.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupsReducer;\r\n","const menuReducer = (\r\n  state = { isOpen: false, source: null, sourceId: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n        source: action.payload.source,\r\n        sourceId: action.payload.sourceId,\r\n      };\r\n\r\n    case \"TOGGLE_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menuReducer;\r\n","const screenReducer = (\r\n  state = { width: document.documentElement.clientWidth },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WIDTH\":\r\n      return {\r\n        ...state,\r\n        width: action.payload.screenWidth,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import tasksReducer from \"./tasksReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport groupsReducer from \"./groupsReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\nimport {\r\n  currentListIdReducer,\r\n  currentTaskIdReducer,\r\n  currentGroupIdReducer,\r\n} from \"./currentReducer\";\r\nimport {\r\n  addingListReducer,\r\n  addingTaskReducer,\r\n  addingGroupReducer,\r\n} from \"./addingReducer\";\r\nimport { detailbarReducer, toolbarReducer } from \"./barsReducer\";\r\nimport screenReducer from \"./screenReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  lists: listsReducer,\r\n  groups: groupsReducer,\r\n  currentList: currentListIdReducer,\r\n  currentGroup: currentGroupIdReducer,\r\n  currentTask: currentTaskIdReducer,\r\n  addingList: addingListReducer,\r\n  addingGroup: addingGroupReducer,\r\n  addingTask: addingTaskReducer,\r\n  menu: menuReducer,\r\n  detailbar: detailbarReducer,\r\n  toolbar: toolbarReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const currentListIdReducer = (\r\n  state = { listId: \"Tasks\", title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LIST\":\r\n      return { ...state, listId: action.payload.id };\r\n\r\n    case \"IS_EDITING_LIST\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_LIST\":\r\n      return {\r\n        ...state,\r\n        listId: action.payload.listId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentGroupIdReducer = (\r\n  state = { groupId: null, isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_GROUP\":\r\n      return { ...state, groupId: action.payload.id };\r\n\r\n    case \"IS_EDITING_GROUP\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentTaskIdReducer = (\r\n  state = { taskId: null, title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_TASK\":\r\n      return { ...state, taskId: action.payload.id };\r\n\r\n    case \"IS_EDITING_TASK\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_TASK\":\r\n      return {\r\n        ...state,\r\n        taskId: action.payload.taskId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const addingListReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingGroupReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_GROUP\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingTaskReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const detailbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_DETAILBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toolbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_TOOLBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      tasks: store.getState().tasks,\r\n      tists: store.getState().tists,\r\n      groups: store.getState().groups,\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}