{"version":3,"sources":["redux/actions/actions.js","components/center/AddTask.js","components/MenuV2.js","components/center/EditTaskName.js","components/center/TaskItemV3.js","redux/utilities.js","components/ClickeOutSide.js","components/center/TaskItemsV3.js","components/center/EditListName.js","components/center/TasksHeader.js","components/center/Tasks.js","components/left/AddList.js","components/left/GroupList.js","components/left/EditGroupName.js","components/left/Group.js","components/left/Groups.js","components/left/PremadeLists.js","components/left/List.js","components/left/Toolbar.js","components/right/AddStep.js","components/right/AddToMyDay.js","components/right/DetailFooter.js","components/right/Steps.js","components/right/TaskDetail.js","components/right/DueDate.js","components/right/Detailbar.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/listsReducer.js","redux/reducers/groupsReducer.js","redux/reducers/menuReducer.js","redux/reducers/screenReducer.js","redux/reducers/rootReducer.js","redux/reducers/currentReducer.js","redux/reducers/addingReducer.js","redux/reducers/barsReducer.js","redux/store.js","redux/localStorage.js","index.js"],"names":["setCurrentGroup","groupId","type","payload","id","addingGroup","title","isEditingGroup","isEditing","setCurrentList","listId","addingList","editingList","isEditingList","setCurrentTask","taskId","addingTask","checkTask","isChecked","editingTask","isEditingTask","deleteTask","addedToMyDay","date","dueDate","Planned","openMenu","isOpen","source","sourceId","openDetailbar","openToolbar","AddTask","dispatch","useDispatch","taskTitle","useSelector","state","currentListId","currentList","className","onClick","uuid","steps","Important","parentList","createdAt","Date","now","actions","name","maxLength","placeholder","value","onChange","e","target","MenuV2","taskOrList","menuSource","menu","EditTaskName","oldName","currentTask","useEffect","TaskItemV3","task","tasks","find","getTaskById","isMenuOpen","currentTaskId","isDetailbarOpen","detailbar","toLocaleDateString","isImportant","console","log","isToday","inputDate","setHours","isFutur","ClickeOutSide","props","wrapperRef","useRef","ref","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useOutsideAlerter","children","TaskItmesV3","WhatToShow","taskIds","checkedTaskIds","map","push","key","length","impTaskIds","checkedImpTaskIds","planTaskIds","checkedPlanTaskIds","tasksTaskIds","checkedTasksTaskIds","listsTaskIds","checkedListsTaskIds","EditListName","listTitle","TasksHeader","currentListTitle","globalListId","Tasks","lists","list","undefined","screenWidth","screen","width","isToolbarOpen","toolbar","isBarOpen","AddList","group","GroupList","activeTaskCount","EditGroupName","groupTitle","Group","currentGroup","checkNewGroup","listsCount","filter","Groups","groups","PremadeLists","store","myDay","important","planned","tasksList","forEach","obj","List","Toolbar","AddStep","AddToMyDay","style","color","DetailFooter","currentTaskDate","Steps","parentTaskId","step","TaskDetail","currentTaskTitle","currentTaskSteps","DueDate","valueAsNumber","Detailbar","currentTaskIsChecked","toDateString","App","window","documentElement","clientWidth","tasksReducer","DummyData","action","foundEditingTask","newEditingState","foundTask","newState","foundImportanTask","newImportantState","foundMyDayTask","newMyDayState","foundDueDateTask","newDueDateState","foundParentTask","foundStep","taskSteps","newTaskSteps","newTask","newStepState","newDeleteState","listsReducer","Lists","foundEditingList","groupsReducer","menuReducer","screenReducer","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","saveState","getState","tists","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAIaA,EAAkB,SAACC,GAC9B,MAAO,CACLC,KAAM,YACNC,QAAS,CAAEC,GAAIH,KAINI,EAAc,SAACC,GAC1B,MAAO,CACLJ,KAAM,eACNC,QAAS,CAAEG,MAAOA,KAwBTC,EAAiB,SAACC,GAC7B,MAAO,CACLN,KAAM,mBACNC,QAAS,CACPK,UAAWA,KASJC,EAAiB,SAACC,GAC7B,MAAO,CACLR,KAAM,WACNC,QAAS,CAAEC,GAAIM,KAINC,EAAa,SAACL,GACzB,MAAO,CACLJ,KAAM,cACNC,QAAS,CAAEG,MAAOA,KAyBTM,EAAc,SAACN,GAC1B,MAAO,CACLJ,KAAM,eACNC,QAAS,CAAEG,MAAOA,KAITO,EAAgB,SAACL,GAC5B,MAAO,CACLN,KAAM,kBACNC,QAAS,CACPK,UAAWA,KAkBJM,EAAiB,SAACC,GAC7B,MAAO,CACLb,KAAM,WACNC,QAAS,CAAEC,GAAIW,KAINC,EAAa,SAACV,GACzB,MAAO,CACLJ,KAAM,cACNC,QAAS,CAAEG,MAAOA,KA+BTW,EAAY,SAACb,EAAIc,GAC5B,MAAO,CACLhB,KAAM,aACNC,QAAS,CACPC,GAAIA,EACJc,UAAWA,KA0BJC,EAAc,SAACb,GAC1B,MAAO,CACLJ,KAAM,eACNC,QAAS,CAAEG,MAAOA,KAITc,EAAgB,SAACZ,GAC5B,MAAO,CACLN,KAAM,kBACNC,QAAS,CACPK,UAAWA,KAKJa,EAAa,SAACjB,GACzB,MAAO,CACLF,KAAM,cACNC,QAAS,CACPC,GAAIA,KAKGkB,EAAe,SAAClB,EAAImB,GAC/B,MAAO,CACLrB,KAAM,gBACNC,QAAS,CACPC,GAAIA,EACJkB,aAAcC,KAKPC,EAAU,SAACpB,EAAImB,GAC1B,MAAO,CACLrB,KAAM,WACNC,QAAS,CACPC,GAAIA,EACJqB,QAASF,KASFG,EAAW,SAACC,EAAQC,EAAQC,GACvC,MAAO,CACL3B,KAAM,YACNC,QAAS,CAAEwB,OAAQA,EAAQC,OAAQA,EAAQC,SAAUA,KAiD5CC,EAAgB,SAACH,GAC5B,MAAO,CACLzB,KAAM,iBACNC,QAAS,CACPwB,OAAQA,KAKDI,EAAc,SAACJ,GAC1B,MAAO,CACLzB,KAAM,eACNC,QAAS,CACPwB,OAAQA,K,OCzQCK,EA/BC,WACd,IAAMC,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMrB,WAAWV,SACpDgC,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY7B,UAC/D,OACE,yBAAK8B,UAAU,gCACb,yBAAKA,UAAU,qBACb,4BACEA,UAAU,mBACVC,QAAS,WACPR,EDmHH,CACL/B,KAAM,WACNC,QAAS,CACPC,GCtH+BsC,cDuH/BpC,MCvHuC6B,EDwHvCQ,MAAO,GACPzB,WAAW,EACXI,aAAc,KACdsB,WAAW,EACXnB,QAAS,KACToB,WC7HkDP,ED8HlDQ,UAAWC,KAAKC,SC7HVf,EAASgB,EAAmB,OAE9B,uBAAGT,UAAU,oBAEf,2BACEA,UAAU,eACVtC,KAAK,OACLgD,KAAK,UACLC,UAAU,MACVC,YAAY,WACZC,MAAOlB,EACPmB,SAAU,SAACC,GACTtB,EAASgB,EAAmBM,EAAEC,OAAOH,cC4DlCI,EApFA,SAAC,GAAsC,IAApC7B,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,SAAU6B,EAAiB,EAAjBA,WAC5BzB,EAAWC,cAKXyB,EAAavB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKhC,UASrD,OACE,yBAAKY,UAAU,6BACb,4BACE,yBACEC,QAAS,WACPR,EFkOc,SAACL,EAAQC,GACjC,OAAQD,GACN,IAAK,YASL,IAAK,cACH,MAAO,CACL1B,KAAM,iBACNC,QAAS,CACPY,OAAQc,EACRrB,WAAW,IAIjB,IAAK,cACH,MAAO,CACLN,KAAM,iBACNC,QAAS,CACPO,OAAQmB,EACRrB,WAAW,KE3PAyC,CAAmBrB,EAAQC,MAEtC,wBAAIW,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,uCAAakB,OA6BrB,yBACEjB,QAAS,WACY,gBAAfkB,GACF1B,EAASgB,GAAsB,IAC/BhB,EAASgB,EAAuB,UAChChB,EFqCL,CACL/B,KAAM,cACNC,QAAS,CACPC,GExCoCyB,OAE5BI,EAASgB,GAAsB,IAC/BhB,EAASgB,EAAmBpB,OAGhC,wBAAIW,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,wCAAckB,UCzCfG,EAjCM,SAAC,GAAoC,IAAlC9C,EAAiC,EAAjCA,OAAQP,EAAyB,EAAzBA,UAAWsD,EAAc,EAAdA,QACnC7B,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAM0B,YAAYzD,SAM3D,OAJA0D,qBAAU,WACR/B,EAASgB,EAAsBzC,OAI/B,yBAAKgC,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EHiKD,CACL/B,KAAM,YACNC,QAAS,CACPC,GGpK8BW,EHqK9BT,MGrKsC6B,KAClCF,EAASgB,EAAoB,KAC7BhB,EAASgB,GAAsB,MAEjC,uBAAGT,UAAU,oBAEf,2BACEtC,KAAK,OACLgD,KAAK,WACLC,UAAU,MACVC,YAAaU,EACbT,MAAOlB,EACPmB,SAAU,SAACC,GACTtB,EAASgB,EAAoBM,EAAEC,OAAOH,aC2FjCY,EA/GI,SAAC,GAAgB,IAAdlD,EAAa,EAAbA,OACdmD,EAAO9B,aAAY,SAACC,GAAD,OALP,SAACA,EAAOtB,GAC1B,OAAOsB,EAAM8B,MAAMC,MAAK,SAACF,GAAD,OAAUA,EAAK9D,KAAOW,KAIVsD,CAAYhC,EAAOtB,MAC/CX,EAA6C8D,EAA7C9D,GAAIE,EAAyC4D,EAAzC5D,MAAOY,EAAkCgD,EAAlChD,UAAW0B,EAAuBsB,EAAvBtB,UAAWnB,EAAYyC,EAAZzC,QAEnCQ,EAAWC,cAEXoC,EAAalC,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKjC,UAC/CgC,EAAavB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKhC,UAC/C2C,EAAgBnC,aAAY,SAACC,GAAD,OAAWA,EAAM0B,YAAYhD,UACzDK,EAAgBgB,aAAY,SAACC,GAAD,OAAWA,EAAM0B,YAAYvD,aACzDoB,EAASQ,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKhC,UAC3CT,EACJoD,IAAkBxD,GAAqB,cAAXa,GAA0BR,EAClDoD,EAAkBpC,aAAY,SAACC,GAAD,OAAWA,EAAMoC,UAAU9C,UAE/D,OACE,yBAAKa,UAAU,kBACb,yBACEA,UAAU,qBACVC,QAAS,WACPR,EAASgB,EAAkB7C,GAAKc,MAElC,0BAAMsB,UAAU,YACd,uBACEA,UACEtB,EACI,6BACA,+BAIXC,EACC,kBAAC,EAAD,CAAcJ,OAAQX,EAAII,UAAWY,EAAe0C,QAASxD,IAE7D,GAEF,4BACEkC,UACErB,EACI,2BACY,OAAZM,EACA,8BACA,sBAENgB,QAAS,YACiB,IAApB+B,GAA6BD,IAAkBnE,GACjD6B,EAASgB,EAAuB7C,IAChC6B,EAASgB,GAAsB,MACF,IAApBuB,GAA4BD,IAAkBnE,GACvD6B,EAASgB,GAAsB,IAC/BhB,EAASgB,EAAuB7C,IAChC6B,EAASgB,GAAsB,MACF,IAApBuB,GAA4BD,IAAkBnE,EACvD6B,EAASgB,GAAsB,KACF,IAApBuB,GAA6BD,IAAkBnE,GACxD6B,EAASgB,GAAsB,MAGnC,0BAAMT,UAAuB,OAAZf,EAAmB,gBAAkB,IAAKnB,GAC9C,OAAZmB,EACC,0BAAMe,UAAU,gBACb,IAAIO,KAAKtB,GAASiD,sBAEnB,MAEN,yBACElC,UAAU,qBACVC,QAAS,WACPR,EJoEmB,SAAC7B,EAAIuE,GAChC,MAAO,CACLzE,KAAM,iBACNC,QAAS,CACPC,GAAIA,EACJwC,UAAW+B,IIzEE1B,CAAsB7C,GAAKwC,MAEtC,0BAAMJ,UAAU,YACd,uBACEA,UACEI,EAAY,yBAA2B,qBAK/C,yBACEJ,UAAU,wBACVC,QAAS,WACPR,EAASgB,EAAuB7C,IAEhCwE,QAAQC,IAAIP,GACZrC,EACEgB,GACEqB,GAAcC,IAAkBnE,GAAqB,cAAfuD,EAGtC,YACAvD,MAIN,yBAAKoC,UAAU,4BACb,4BAAQA,UAAU,OAChB,uBAAGA,UAAU,qBAKhBpC,IAAOmE,GAAgC,cAAfZ,GAA8BW,EACrD,kBAAC,EAAD,CAAQ1C,OAAQ,YAAaC,SAAUzB,EAAIsD,WAAY,UAEvD,MClHGoB,EAAU,SAACC,GAEtB,OADY,IAAIhC,MAAOiC,SAAS,EAAG,EAAG,EAAG,KAC3B,IAAIjC,KAAKgC,GAAWC,SAAS,EAAG,EAAG,EAAG,IAOzCC,EAAU,SAACF,GAGtB,OAFY,IAAIhC,MAAOiC,SAAS,EAAG,EAAG,EAAG,GAC7B,IAAIjC,KAAKgC,GAAWC,SAAS,EAAG,EAAG,EAAG,IC2BrC,SAASE,EAAcC,GACpC,IAAMC,EAAaC,iBAAO,MAG1B,OA9BF,SAA2BC,GACzB,IAAMrD,EAAWC,cACjB8B,qBAAU,WAIR,SAASuB,EAAmBC,GACtBF,EAAIG,UAAYH,EAAIG,QAAQC,SAASF,EAAMhC,SAC7CvB,ENgOC,CACL/B,KAAM,cACNC,QAAS,CAAEwB,QMlOqB,KAMhC,OADAgE,SAASC,iBAAiB,YAAaL,GAChC,WAELI,SAASE,oBAAoB,YAAaN,MAI3C,CAACD,IAQJQ,CAAkBV,GAEX,yBAAKE,IAAKF,GAAaD,EAAMY,UCnCtC,IA+HeC,EA/HK,WAClB,IAAM7B,EAAQ/B,aAAY,SAACC,GAAD,OAAWA,EAAM8B,SACrC7B,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY7B,UAEzDuF,EAAa,WACjB,OAAQ3D,GACN,IAAK,SACH,IAAI4D,EAAU,GACVC,EAAiB,GAQrB,OAPAhC,EAAMiC,KAAI,SAAClC,GACT,OAAOY,EAAQZ,EAAK5C,cAChB4C,EAAKhD,UACHiF,EAAeE,KAAKnC,EAAK9D,IACzB8F,EAAQG,KAAKnC,EAAK9D,IACpB,QAGJ,6BACG8F,EAAQE,KAAI,SAACrF,GAAD,OACX,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,OAElCoF,EAAeI,OAAS,EAAI,gDAA6B,KACzDJ,EAAeC,KAAI,SAACrF,GAAD,OAClB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,QAKzC,IAAK,YACH,IAAIyF,EAAa,GACbC,EAAoB,GAQxB,OAPAtC,EAAMiC,KAAI,SAAClC,GACT,OAAOA,EAAKtB,UACRsB,EAAKhD,UACHuF,EAAkBJ,KAAKnC,EAAK9D,IAC5BoG,EAAWH,KAAKnC,EAAK9D,IACvB,QAGJ,6BACGoG,EAAWJ,KAAI,SAACrF,GAAD,OACd,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,OAElC0F,EAAkBF,OAAS,EAAI,gDAA6B,KAC5DE,EAAkBL,KAAI,SAACrF,GAAD,OACrB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,QAKzC,IAAK,UACH,IAAI2F,EAAc,GACdC,EAAqB,GAQzB,OAPAxC,EAAMiC,KAAI,SAAClC,GACT,OAAOe,EAAQf,EAAKzC,SAChByC,EAAKhD,UACHyF,EAAmBN,KAAKnC,EAAK9D,IAC7BsG,EAAYL,KAAKnC,EAAK9D,IACxB,QAGJ,6BACGsG,EAAYN,KAAI,SAACrF,GAAD,OACf,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,OAElC4F,EAAmBJ,OAAS,EAAI,gDAA6B,KAC7DI,EAAmBP,KAAI,SAACrF,GAAD,OACtB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,QAKzC,IAAK,QACH,IAAI6F,EAAe,GACfC,EAAsB,GAQ1B,OAPA1C,EAAMiC,KAAI,SAAClC,GACT,MAA2B,UAApBA,EAAKrB,WACRqB,EAAKhD,UACH2F,EAAoBR,KAAKnC,EAAK9D,IAC9BwG,EAAaP,KAAKnC,EAAK9D,IACzB,QAGJ,6BACGwG,EAAaR,KAAI,SAACrF,GAAD,OAChB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,OAElC8F,EAAoBN,OAAS,EAAI,gDAA6B,KAC9DM,EAAoBT,KAAI,SAACrF,GAAD,OACvB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,QAKzC,QACE,IAAI+F,EAAe,GACfC,EAAsB,GAQ1B,OAPA5C,EAAMiC,KAAI,SAAClC,GACT,OAAOA,EAAKrB,aAAeP,EACvB4B,EAAKhD,UACH6F,EAAoBV,KAAKnC,EAAK9D,IAC9B0G,EAAaT,KAAKnC,EAAK9D,IACzB,QAGJ,6BACG0G,EAAaV,KAAI,SAACrF,GAAD,OAChB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,OAElCgG,EAAoBR,OAAS,EAAI,gDAA6B,KAC9DQ,EAAoBX,KAAI,SAACrF,GAAD,OACvB,kBAAC,EAAD,CAAYuF,IAAKvF,EAAQA,OAAQA,UAO7C,OACE,yBAAKyB,UAAU,cACb,kBAAC0C,EAAD,KACE,kBAACe,EAAD,SC3FOe,EAjCM,SAAC,GAAoC,IAAlCtG,EAAiC,EAAjCA,OAAQF,EAAyB,EAAzBA,UAAWsD,EAAc,EAAdA,QACnC7B,EAAWC,cACX+E,EAAY7E,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAYjC,SAM3D,OAJA0D,qBAAU,WACR/B,EAASgB,EAAsBzC,OAI/B,yBAAKgC,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,ER4DD,CACL/B,KAAM,YACNC,QAAS,CACPC,GQ/D8BM,ERgE9BJ,MQhEsC2G,KAClChF,EAASgB,EAAoB,KAC7BhB,EAASgB,GAAsB,MAEjC,uBAAGT,UAAU,oBAEf,2BACEtC,KAAK,OACLgD,KAAK,WACLC,UAAU,MACVC,YAAaU,EACbT,MAAO4D,EACP3D,SAAU,SAACC,GACTtB,EAASgB,EAAoBM,EAAEC,OAAOH,aC8DjC6D,EArFK,SAAC,GAAyC,IAAvC5E,EAAsC,EAAtCA,cAAe6E,EAAuB,EAAvBA,iBAC9BtG,EAAgBuB,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY/B,aAEzDI,EAAyB,gBADhBwB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKhC,WACDf,EAE1CoB,EAAWC,cAEXoC,EAAalC,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKjC,UAC/CyF,EAAehF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY7B,UACxDiD,EAAavB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKhC,UACrD,OACE,yBAAKY,UAAU,iBACb,yBAAKA,UAAU,uBACZ5B,EACC,kBAAC,EAAD,CACEF,OAAQ4B,EACR9B,UAAWK,EACXiD,QAASqD,IAGX,GAEF,yBACE3E,UACE5B,EACI,gCACA,4BAEN,wBAAI4B,UAAU,cAAc2E,KAGb,WAAlB7E,GACiB,cAAlBA,GACkB,YAAlBA,GACkB,UAAlBA,EACE,GAEA,kBAAC4C,EAAD,KACE,yBACE1C,UAAU,wBACVC,QAAS,WACPR,EACEgB,GACEqB,GACE8C,IAAiB9E,GACF,gBAAfqB,EAGF,cACArB,MAIN,yBAAKE,UAAU,4BACb,4BAAQA,UAAU,OAChB,uBAAGA,UAAU,qBAYhB4E,IAAiB9E,GACH,gBAAfqB,GACAW,EACE,kBAAC,EAAD,CACE1C,OAAQ,cACRC,SAAUS,EACVoB,WAAY,UAGd,OCvBC2D,EAnDD,WACZ,IAAMC,EAAQlF,aAAY,SAACC,GAAD,OAAWA,EAAMiF,SACrChF,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY7B,UACzD6B,EAAc+E,EAAMlD,MAAK,SAACmD,GAAD,OAAUA,EAAKnH,KAAOkC,KAC/C6E,OACYK,IAAhBjF,EAA4BD,EAAgBC,EAAYjC,MACpDmH,EAAcrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,OAAOC,SAClDnD,EAAkBpC,aAAY,SAACC,GAAD,OAAWA,EAAMoC,UAAU9C,UACzDiG,EAAgBxF,aAAY,SAACC,GAAD,OAAWA,EAAMwF,QAAQlG,UACrDmG,EAAYtD,GAAmBoD,EAE/B3F,EAAWC,cACjB,OACE,yBAAKM,UAAU,8BACb,4BACEA,UACEiF,EAAc,IAAM,kBAAoB,uBAE1ChF,QAAS,WACPR,EAASgB,GAAqB2E,MAEhC,uBAAGpF,UAAU,mBAGf,yBACEA,UACEiF,EAAc,MAAQK,EAAY,iBAAmB,UAEvDrF,QAAS,WACPR,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,UAGpC,yBAAKT,UAAU,gBACb,kBAAC,EAAD,CACEF,cAAeA,EACf6E,iBAAkBA,IAKpB,kBAAC,EAAD,MAEA,kBAAC,EAAD,SCVOY,EAvCC,WACd,IAAM9F,EAAWC,cACX+E,EAAY7E,aAAY,SAACC,GAAD,OAAWA,EAAM1B,WAAWL,SAE1D,OACE,yBAAKkC,UAAU,sBACb,yBAAKA,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EXoDH,CACL/B,KAAM,WACNC,QAAS,CACPC,GWvD+BsC,cXwD/BpC,MWxDuC2G,EXyDvCe,MWzDkD,QAC5C/F,EAASgB,EAAmB,OAE9B,uBAAGT,UAAU,oBAEf,2BACEtC,KAAK,OACLgD,KAAK,UACLC,UAAU,MACVC,YAAY,WACZC,MAAO4D,EACP3D,SAAU,SAACC,GACTtB,EAASgB,EAAmBM,EAAEC,OAAOH,YAI3C,yBAAKb,UAAU,aACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EXfH,CACL/B,KAAM,YACNC,QAAS,CACPC,GWYgCsC,cXXhCpC,MWWwC,iBAEpC,uBAAGkC,UAAU,6BCJRyF,EA5BG,SAAC,GAA4C,IAA1CvH,EAAyC,EAAzCA,OAAQuG,EAAiC,EAAjCA,UAAWiB,EAAsB,EAAtBA,gBAChCjG,EAAWC,cACjB,OACE,yBACEoE,IAAK5F,EACL+B,QAAS,WACPR,EAASgB,EAAuBvC,IAChCuB,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,SAElC,wBAAIT,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,8BAAOyE,IAET,yBAAKzE,UAAU,iBACZ0F,EAAkB,EAAIA,EAAkB,QCYtCC,EAhCO,SAAC,GAAqC,IAAnClI,EAAkC,EAAlCA,QAASO,EAAyB,EAAzBA,UAAWsD,EAAc,EAAdA,QACrC7B,EAAWC,cACXkG,EAAahG,aAAY,SAACC,GAAD,OAAWA,EAAMhC,YAAYC,SAM5D,OAJA0D,qBAAU,WACR/B,EAASgB,EAAuBzC,OAIhC,yBAAKgC,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EbYD,CACL/B,KAAM,aACNC,QAAS,CACPC,Gaf+BH,EbgB/BK,MahBwC8H,KACpCnG,EAASgB,EAAoB,OAE/B,uBAAGT,UAAU,oBAEf,2BACEtC,KAAK,OACLgD,KAAK,YACLC,UAAU,MACVC,YAAaU,EACbT,MAAO+E,EACP9E,SAAU,SAACC,GACTtB,EAASgB,EAAoBM,EAAEC,OAAOH,aCuDjCgF,EA9ED,SAAC,GAA6B,IAA3BpI,EAA0B,EAA1BA,QAASmI,EAAiB,EAAjBA,WAClBnG,EAAWC,cACXiC,EAAQ/B,aAAY,SAACC,GAAD,OAAWA,EAAM8B,SACrCmD,EAAQlF,aAAY,SAACC,GAAD,OAAWA,EAAMiF,SACrCgB,EAAelG,aAAY,SAACC,GAAD,OAAWA,EAAMiG,aAAarI,WACzDM,EAAiB6B,aAAY,SAACC,GAAD,OAAWA,EAAMiG,aAAa9H,aAC3D+H,EAAgBD,IAAiBrI,GAA0B,cAAfmI,EAO5CI,EAAalB,EAAMmB,QAAO,SAAClB,GAAD,OAAUA,EAAKS,QAAU/H,KAEzD,OACE,oCACE,6BACE,wBAAIuC,UAAU,gBACX+F,EACC,kBAAC,EAAD,CACEtI,QAASA,EACTO,WAAW,EACXsD,QAASsE,IAGX,GAEF,yBACE5F,UACEjC,GAAkBgI,EACd,qBACA,gBAENjC,IAAKrG,EACLwC,QAAS,WACP6F,IAAiBrI,EACbgC,EAASgB,EAAwB,QACjChB,EAASgB,GAAuB,IAChChB,EAASgB,EAAwBhD,MAEvC,yBAAKuC,UAAU,gBACb,uBAAGA,UAAU,qBAEf,yBAAKA,UAAU,iBACb,8BAAO4F,IAERI,EAAWjC,OAAS,EACnB,yBAAK/D,UAAU,0BACb,uBAAGA,UAAU,qBAGf,MAKR,wBACEA,UACE8F,IAAiBrI,EAAU,qBAAuB,eAEnDqH,EAAMlB,KAAI,SAACmB,GACV,OAAOA,EAAKS,QAAU/H,EACpB,kBAAC,EAAD,CACEqG,IAAKiB,EAAKnH,GACVM,OAAQ6G,EAAKnH,GACb6G,UAAWM,EAAKjH,MAChB4H,iBA5DQxH,EA4DoB6G,EAAKnH,GA3D/B+D,EAAMsE,QAChB,SAACvE,GAAD,OAAUA,EAAKrB,aAAenC,IAA6B,IAAnBwD,EAAKhD,cA0DAqF,SAGvC,GA/DS,IAAC7F,QCGPgI,EAbA,WACb,IAAMC,EAASvG,aAAY,SAACC,GAAD,OAAWA,EAAMsG,UAC5C,OACE,yBAAKnG,UAAU,UACZmG,EAAOvC,KAAI,SAAC4B,GACX,OACE,kBAAC,EAAD,CAAO1B,IAAK0B,EAAM5H,GAAIH,QAAS+H,EAAM5H,GAAIgI,WAAYJ,EAAM1H,aC0GtDsI,EA9GM,WACnB,IAAM3G,EAAWC,cAEXiC,EAAQ/B,aAAY,SAACyG,GAAD,OAAWA,EAAM1E,SACvC2E,EAAQ,EACRC,EAAY,EACZC,EAAU,EACVC,EAAY,EAiBhB,OAfA9E,EAAM+E,SAAQ,SAACC,GACTrE,EAAQqE,EAAI7H,gBAAkB6H,EAAIjI,WACpC4H,IAEEK,EAAIvG,YAAcuG,EAAIjI,WACxB6H,IAEE9D,EAAQkE,EAAI1H,WAAa0H,EAAIjI,WAC/B8H,IAEqB,UAAnBG,EAAItG,YAA2BsG,EAAIjI,WACrC+H,OAKF,oCACE,yBACExG,QAAS,WACPR,EAASgB,EAAuB,WAChChB,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,SAElC,wBAAIT,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,yCAEF,yBAAKA,UAAU,iBAAiBsG,EAAQ,EAAIA,EAAQ,OAI1D,yBACErG,QAAS,WACPR,EAASgB,EAAuB,cAChChB,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,SAElC,wBAAIT,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,oBAEf,yBAAKA,UAAU,iBACb,4CAEF,yBAAKA,UAAU,iBACZuG,EAAY,EAAIA,EAAY,OAKrC,yBACEtG,QAAS,WACPR,EAASgB,EAAuB,YAChChB,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,SAElC,wBAAIT,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,wBAEf,yBAAKA,UAAU,iBACb,0CAEF,yBAAKA,UAAU,iBAAiBwG,EAAU,EAAIA,EAAU,OAI9D,yBACEvG,QAAS,WACPR,EAASgB,EAAuB,UAChChB,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,SAElC,wBAAIT,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,oBAEf,yBAAKA,UAAU,iBACb,wCAEF,yBAAKA,UAAU,iBACZyG,EAAY,EAAIA,EAAY,SC1E5BG,EA5BF,SAAC,GAA4C,IAA1C1I,EAAyC,EAAzCA,OAAQuG,EAAiC,EAAjCA,UAAWiB,EAAsB,EAAtBA,gBAC3BjG,EAAWC,cACjB,OACE,yBACEoE,IAAK5F,EACL+B,QAAS,WACPR,EAASgB,EAAuBvC,IAChCuB,EAASgB,GAAsB,IAC/BhB,EAASgB,GAAoB,IAC7BhB,EAASgB,EAAuB,SAElC,wBAAIT,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,8BAAOyE,IAET,yBAAKzE,UAAU,iBACZ0F,EAAkB,EAAIA,EAAkB,QC6BtCmB,EA9CC,WACd,IAAM/B,EAAQlF,aAAY,SAACC,GAAD,OAAWA,EAAMiF,SACrCnD,EAAQ/B,aAAY,SAACC,GAAD,OAAWA,EAAM8B,SACrCyD,EAAgBxF,aAAY,SAACC,GAAD,OAAWA,EAAMwF,QAAQlG,UACrD8F,EAAcrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,OAAOC,SAQxD,OACE,yBACEnF,UACEiF,EAAc,KAAOG,EACjB,mCACA,4BAEN,yBAAKpF,UAAU,gBACb,4BACE,kBAAC,EAAD,MAEA,yBAAKA,UAAU,YAEf,kBAAC,EAAD,MACC8E,EAAMlB,KAAI,SAACmB,GACV,OAAsB,OAAfA,EAAKS,MACV,kBAAC,EAAD,CACE1B,IAAKiB,EAAKnH,GACVM,OAAQ6G,EAAKnH,GACb6G,UAAWM,EAAKjH,MAChB4H,iBA3BMxH,EA2BsB6G,EAAKnH,GA1BjC+D,EAAMsE,QAChB,SAACvE,GAAD,OAAUA,EAAKrB,aAAenC,IAA6B,IAAnBwD,EAAKhD,cAyBEqF,SAGvC,GA9BO,IAAC7F,OAoChB,kBAAC,EAAD,QC3BS4I,EAnBC,WACd,OACE,yBAAK9G,UAAU,8CACb,yBAAKA,UAAU,qBACb,4BAAQA,UAAU,oBAChB,uBAAGA,UAAU,oBAEf,2BACEA,UAAU,eACVtC,KAAK,OACLgD,KAAK,UACLC,UAAU,MACVC,YAAY,gBC4BPmG,EArCI,SAAC,GAA8B,IAA5BxI,EAA2B,EAA3BA,OAAQO,EAAmB,EAAnBA,aACtBW,EAAWC,cACjB,OACE,yBACEM,UAAU,iBACVC,QAAS,WACHqC,EAAQxD,IAGVW,EAASgB,EAAqBlC,EAAQgC,KAAKC,UAG/C,yBAAKR,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACZsC,EAAQxD,GACP,0BAAMkI,MAAO,CAAEC,MAAO,cAAtB,mBAEA,iDAIL3E,EAAQxD,GACP,4BACEkB,UAAU,iBACVC,QAAS,WACPR,EAASgB,EAAqBlC,EAAQ,SAExC,uBAAGyB,UAAU,oBAEb,OCEKkH,EAnCM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,gBAAiB9H,EAAe,EAAfA,SACjCI,EAAWC,cAEjB,OACE,yBAAKM,UAAU,8BACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,yBACVC,QAAS,WACPR,EAASgB,GAAsB,IAC/BhB,EAASgB,EAAuB,SAElC,4BAAQT,UAAU,OAChB,uBAAGA,UAAU,sBAGjB,yBAAKA,UAAU,iBACb,4CAAkBmH,IAEpB,yBACEnH,UAAU,0BACVC,QAAS,WACPR,EAASgB,GAAsB,IAC/BhB,EAASgB,EAAmBpB,IAC5BI,EAASgB,EAAuB,SAElC,4BAAQT,UAAU,OAChB,uBAAGA,UAAU,yBCAVoH,EA3BD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAclH,EAAY,EAAZA,MACvBV,EAAWC,cACjB,OAAOS,EAAMyD,KAAI,SAAC0D,GAChB,OACE,yBAAKxD,IAAKwD,EAAK1J,GAAIoC,UAAU,yCAC3B,yBACEA,UAAU,qBACVC,QAAS,WACPR,EtB0Ja,SAAC4H,EAAczJ,EAAIc,GAC1C,MAAO,CACLhB,KAAM,aACNC,QAAS,CACP0J,aAAcA,EACdzJ,GAAIA,EACJc,UAAWA,IsBhKI+B,CAAkB4G,EAAcC,EAAK1J,IAAK0J,EAAK5I,cAE1D,0BAAMsB,UAAU,YACd,uBACEA,UACEsH,EAAK5I,UACD,6BACA,+BAIZ,4BAAQsB,UAAU,uBAChB,8BAAOsH,EAAKxJ,aCqDPyJ,EAtEI,SAAC,GAKb,IAJLxF,EAII,EAJJA,cACAyF,EAGI,EAHJA,iBACA9I,EAEI,EAFJA,UACA+I,EACI,EADJA,iBAEM7I,EAAgBgB,aAAY,SAACC,GAAD,OAAWA,EAAM0B,YAAYvD,aAEzDW,EAAyB,gBADhBiB,aAAY,SAACC,GAAD,OAAWA,EAAMuB,KAAKhC,WACDR,EAE1Ca,EAAWC,cAEjB,OACE,yBAAKM,UAAU,oCACb,yBAAKA,UAAU,sBACb,yBACEA,UAAU,qBACVC,QAAS,WACPR,EAASgB,EAAkBsB,GAAgBrD,MAE7C,0BAAMsB,UAAU,YACd,uBACEA,UACEtB,EACI,6BACA,+BAIXC,EACC,kBAAC,EAAD,CACEJ,OAAQwD,EACR/D,UAAWY,EACX0C,QAASkG,IAGX,GAEF,4BACExH,UACErB,EAAc,2BAA6B,uBAE7C,8BACE,4BAAK6I,MAsBX,kBAAC,EAAD,CAAOH,aAActF,EAAe5B,MAAOsH,MC/BlCC,EArCC,SAAC,GAAyB,IAAvBnJ,EAAsB,EAAtBA,OAAQU,EAAc,EAAdA,QACnBQ,EAAWC,cACjB,OACE,yBAAKM,UAAU,kCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,wBAEF,OAAZf,EACC,0BAAM+H,MAAO,CAAEC,MAAO,cAAtB,iBACmB,IAAI1G,KAAKtB,GAASiD,sBAGrC,+CAEF,2BACExE,KAAK,OACLsC,UAAU,mBACVpC,GAAG,mBACHkD,SAAU,SAACC,GACT,OAAOtB,EAASgB,EAAgBlC,EAAQwC,EAAEC,OAAO2G,oBAI1C,OAAZ1I,EACC,4BACEe,UAAU,iBACVC,QAAS,WACPR,EAASgB,EAAgBlC,EAAQ,SAEnC,uBAAGyB,UAAU,oBAEb,OCyBK4H,EArDG,WAChB,IAAMjG,EAAQ/B,aAAY,SAACC,GAAD,OAAWA,EAAM8B,SACrCI,EAAgBnC,aAAY,SAACC,GAAD,OAAWA,EAAM0B,YAAYhD,UAEzDgD,EAAcI,EAAMC,MAAK,SAACF,GAAD,OAAUA,EAAK9D,KAAOmE,KAC/CjD,OACYkG,IAAhBzD,EAA4B,KAAOA,EAAYzC,aAC3CG,OAA0B+F,IAAhBzD,EAA4B,KAAOA,EAAYtC,QAEzDuI,OACYxC,IAAhBzD,EAA4BQ,EAAgBR,EAAYzD,MAEpD+J,OACY7C,IAAhBzD,GAAoCA,EAAY7C,UAE5C+I,OAAmCzC,IAAhBzD,EAA4B,GAAKA,EAAYpB,MAEhEgH,OACYnC,IAAhBzD,EACIQ,EACA,IAAIxB,KAAKgB,EAAYjB,WAAWwH,eAEhC9F,EAAkBpC,aAAY,SAACC,GAAD,OAAWA,EAAMoC,UAAU9C,UACzD8F,EAAcrF,aAAY,SAACC,GAAD,OAAWA,EAAMqF,OAAOC,SAExD,OACE,yBACEnF,UACEiF,EAAc,MAAQjD,EAClB,4BACAiD,EAAc,OAASjD,EACvB,iCACAiD,EAAc,MAAQjD,EACtB,oCACA,6BAEN,kBAAC,EAAD,CACED,cAAeA,EACfyF,iBAAkBA,EAClB9I,UAAWmJ,EACXJ,iBAAkBA,IAEpB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYlJ,OAAQwD,EAAejD,aAAcA,IACjD,kBAAC,EAAD,CAASP,OAAQwD,EAAe9C,QAASA,IACzC,kBAAC,EAAD,CACEkI,gBAAiBA,EACjB9H,SAAU0C,MC/BHgG,MAhBf,WACE,IAAMtI,EAAWC,cAMjB,OAJAsI,OAAO5E,iBAAiB,UAAU,WAChC3D,E1B2SK,CACL/B,KAAM,YACNC,QAAS,CACPsH,Y0B9S8B9B,SAAS8E,gBAAgBC,kBAIzD,yBAAKlI,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,wBCkHSmI,GAnIM,WAAsC,IAArCtI,EAAoC,uDAA5BuI,GAAUvD,MAAOwD,EAAW,uCACxD,OAAQA,EAAO3K,MACb,IAAK,WACH,MAAM,GAAN,oBACKmC,GADL,CAEE,CACEjC,GAAIyK,EAAO1K,QAAQC,GACnBE,MAAOuK,EAAO1K,QAAQG,MACtBqC,MAAOkI,EAAO1K,QAAQwC,MACtBzB,UAAW2J,EAAO1K,QAAQe,UAC1BI,aAAcuJ,EAAO1K,QAAQmB,aAC7BsB,UAAWiI,EAAO1K,QAAQyC,UAC1BnB,QAASoJ,EAAO1K,QAAQsB,QACxBoB,WAAYgI,EAAO1K,QAAQ0C,WAC3BC,UAAW+H,EAAO1K,QAAQ2C,aAIhC,IAAK,YACH,IAAMgI,EAAmBzI,EAAM+B,MAC7B,SAACF,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEjC2K,EAAkB1I,EAAMoG,QAC5B,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEvC,MAAM,GAAN,oBACK2K,GADL,8BAGOD,GAHP,IAIIxK,MAAOuK,EAAO1K,QAAQG,UAI5B,IAAK,aACH,IAAM0K,EAAY3I,EAAM+B,MAAK,SAACF,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAC5D6K,EAAW5I,EAAMoG,QAAO,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MACnE,MAAM,GAAN,oBACK6K,GADL,8BAGOD,GAHP,IAII9J,UAAW2J,EAAO1K,QAAQe,cAIhC,IAAK,iBACH,IAAMgK,EAAoB7I,EAAM+B,MAC9B,SAACF,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEjC+K,EAAoB9I,EAAMoG,QAC9B,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEvC,MAAM,GAAN,oBACK+K,GADL,8BAGOD,GAHP,IAIItI,UAAWiI,EAAO1K,QAAQyC,cAIhC,IAAK,gBACH,IAAMwI,EAAiB/I,EAAM+B,MAC3B,SAACF,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEjCiL,EAAgBhJ,EAAMoG,QAC1B,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEvC,MAAM,GAAN,oBACKiL,GADL,8BAGOD,GAHP,IAII9J,aAAcuJ,EAAO1K,QAAQmB,iBAInC,IAAK,WACH,IAAMgK,EAAmBjJ,EAAM+B,MAC7B,SAACF,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEjCmL,EAAkBlJ,EAAMoG,QAC5B,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEvC,MAAM,GAAN,oBACKmL,GADL,8BAGOD,GAHP,IAII7J,QAASoJ,EAAO1K,QAAQsB,YAI9B,IAAK,aACH,IAAM+J,EAAkBnJ,EAAM+B,MAC5B,SAACF,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQ0J,gBAEjC4B,EAAYD,EAAgB7I,MAAMyB,MACtC,SAAC0F,GAAD,OAAUA,EAAK1J,KAAOyK,EAAO1K,QAAQC,MAEjCsL,EAAYF,EAAgB7I,MAAM8F,QACtC,SAACqB,GAAD,OAAUA,EAAK1J,KAAOyK,EAAO1K,QAAQC,MAEjCuL,EAAY,uBACbD,GADa,8BAGXD,GAHW,IAIdvK,UAAW2J,EAAO1K,QAAQe,cAGxB0K,EAAO,6BACRJ,GADQ,IAEX7I,MAAM,aAAKgJ,KAEPE,EAAexJ,EAAMoG,QACzB,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQ0J,gBAEvC,MAAM,GAAN,oBACKgC,GADL,iBAGOD,KAIT,IAAK,cACH,IAAME,EAAiBzJ,EAAMoG,QAC3B,SAACvE,GAAD,OAAUA,EAAK9D,KAAOyK,EAAO1K,QAAQC,MAEvC,OAAO,aAAI0L,GAEb,QACE,OAAOzJ,ICzFE0J,GAtCM,WAAsC,IAArC1J,EAAoC,uDAA5BuI,GAAUoB,MAAOnB,EAAW,uCACxD,OAAQA,EAAO3K,MACb,IAAK,WACH,MAAM,GAAN,oBACKmC,GADL,CAEE,CACEjC,GAAIyK,EAAO1K,QAAQC,GACnBE,MAAOuK,EAAO1K,QAAQG,MACtB0H,MAAO6C,EAAO1K,QAAQ6H,SAI5B,IAAK,YACH,IAAMiE,EAAmB5J,EAAM+B,MAC7B,SAACmD,GAAD,OAAUA,EAAKnH,KAAOyK,EAAO1K,QAAQC,MAEjC2K,EAAkB1I,EAAMoG,QAC5B,SAAClB,GAAD,OAAUA,EAAKnH,KAAOyK,EAAO1K,QAAQC,MAEvC,MAAM,GAAN,oBACK2K,GADL,8BAGOkB,GAHP,IAII3L,MAAOuK,EAAO1K,QAAQG,UAI5B,IAAK,cACH,IAAMwL,EAAiBzJ,EAAMoG,QAC3B,SAAClB,GAAD,OAAUA,EAAKnH,KAAOyK,EAAO1K,QAAQC,MAEvC,OAAO,aAAI0L,GAEb,QACE,OAAOzJ,ICRE6J,GA1BO,WAAuC,IAAtC7J,EAAqC,uDAA7BuI,GAAUlC,OAAQmC,EAAW,uCAC1D,OAAQA,EAAO3K,MACb,IAAK,YACH,MAAM,GAAN,oBACKmC,GADL,CAEE,CACEjC,GAAIyK,EAAO1K,QAAQC,GACnBE,MAAOuK,EAAO1K,QAAQG,SAI5B,IAAK,aACH,IAAM2K,EAAW5I,EAAMoG,QAAO,SAACT,GAAD,OAAWA,EAAM5H,KAAOyK,EAAO1K,QAAQC,MACrE,MAAM,GAAN,oBACK6K,GADL,CAEE,CACE7K,GAAIyK,EAAO1K,QAAQC,GACnBE,MAAOuK,EAAO1K,QAAQG,SAI5B,QACE,OAAO+B,ICAE8J,GAxBK,WAGd,IAFJ9J,EAEG,uDAFK,CAAEV,QAAQ,EAAOC,OAAQ,KAAMC,SAAU,MACjDgJ,EACG,uCACH,OAAQA,EAAO3K,MACb,IAAK,YACH,OAAO,6BACFmC,GADL,IAEEV,OAAQkJ,EAAO1K,QAAQwB,OACvBC,OAAQiJ,EAAO1K,QAAQyB,OACvBC,SAAUgJ,EAAO1K,QAAQ0B,WAG7B,IAAK,cACH,OAAO,6BACFQ,GADL,IAEEV,OAAQkJ,EAAO1K,QAAQwB,SAG3B,QACE,OAAOU,ICJE+J,GAhBO,WAGhB,IAFJ/J,EAEG,uDAFK,CAAEsF,MAAOhC,SAAS8E,gBAAgBC,aAC1CG,EACG,uCACH,OAAQA,EAAO3K,MACb,IAAK,YACH,OAAO,6BACFmC,GADL,IAEEsF,MAAOkD,EAAO1K,QAAQsH,cAG1B,QACE,OAAOpF,I,QCuBEgK,GAhBKC,aAAgB,CAClCnI,MAAOwG,GACPrD,MAAOyE,GACPpD,OAAQuD,GACR3J,YCvBkC,WAG9B,IAFJF,EAEG,uDAFK,CAAE3B,OAAQ,QAASJ,MAAO,GAAIE,WAAW,GACjDqK,EACG,uCACH,OAAQA,EAAO3K,MACb,IAAK,WACH,OAAO,6BAAKmC,GAAZ,IAAmB3B,OAAQmK,EAAO1K,QAAQC,KAE5C,IAAK,kBACH,OAAO,6BAAKiC,GAAZ,IAAmB7B,UAAWqK,EAAO1K,QAAQK,YAE/C,IAAK,eACH,OAAO,6BAAK6B,GAAZ,IAAmB/B,MAAOuK,EAAO1K,QAAQG,QAE3C,IAAK,iBACH,OAAO,6BACF+B,GADL,IAEE3B,OAAQmK,EAAO1K,QAAQO,OACvBF,UAAWqK,EAAO1K,QAAQK,YAG9B,QACE,OAAO6B,IDEXiG,aCEmC,WAG/B,IAFJjG,EAEG,uDAFK,CAAEpC,QAAS,KAAMO,WAAW,GACpCqK,EACG,uCACH,OAAQA,EAAO3K,MACb,IAAK,YACH,OAAO,6BAAKmC,GAAZ,IAAmBpC,QAAS4K,EAAO1K,QAAQC,KAE7C,IAAK,mBACH,OAAO,6BAAKiC,GAAZ,IAAmB7B,UAAWqK,EAAO1K,QAAQK,YAE/C,QACE,OAAO6B,IDbX0B,YCiBkC,WAG9B,IAFJ1B,EAEG,uDAFK,CAAEtB,OAAQ,KAAMT,MAAO,GAAIE,WAAW,GAC9CqK,EACG,uCACH,OAAQA,EAAO3K,MACb,IAAK,WACH,OAAO,6BAAKmC,GAAZ,IAAmBtB,OAAQ8J,EAAO1K,QAAQC,KAE5C,IAAK,kBACH,OAAO,6BAAKiC,GAAZ,IAAmB7B,UAAWqK,EAAO1K,QAAQK,YAE/C,IAAK,eACH,OAAO,6BAAK6B,GAAZ,IAAmB/B,MAAOuK,EAAO1K,QAAQG,QAE3C,IAAK,iBACH,OAAO,6BACF+B,GADL,IAEEtB,OAAQ8J,EAAO1K,QAAQY,OACvBP,UAAWqK,EAAO1K,QAAQK,YAG9B,QACE,OAAO6B,IDtCX1B,WE1B+B,WAAoC,IAAnC0B,EAAkC,uDAA1B,CAAE/B,MAAO,IAAMuK,EAAW,uCAClE,OAAQA,EAAO3K,MACb,IAAK,cACH,OAAO,6BAAKmC,GAAZ,IAAmB/B,MAAOuK,EAAO1K,QAAQG,QAE3C,QACE,OAAO+B,IFqBXhC,YEjBgC,WAAoC,IAAnCgC,EAAkC,uDAA1B,CAAE/B,MAAO,IAAMuK,EAAW,uCACnE,OAAQA,EAAO3K,MACb,IAAK,eACH,OAAO,6BAAKmC,GAAZ,IAAmB/B,MAAOuK,EAAO1K,QAAQG,QAE3C,QACE,OAAO+B,IFYXrB,WER+B,WAAoC,IAAnCqB,EAAkC,uDAA1B,CAAE/B,MAAO,IAAMuK,EAAW,uCAClE,OAAQA,EAAO3K,MACb,IAAK,cACH,OAAO,6BAAKmC,GAAZ,IAAmB/B,MAAOuK,EAAO1K,QAAQG,QAE3C,QACE,OAAO+B,IFGXuB,KAAMuI,GACN1H,UG9B8B,WAAwC,IAAvCpC,EAAsC,uDAA9B,CAAEV,QAAQ,GAASkJ,EAAW,uCACrE,OAAQA,EAAO3K,MACb,IAAK,iBACH,OAAO,6BACFmC,GADL,IAEEV,OAAQkJ,EAAO1K,QAAQwB,SAG3B,QACE,OAAOU,IHsBXwF,QGlB4B,WAAwC,IAAvCxF,EAAsC,uDAA9B,CAAEV,QAAQ,GAASkJ,EAAW,uCACnE,OAAQA,EAAO3K,MACb,IAAK,eACH,OAAO,6BACFmC,GADL,IAEEV,OAAQkJ,EAAO1K,QAAQwB,SAG3B,QACE,OAAOU,IHUXqF,OAAQ0E,K,oBI3BJG,GCLmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDHmBC,GACjBjE,GAAQkE,aACZV,GACAE,GACA/B,OAAOwC,8BAAgCxC,OAAOwC,gCAGhDnE,GAAMoE,UACJC,MAAS,YCDc,SAAC7K,GACxB,IACE,IAAMmK,EAAkBG,KAAKQ,UAAU9K,GACvCoK,aAAaW,QAAQ,QAASZ,GAC9B,MAAOK,KDFPQ,CAAU,CACRlJ,MAAO0E,GAAMyE,WAAWnJ,MACxBoJ,MAAO1E,GAAMyE,WAAWC,MACxB5E,OAAQE,GAAMyE,WAAW3E,YAG7B,KAGaE,UEhBf2E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAU7E,MAAOA,IACf,kBAAC,EAAD,QAGJlD,SAASgI,eAAe,U","file":"static/js/main.f67c4e37.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                Group Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentGroup = (groupId) => {\r\n  return {\r\n    type: \"SET_GROUP\",\r\n    payload: { id: groupId },\r\n  };\r\n};\r\n\r\nexport const addingGroup = (title) => {\r\n  return {\r\n    type: \"ADDING_GROUP\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addGroup = (id, title) => {\r\n  return {\r\n    type: \"ADD_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editGroup = (id, title) => {\r\n  return {\r\n    type: \"EDIT_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const isEditingGroup = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_GROUP\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                List Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentList = (listId) => {\r\n  return {\r\n    type: \"SET_LIST\",\r\n    payload: { id: listId },\r\n  };\r\n};\r\n\r\nexport const addingList = (title) => {\r\n  return {\r\n    type: \"ADDING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addList = (id, title, groupId) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      group: groupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editList = (id, title) => {\r\n  return {\r\n    type: \"EDIT_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingList = (title) => {\r\n  return {\r\n    type: \"EDITING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingList = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_LIST\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Task Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentTask = (taskId) => {\r\n  return {\r\n    type: \"SET_TASK\",\r\n    payload: { id: taskId },\r\n  };\r\n};\r\n\r\nexport const addingTask = (title) => {\r\n  return {\r\n    type: \"ADDING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addTask = (id, title, listId) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      steps: [],\r\n      isChecked: false,\r\n      addedToMyDay: null,\r\n      Important: false,\r\n      Planned: null,\r\n      parentList: listId,\r\n      createdAt: Date.now(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const importantTask = (id, isImportant) => {\r\n  return {\r\n    type: \"IMPORTANT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      Important: isImportant,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkTask = (id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_TASK\",\r\n    payload: {\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkStep = (parentTaskId, id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_STEP\",\r\n    payload: {\r\n      parentTaskId: parentTaskId,\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editTask = (id, title) => {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingTask = (title) => {\r\n  return {\r\n    type: \"EDITING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingTask = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_TASK\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addedToMyDay = (id, date) => {\r\n  return {\r\n    type: \"ADD_TO_MY_DAY\",\r\n    payload: {\r\n      id: id,\r\n      addedToMyDay: date,\r\n    },\r\n  };\r\n};\r\n\r\nexport const dueDate = (id, date) => {\r\n  return {\r\n    type: \"DUE_DATE\",\r\n    payload: {\r\n      id: id,\r\n      Planned: date,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Menu Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openMenu = (isOpen, source, sourceId) => {\r\n  return {\r\n    type: \"OPEN_MENU\",\r\n    payload: { isOpen: isOpen, source: source, sourceId: sourceId },\r\n  };\r\n};\r\n\r\nexport const toggleMenu = (isOpen) => {\r\n  return {\r\n    type: \"TOGGLE_MENU\",\r\n    payload: { isOpen: isOpen },\r\n  };\r\n};\r\n\r\nexport const menuRename = (source, sourceId) => {\r\n  switch (source) {\r\n    case \"TASK_ITEM\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_DETAIL\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_HEADER\":\r\n      return {\r\n        type: \"RENAMEING_LIST\",\r\n        payload: {\r\n          listId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Bars Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openDetailbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_DETAILBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\nexport const openToolbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_TOOLBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Screen Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setScreenWidth = (screenWidth) => {\r\n  return {\r\n    type: \"SET_WIDTH\",\r\n    payload: {\r\n      screenWidth: screenWidth,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.addingTask.title);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  return (\r\n    <div className=\"task-item-body add-task-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button\r\n          className=\"btn btn-no-hover\"\r\n          onClick={() => {\r\n            dispatch(actions.addTask(uuid(), taskTitle, currentListId));\r\n            dispatch(actions.addingTask(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Task\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingTask(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\nconst MenuV2 = ({ source, sourceId, taskOrList }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const currentListId = useSelector((state) => state.currentList.listId);\r\n  // const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  // const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n\r\n  // const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n\r\n  // const openOrNot =\r\n  //   source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  // const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div className=\"tasks-toolbar-menu unhide\">\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuV2;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditTaskName = ({ taskId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingTask(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editTask(taskId, taskTitle));\r\n          dispatch(actions.editingTask(\"\"));\r\n          dispatch(actions.isEditingTask(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editTask\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingTask(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskName;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditTaskName from \"./EditTaskName\";\r\n\r\nconst getTaskById = (state, taskId) => {\r\n  return state.tasks.find((task) => task.id === taskId);\r\n};\r\n\r\nconst TaskItemV3 = ({ taskId }) => {\r\n  const task = useSelector((state) => getTaskById(state, taskId));\r\n  const { id, title, isChecked, Important, Planned } = task;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask =\r\n    currentTaskId === taskId && source === \"TASK_ITEM\" && isEditingTask;\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n\r\n  return (\r\n    <div className=\"task-item-body\">\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.checkTask(id, !isChecked));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isChecked\r\n                ? \"icon icon-checkbox-checked\"\r\n                : \"icon icon-checkbox-empty\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      {editingTask ? (\r\n        <EditTaskName taskId={id} isEditing={isEditingTask} oldName={title} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button\r\n        className={\r\n          editingTask\r\n            ? \"btn task-item-title hide\"\r\n            : Planned !== null\r\n            ? \"btn task-item-title planned\"\r\n            : \"btn task-item-title\"\r\n        }\r\n        onClick={() => {\r\n          if (isDetailbarOpen === false && currentTaskId !== id) {\r\n            dispatch(actions.setCurrentTask(id));\r\n            dispatch(actions.openDetailbar(true));\r\n          } else if (isDetailbarOpen === true && currentTaskId !== id) {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(id));\r\n            dispatch(actions.openDetailbar(true));\r\n          } else if (isDetailbarOpen === true && currentTaskId === id) {\r\n            dispatch(actions.openDetailbar(false));\r\n          } else if (isDetailbarOpen === false && currentTaskId === id) {\r\n            dispatch(actions.openDetailbar(true));\r\n          }\r\n        }}>\r\n        <span className={Planned !== null ? \"planned-title\" : \"\"}>{title}</span>\r\n        {Planned !== null ? (\r\n          <span className=\"planned-date\">\r\n            {new Date(Planned).toLocaleDateString()}\r\n          </span>\r\n        ) : null}\r\n      </button>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.importantTask(id, !Important));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              Important ? \"icon icon-star-checked\" : \"icon icon-star\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"tasks-toolbar-options\"\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentTask(id));\r\n          // dispatch(actions.openMenu(false, null, null));\r\n          console.log(isMenuOpen);\r\n          dispatch(\r\n            actions.openMenu(\r\n              isMenuOpen && currentTaskId === id && menuSource === \"TASK_ITEM\"\r\n                ? false\r\n                : true,\r\n              \"TASK_ITEM\",\r\n              id\r\n            )\r\n          );\r\n        }}>\r\n        <div className=\"tasks-toolbar-title-item\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-menu\"></i>\r\n          </button>\r\n        </div>\r\n        {/* <Menu id={currentTaskId} source={\"TASK_ITEM\"} sourceId={taskId} /> */}\r\n\r\n        {id === currentTaskId && menuSource === \"TASK_ITEM\" && isMenuOpen ? (\r\n          <MenuV2 source={\"TASK_ITEM\"} sourceId={id} taskOrList={\" task\"} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItemV3;\r\n","export const isToday = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  if (today === new Date(inputDate).setHours(0, 0, 0, 0)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isFutur = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  let futur = new Date(inputDate).setHours(0, 0, 0, 0);\r\n  if (today < futur) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"./../redux/actions/actions\";\r\n\r\n/**\r\n * This Component isn't mine I just wanted a quick fix\r\n * https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\r\n */\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideAlerter(ref) {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        dispatch(actions.toggleMenu(false));\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref]);\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default function ClickeOutSide(props) {\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  return <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n","import React from \"react\";\r\n// import TaskItem from \"./TaskItem\";\r\nimport TaskItemV3 from \"./TaskItemV3\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\nimport ClickeOutSide from \"../ClickeOutSide\";\r\n\r\nconst TaskItmesV3 = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n\r\n  const WhatToShow = () => {\r\n    switch (currentListId) {\r\n      case \"My Day\":\r\n        let taskIds = [];\r\n        let checkedTaskIds = [];\r\n        tasks.map((task) => {\r\n          return isToday(task.addedToMyDay)\r\n            ? task.isChecked\r\n              ? checkedTaskIds.push(task.id)\r\n              : taskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {taskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Important\":\r\n        let impTaskIds = [];\r\n        let checkedImpTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.Important\r\n            ? task.isChecked\r\n              ? checkedImpTaskIds.push(task.id)\r\n              : impTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {impTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedImpTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedImpTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Planned\":\r\n        let planTaskIds = [];\r\n        let checkedPlanTaskIds = [];\r\n        tasks.map((task) => {\r\n          return isFutur(task.Planned)\r\n            ? task.isChecked\r\n              ? checkedPlanTaskIds.push(task.id)\r\n              : planTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {planTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedPlanTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedPlanTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"Tasks\":\r\n        let tasksTaskIds = [];\r\n        let checkedTasksTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.parentList === \"Tasks\"\r\n            ? task.isChecked\r\n              ? checkedTasksTaskIds.push(task.id)\r\n              : tasksTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {tasksTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedTasksTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedTasksTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        let listsTaskIds = [];\r\n        let checkedListsTaskIds = [];\r\n        tasks.map((task) => {\r\n          return task.parentList === currentListId\r\n            ? task.isChecked\r\n              ? checkedListsTaskIds.push(task.id)\r\n              : listsTaskIds.push(task.id)\r\n            : null;\r\n        });\r\n        return (\r\n          <div>\r\n            {listsTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n            {checkedListsTaskIds.length > 0 ? <div>Completed Tasks</div> : null}\r\n            {checkedListsTaskIds.map((taskId) => (\r\n              <TaskItemV3 key={taskId} taskId={taskId} />\r\n            ))}\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-items\">\r\n      <ClickeOutSide>\r\n        <WhatToShow />\r\n      </ClickeOutSide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItmesV3;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditListName = ({ listId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.currentList.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingList(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editList(listId, listTitle));\r\n          dispatch(actions.editingList(\"\"));\r\n          dispatch(actions.isEditingList(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editList\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={listTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingList(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListName;\r\n","import React from \"react\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditListName from \"./EditListName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ClickeOutSide from \"../ClickeOutSide\";\r\n\r\nconst TasksHeader = ({ currentListId, currentListTitle }) => {\r\n  const isEditingList = useSelector((state) => state.currentList.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingList = source === \"TASK_HEADER\" && isEditingList;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const globalListId = useSelector((state) => state.currentList.listId);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  return (\r\n    <div className=\"tasks-toolbar\">\r\n      <div className=\"tasks-toolbar-title\">\r\n        {editingList ? (\r\n          <EditListName\r\n            listId={currentListId}\r\n            isEditing={isEditingList}\r\n            oldName={currentListTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            editingList\r\n              ? \"tasks-toolbar-title-item hide\"\r\n              : \"tasks-toolbar-title-item\"\r\n          }>\r\n          <h1 className=\"list-title\">{currentListTitle}</h1>\r\n        </div>\r\n      </div>\r\n      {currentListId === \"My Day\" ||\r\n      currentListId === \"Important\" ||\r\n      currentListId === \"Planned\" ||\r\n      currentListId === \"Tasks\" ? (\r\n        \"\"\r\n      ) : (\r\n        <ClickeOutSide>\r\n          <div\r\n            className=\"tasks-toolbar-options\"\r\n            onClick={() => {\r\n              dispatch(\r\n                actions.openMenu(\r\n                  isMenuOpen &&\r\n                    globalListId === currentListId &&\r\n                    menuSource === \"TASK_HEADER\"\r\n                    ? false\r\n                    : true,\r\n                  \"TASK_HEADER\",\r\n                  currentListId\r\n                )\r\n              );\r\n            }}>\r\n            <div className=\"tasks-toolbar-title-item\">\r\n              <button className=\"btn\">\r\n                <i className=\"icon icon-menu\"></i>\r\n              </button>\r\n            </div>\r\n\r\n            {/* <Menu\r\n            id={currentListId}\r\n            source={\"TASK_HEADER\"}\r\n            sourceId={currentListId}\r\n          /> */}\r\n\r\n            {/* Open menu if menu is opened and currentList is current list */}\r\n\r\n            {globalListId === currentListId &&\r\n            menuSource === \"TASK_HEADER\" &&\r\n            isMenuOpen ? (\r\n              <MenuV2\r\n                source={\"TASK_HEADER\"}\r\n                sourceId={currentListId}\r\n                taskOrList={\" list\"}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </ClickeOutSide>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksHeader;\r\n","import React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\n// import TaskItmes from \"./TaskItems\";\r\n// import TaskItmesV2 from \"./TaskItemsV2\";\r\nimport TaskItmesV3 from \"./TaskItemsV3\";\r\nimport TasksHeader from \"./TasksHeader\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Tasks = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentList = lists.find((list) => list.id === currentListId);\r\n  const currentListTitle =\r\n    currentList === undefined ? currentListId : currentList.title;\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const isBarOpen = isDetailbarOpen || isToolbarOpen;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container container-center\">\r\n      <button\r\n        className={\r\n          screenWidth < 800 ? \"btn overlay-btn\" : \"btn overlay-btn hide\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openToolbar(!isToolbarOpen));\r\n        }}>\r\n        <i className=\"icon icon-ham\"></i>\r\n      </button>\r\n\r\n      <div\r\n        className={\r\n          screenWidth < 1020 && isBarOpen ? \"overlay unhide\" : \"overlay\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}></div>\r\n\r\n      <div className=\"center tasks\">\r\n        <TasksHeader\r\n          currentListId={currentListId}\r\n          currentListTitle={currentListTitle}\r\n        />\r\n        {/* Task Items */}\r\n        {/* <TaskItmes /> */}\r\n        {/* <TaskItmesV2 /> */}\r\n        <TaskItmesV3 />\r\n        {/* Add Task */}\r\n        <AddTask />\r\n        {/* End Task Items */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.addingList.title);\r\n\r\n  return (\r\n    <div className=\"add-list-and-group\">\r\n      <div className=\"add-list\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addList(uuid(), listTitle, null));\r\n            dispatch(actions.addingList(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addList\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New List\"\r\n          value={listTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingList(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"add-group\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addGroup(uuid(), \"New Group\"));\r\n          }}>\r\n          <i className=\"icon icon-group-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupList = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.openToolbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditGroupName = ({ groupId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const groupTitle = useSelector((state) => state.addingGroup.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingGroup(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editGroup(groupId, groupTitle));\r\n          dispatch(actions.addingGroup(\"\"));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editGroup\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={groupTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.addingGroup(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupName;\r\n","import React from \"react\";\r\nimport GroupList from \"./GroupList\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditGroupName from \"./EditGroupName\";\r\n\r\nconst Group = ({ groupId, groupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentGroup = useSelector((state) => state.currentGroup.groupId);\r\n  const isEditingGroup = useSelector((state) => state.currentGroup.isEditing);\r\n  const checkNewGroup = currentGroup === groupId && groupTitle === \"New Group\";\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n  const listsCount = lists.filter((list) => list.group === groupId);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li className=\"toolbar-item\">\r\n          {checkNewGroup ? (\r\n            <EditGroupName\r\n              groupId={groupId}\r\n              isEditing={true}\r\n              oldName={groupTitle}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className={\r\n              isEditingGroup && checkNewGroup\r\n                ? \"toolbar-inner hide\"\r\n                : \"toolbar-inner\"\r\n            }\r\n            key={groupId}\r\n            onClick={() => {\r\n              currentGroup === groupId\r\n                ? dispatch(actions.setCurrentGroup(null)) &&\r\n                  dispatch(actions.isEditingGroup(false))\r\n                : dispatch(actions.setCurrentGroup(groupId));\r\n            }}>\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-group\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>{groupTitle}</span>\r\n            </div>\r\n            {listsCount.length > 0 ? (\r\n              <div className=\"toolbar-collapse-arrow\">\r\n                <i className=\"icon icon-arrow\"></i>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <ul\r\n        className={\r\n          currentGroup === groupId ? \"group-lists unhide\" : \"group-lists\"\r\n        }>\r\n        {lists.map((list) => {\r\n          return list.group === groupId ? (\r\n            <GroupList\r\n              key={list.id}\r\n              listId={list.id}\r\n              listTitle={list.title}\r\n              activeTaskCount={tasksCount(list.id).length}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Groups = () => {\r\n  const groups = useSelector((state) => state.groups);\r\n  return (\r\n    <div className=\"groups\">\r\n      {groups.map((group) => {\r\n        return (\r\n          <Group key={group.id} groupId={group.id} groupTitle={group.title} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst PremadeLists = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector((store) => store.tasks);\r\n  let myDay = 0;\r\n  let important = 0;\r\n  let planned = 0;\r\n  let tasksList = 0;\r\n\r\n  tasks.forEach((obj) => {\r\n    if (isToday(obj.addedToMyDay) && !obj.isChecked) {\r\n      myDay++;\r\n    }\r\n    if (obj.Important && !obj.isChecked) {\r\n      important++;\r\n    }\r\n    if (isFutur(obj.Planned) && !obj.isChecked) {\r\n      planned++;\r\n    }\r\n    if (obj.parentList === \"Tasks\" && !obj.isChecked) {\r\n      tasksList++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"My Day\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-sun\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>My Day</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{myDay > 0 ? myDay : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Important\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-star\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Important</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {important > 0 ? important : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Planned\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-calendar\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Planned</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{planned > 0 ? planned : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Tasks\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-home\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Tasks</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {tasksList > 0 ? tasksList : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremadeLists;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst List = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.openToolbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport AddList from \"./AddList\";\r\nimport Groups from \"./Groups\";\r\nimport PremadeLists from \"./PremadeLists\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"./List\";\r\n\r\nconst Toolbar = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth < 800 && isToolbarOpen\r\n          ? \"container container-left unshift\"\r\n          : \"container container-left\"\r\n      }>\r\n      <div className=\"left toolbar\">\r\n        <ul>\r\n          <PremadeLists />\r\n          {/* Devider */}\r\n          <div className=\"devider\"></div>\r\n          {/* End Devider */}\r\n          <Groups />\r\n          {lists.map((list) => {\r\n            return list.group === null ? (\r\n              <List\r\n                key={list.id}\r\n                listId={list.id}\r\n                listTitle={list.title}\r\n                activeTaskCount={tasksCount(list.id).length}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* Add List */}\r\n      <AddList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nconst AddStep = () => {\r\n  return (\r\n    <div className=\"task-item-body add-task-body add-step-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button className=\"btn btn-no-hover\">\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Step\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStep;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isToday } from \"../../redux/utilities\";\r\n\r\nconst AddToMyDay = ({ taskId, addedToMyDay }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"detailbar-item\"\r\n      onClick={() => {\r\n        if (isToday(addedToMyDay)) {\r\n          return;\r\n        } else {\r\n          dispatch(actions.addedToMyDay(taskId, Date.now()));\r\n        }\r\n      }}>\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-sun\"></i>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          {isToday(addedToMyDay) ? (\r\n            <span style={{ color: \"lightblue\" }}>Added To My Day</span>\r\n          ) : (\r\n            <span>Add To My Day</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isToday(addedToMyDay) ? (\r\n        <button\r\n          className=\"return-to-null\"\r\n          onClick={() => {\r\n            dispatch(actions.addedToMyDay(taskId, null));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToMyDay;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DetailFooter = ({ currentTaskDate, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toolbar-item detail-footer\">\r\n      <div className=\"toolbar-inner\">\r\n        <div\r\n          className=\"toolbar-icon add-group\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Created on {currentTaskDate}</span>\r\n        </div>\r\n        <div\r\n          className=\"add-group detail-delete\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.deleteTask(sourceId));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-trash\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailFooter;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Steps = ({ parentTaskId, steps }) => {\r\n  const dispatch = useDispatch();\r\n  return steps.map((step) => {\r\n    return (\r\n      <div key={step.id} className=\"task-item-body task-detail-title step\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkStep(parentTaskId, step.id, !step.isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                step.isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        <button className=\"btn task-item-title\">\r\n          <span>{step.title}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\n// import Menu from \"../Menu\";\r\nimport Steps from \"./Steps\";\r\nimport EditTaskName from \"../center/EditTaskName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TaskDetail = ({\r\n  currentTaskId,\r\n  currentTaskTitle,\r\n  isChecked,\r\n  currentTaskSteps,\r\n}) => {\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask = source === \"TASK_DETAIL\" && isEditingTask;\r\n\r\n  const dispatch = useDispatch();\r\n  // const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  return (\r\n    <div className=\"task-item-body task-detail-title\">\r\n      <div className=\"task-detail-header\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkTask(currentTaskId, !isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        {editingTask ? (\r\n          <EditTaskName\r\n            taskId={currentTaskId}\r\n            isEditing={isEditingTask}\r\n            oldName={currentTaskTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          className={\r\n            editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n          }>\r\n          <span>\r\n            <h2>{currentTaskTitle}</h2>\r\n          </span>\r\n        </button>\r\n        {/* <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_DETAIL\", currentTaskId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n          <Menu\r\n            id={currentTaskId}\r\n            source={\"TASK_DETAIL\"}\r\n            sourceId={currentTaskId}\r\n          />\r\n        </div> */}\r\n      </div>\r\n      <Steps parentTaskId={currentTaskId} steps={currentTaskSteps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\n\r\nconst DueDate = ({ taskId, Planned }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"detailbar-item input-container\">\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-calendar\"></i>\r\n        </div>\r\n        {Planned !== null ? (\r\n          <span style={{ color: \"lightblue\" }}>\r\n            &nbsp; Due Date {new Date(Planned).toLocaleDateString()}\r\n          </span>\r\n        ) : (\r\n          <span>&nbsp; Due Date</span>\r\n        )}\r\n        <input\r\n          type=\"date\"\r\n          className=\"datepicker-input\"\r\n          id=\"datepicker-input\"\r\n          onChange={(e) => {\r\n            return dispatch(actions.dueDate(taskId, e.target.valueAsNumber));\r\n          }}\r\n        />\r\n      </div>\r\n      {Planned !== null ? (\r\n        <button\r\n          className=\"return-to-null\"\r\n          onClick={() => {\r\n            dispatch(actions.dueDate(taskId, null));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DueDate;\r\n","import React from \"react\";\r\nimport AddStep from \"./AddStep\";\r\nimport AddToMyDay from \"./AddToMyDay\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DueDate from \"./DueDate\";\r\n\r\nconst Detailbar = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n\r\n  const currentTask = tasks.find((task) => task.id === currentTaskId);\r\n  const addedToMyDay =\r\n    currentTask === undefined ? null : currentTask.addedToMyDay;\r\n  const Planned = currentTask === undefined ? null : currentTask.Planned;\r\n\r\n  const currentTaskTitle =\r\n    currentTask === undefined ? currentTaskId : currentTask.title;\r\n\r\n  const currentTaskIsChecked =\r\n    currentTask === undefined ? false : currentTask.isChecked;\r\n\r\n  const currentTaskSteps = currentTask === undefined ? [] : currentTask.steps;\r\n\r\n  const currentTaskDate =\r\n    currentTask === undefined\r\n      ? currentTaskId\r\n      : new Date(currentTask.createdAt).toDateString();\r\n\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth > 1020 && isDetailbarOpen\r\n          ? \"container container-right\"\r\n          : screenWidth > 1020 && !isDetailbarOpen\r\n          ? \"container container-right hide\"\r\n          : screenWidth < 1020 && isDetailbarOpen\r\n          ? \"container container-right unshift\"\r\n          : \"container container-right\"\r\n      }>\r\n      <TaskDetail\r\n        currentTaskId={currentTaskId}\r\n        currentTaskTitle={currentTaskTitle}\r\n        isChecked={currentTaskIsChecked}\r\n        currentTaskSteps={currentTaskSteps}\r\n      />\r\n      <AddStep />\r\n      <AddToMyDay taskId={currentTaskId} addedToMyDay={addedToMyDay} />\r\n      <DueDate taskId={currentTaskId} Planned={Planned} />\r\n      <DetailFooter\r\n        currentTaskDate={currentTaskDate}\r\n        sourceId={currentTaskId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detailbar;\r\n","import React from \"react\";\nimport Tasks from \"./components/center/Tasks\";\nimport Toolbar from \"./components/left/Toolbar\";\nimport Detailbar from \"./components/right/Detailbar\";\n\nimport * as actions from \"./redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  window.addEventListener(\"resize\", () => {\n    dispatch(actions.setScreenWidth(document.documentElement.clientWidth));\n  });\n\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Tasks />\n      <Detailbar />\n    </div>\n  );\n}\n\nexport default App;\n","import DummyData from \"../DummyData\";\r\n\r\nconst tasksReducer = (state = DummyData.Tasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          steps: action.payload.steps,\r\n          isChecked: action.payload.isChecked,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n          Important: action.payload.Important,\r\n          Planned: action.payload.Planned,\r\n          parentList: action.payload.parentList,\r\n          createdAt: action.payload.createdAt,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_TASK\":\r\n      const foundEditingTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingTask,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_TASK\":\r\n      const foundTask = state.find((task) => task.id === action.payload.id);\r\n      const newState = state.filter((task) => task.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          ...foundTask,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n\r\n    case \"IMPORTANT_TASK\":\r\n      const foundImportanTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newImportantState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newImportantState,\r\n        {\r\n          ...foundImportanTask,\r\n          Important: action.payload.Important,\r\n        },\r\n      ];\r\n\r\n    case \"ADD_TO_MY_DAY\":\r\n      const foundMyDayTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newMyDayState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newMyDayState,\r\n        {\r\n          ...foundMyDayTask,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n        },\r\n      ];\r\n\r\n    case \"DUE_DATE\":\r\n      const foundDueDateTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newDueDateState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newDueDateState,\r\n        {\r\n          ...foundDueDateTask,\r\n          Planned: action.payload.Planned,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_STEP\":\r\n      const foundParentTask = state.find(\r\n        (task) => task.id === action.payload.parentTaskId\r\n      );\r\n      const foundStep = foundParentTask.steps.find(\r\n        (step) => step.id === action.payload.id\r\n      );\r\n      const taskSteps = foundParentTask.steps.filter(\r\n        (step) => step.id !== action.payload.id\r\n      );\r\n      const newTaskSteps = [\r\n        ...taskSteps,\r\n        {\r\n          ...foundStep,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n      const newTask = {\r\n        ...foundParentTask,\r\n        steps: [...newTaskSteps],\r\n      };\r\n      const newStepState = state.filter(\r\n        (task) => task.id !== action.payload.parentTaskId\r\n      );\r\n      return [\r\n        ...newStepState,\r\n        {\r\n          ...newTask,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_TASK\":\r\n      const newDeleteState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst listsReducer = (state = DummyData.Lists, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          group: action.payload.group,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_LIST\":\r\n      const foundEditingList = state.find(\r\n        (list) => list.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingList,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_LIST\":\r\n      const newDeleteState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst groupsReducer = (state = DummyData.Groups, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GROUP\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_GROUP\":\r\n      const newState = state.filter((group) => group.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupsReducer;\r\n","const menuReducer = (\r\n  state = { isOpen: false, source: null, sourceId: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n        source: action.payload.source,\r\n        sourceId: action.payload.sourceId,\r\n      };\r\n\r\n    case \"TOGGLE_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menuReducer;\r\n","const screenReducer = (\r\n  state = { width: document.documentElement.clientWidth },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WIDTH\":\r\n      return {\r\n        ...state,\r\n        width: action.payload.screenWidth,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import tasksReducer from \"./tasksReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport groupsReducer from \"./groupsReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\nimport {\r\n  currentListIdReducer,\r\n  currentTaskIdReducer,\r\n  currentGroupIdReducer,\r\n} from \"./currentReducer\";\r\nimport {\r\n  addingListReducer,\r\n  addingTaskReducer,\r\n  addingGroupReducer,\r\n} from \"./addingReducer\";\r\nimport { detailbarReducer, toolbarReducer } from \"./barsReducer\";\r\nimport screenReducer from \"./screenReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  lists: listsReducer,\r\n  groups: groupsReducer,\r\n  currentList: currentListIdReducer,\r\n  currentGroup: currentGroupIdReducer,\r\n  currentTask: currentTaskIdReducer,\r\n  addingList: addingListReducer,\r\n  addingGroup: addingGroupReducer,\r\n  addingTask: addingTaskReducer,\r\n  menu: menuReducer,\r\n  detailbar: detailbarReducer,\r\n  toolbar: toolbarReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const currentListIdReducer = (\r\n  state = { listId: \"Tasks\", title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LIST\":\r\n      return { ...state, listId: action.payload.id };\r\n\r\n    case \"IS_EDITING_LIST\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_LIST\":\r\n      return {\r\n        ...state,\r\n        listId: action.payload.listId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentGroupIdReducer = (\r\n  state = { groupId: null, isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_GROUP\":\r\n      return { ...state, groupId: action.payload.id };\r\n\r\n    case \"IS_EDITING_GROUP\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentTaskIdReducer = (\r\n  state = { taskId: null, title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_TASK\":\r\n      return { ...state, taskId: action.payload.id };\r\n\r\n    case \"IS_EDITING_TASK\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_TASK\":\r\n      return {\r\n        ...state,\r\n        taskId: action.payload.taskId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const addingListReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingGroupReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_GROUP\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingTaskReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const detailbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_DETAILBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toolbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_TOOLBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      tasks: store.getState().tasks,\r\n      tists: store.getState().tists,\r\n      groups: store.getState().groups,\r\n    });\r\n  }),\r\n  1000\r\n);\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}