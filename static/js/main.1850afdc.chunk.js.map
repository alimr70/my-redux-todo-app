{"version":3,"sources":["redux/actions/actions.js","components/center/AddTask.js","components/Menu.js","components/center/EditTaskName.js","components/center/TaskItem.js","redux/utilities.js","components/center/TaskItems.js","components/center/EditListName.js","components/center/TasksHeader.js","components/center/Tasks.js","components/left/AddList.js","components/left/GroupList.js","components/left/EditGroupName.js","components/left/Group.js","components/left/Groups.js","components/left/PremadeLists.js","components/left/List.js","components/left/Toolbar.js","components/right/AddStep.js","components/right/AddToMyDay.js","components/right/DetailFooter.js","components/right/Steps.js","components/right/TaskDetail.js","components/right/Detailbar.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/listsReducer.js","redux/reducers/groupsReducer.js","redux/reducers/menuReducer.js","redux/reducers/screenReducer.js","redux/reducers/rootReducer.js","redux/reducers/currentReducer.js","redux/reducers/addingReducer.js","redux/reducers/barsReducer.js","redux/store.js","index.js"],"names":["setCurrentGroup","groupId","type","payload","id","addingGroup","title","isEditingGroup","isEditing","setCurrentList","listId","addingList","editingList","isEditingList","setCurrentTask","taskId","addingTask","checkTask","isChecked","editingTask","isEditingTask","openMenu","isOpen","source","sourceId","openDetailbar","openToolbar","AddTask","dispatch","useDispatch","taskTitle","useSelector","state","currentListId","currentList","className","onClick","uuid","steps","addedToMyDay","Important","Planned","parentList","createdAt","Date","now","actions","name","maxLength","placeholder","value","onChange","e","target","Menu","currentTaskId","currentTask","isMenuOpen","menu","menuSource","openOrNot","taskOrList","EditTaskName","oldName","useEffect","TaskItem","isDetailbarOpen","detailbar","key","isToday","inputDate","setHours","isFutur","TaskItmes","tasks","WhatToShow","map","task","EditListName","listTitle","TasksHeader","currentListTitle","Tasks","lists","find","list","undefined","screenWidth","screen","width","isToolbarOpen","toolbar","isBarOpen","AddList","group","GroupList","activeTaskCount","EditGroupName","groupTitle","Group","currentGroup","checkNewGroup","listsCount","filter","length","Groups","groups","PremadeLists","store","myDay","important","planned","tasksList","forEach","obj","List","Toolbar","AddStep","AddToMyDay","date","DetailFooter","currentTaskDate","Steps","parentTaskId","step","TaskDetail","currentTaskTitle","currentTaskSteps","Detailbar","currentTaskIsChecked","toDateString","App","window","addEventListener","document","documentElement","clientWidth","tasksReducer","DummyData","action","foundEditingTask","newEditingState","foundTask","newState","foundMyDayTask","newMyDayState","foundParentTask","foundStep","taskSteps","newTaskSteps","newTask","newStepState","newDeleteState","listsReducer","Lists","foundEditingList","groupsReducer","menuReducer","screenReducer","rootReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAIaA,EAAkB,SAACC,GAC9B,MAAO,CACLC,KAAM,YACNC,QAAS,CAAEC,GAAIH,KAINI,EAAc,SAACC,GAC1B,MAAO,CACLJ,KAAM,eACNC,QAAS,CAAEG,MAAOA,KAwBTC,EAAiB,SAACC,GAC7B,MAAO,CACLN,KAAM,mBACNC,QAAS,CACPK,UAAWA,KASJC,EAAiB,SAACC,GAC7B,MAAO,CACLR,KAAM,WACNC,QAAS,CAAEC,GAAIM,KAINC,EAAa,SAACL,GACzB,MAAO,CACLJ,KAAM,cACNC,QAAS,CAAEG,MAAOA,KAyBTM,EAAc,SAACN,GAC1B,MAAO,CACLJ,KAAM,eACNC,QAAS,CAAEG,MAAOA,KAITO,EAAgB,SAACL,GAC5B,MAAO,CACLN,KAAM,kBACNC,QAAS,CACPK,UAAWA,KAkBJM,EAAiB,SAACC,GAC7B,MAAO,CACLb,KAAM,WACNC,QAAS,CAAEC,GAAIW,KAINC,EAAa,SAACV,GACzB,MAAO,CACLJ,KAAM,cACNC,QAAS,CAAEG,MAAOA,KAqBTW,EAAY,SAACb,EAAIc,GAC5B,MAAO,CACLhB,KAAM,aACNC,QAAS,CACPC,GAAIA,EACJc,UAAWA,KA0BJC,EAAc,SAACb,GAC1B,MAAO,CACLJ,KAAM,eACNC,QAAS,CAAEG,MAAOA,KAITc,EAAgB,SAACZ,GAC5B,MAAO,CACLN,KAAM,kBACNC,QAAS,CACPK,UAAWA,KA4BJa,EAAW,SAACC,EAAQC,EAAQC,GACvC,MAAO,CACLtB,KAAM,YACNC,QAAS,CAAEmB,OAAQA,EAAQC,OAAQA,EAAQC,SAAUA,KA0C5CC,EAAgB,SAACH,GAC5B,MAAO,CACLpB,KAAM,iBACNC,QAAS,CACPmB,OAAQA,KAKDI,EAAc,SAACJ,GAC1B,MAAO,CACLpB,KAAM,eACNC,QAAS,CACPmB,OAAQA,K,OC9OCK,EA/BC,WACd,IAAMC,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMhB,WAAWV,SACpD2B,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAYxB,UAC/D,OACE,yBAAKyB,UAAU,gCACb,yBAAKA,UAAU,qBACb,4BACEA,UAAU,mBACVC,QAAS,WACPR,EDmHH,CACL1B,KAAM,WACNC,QAAS,CACPC,GCtH+BiC,cDuH/B/B,MCvHuCwB,EDwHvCQ,MAAO,GACPpB,WAAW,EACXqB,aAAc,KACdC,WAAW,EACXC,QAAS,KACTC,WC7HkDT,ED8HlDU,UAAWC,KAAKC,SC7HVjB,EAASkB,EAAmB,OAE9B,uBAAGX,UAAU,oBAEf,2BACEA,UAAU,eACVjC,KAAK,OACL6C,KAAK,UACLC,UAAU,MACVC,YAAY,WACZC,MAAOpB,EACPqB,SAAU,SAACC,GACTxB,EAASkB,EAAmBM,EAAEC,OAAOH,cC+DlCI,EAnFF,SAAC,GAA8B,IAA5BlD,EAA2B,EAA3BA,GAAImB,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACpBI,EAAWC,cAEXI,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAYxB,UACzD6C,EAAgBxB,aAAY,SAACC,GAAD,OAAWA,EAAMwB,YAAYzC,UACzD0C,EAAa1B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKpC,UAC/CqC,EAAa5B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKnC,UAE/CqC,IACJrC,IAAWoC,GAAcvD,KAFK,gBAAfuD,EAA+B1B,EAAgBsB,KAElBE,GAExCI,EAA4B,gBAAfF,EAA+B,QAAU,QAE5D,OACE,yBACExB,UACEyB,EAAY,4BAA8B,sBAE5C,4BACE,yBACExB,QAAS,WACPR,EFkMc,SAACL,EAAQC,GACjC,OAAQD,GACN,IAAK,YASL,IAAK,cACH,MAAO,CACLrB,KAAM,iBACNC,QAAS,CACPY,OAAQS,EACRhB,WAAW,IAIjB,IAAK,cACH,MAAO,CACLN,KAAM,iBACNC,QAAS,CACPO,OAAQc,EACRhB,WAAW,KE3NAsC,CAAmBvB,EAAQC,MAEtC,wBAAIW,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,uCAAa0B,OA6BrB,yBACEzB,QAAS,WACY,gBAAfuB,GACF/B,EAASkB,EAAuB,UAChClB,EFgCY,SAACxB,GACzB,MAAO,CACLF,KAAM,cACNC,QAAS,CACPC,GAAIA,IEpCa0C,CAAmBtB,KAE5BI,EFyHY,SAACxB,GACzB,MAAO,CACLF,KAAM,cACNC,QAAS,CACPC,GAAIA,IE7Ha0C,CAAmBtB,MAGhC,wBAAIW,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,wCAAc0B,UC5CfC,EAjCM,SAAC,GAAoC,IAAlC/C,EAAiC,EAAjCA,OAAQP,EAAyB,EAAzBA,UAAWuD,EAAc,EAAdA,QACnCnC,EAAWC,cACXC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMwB,YAAYlD,SAM3D,OAJA0D,qBAAU,WACRpC,EAASkB,EAAsBtC,OAI/B,yBAAK2B,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EHuJD,CACL1B,KAAM,YACNC,QAAS,CACPC,GG1J8BW,EH2J9BT,MG3JsCwB,KAClCF,EAASkB,EAAoB,KAC7BlB,EAASkB,GAAsB,MAEjC,uBAAGX,UAAU,oBAEf,2BACEjC,KAAK,OACL6C,KAAK,WACLC,UAAU,MACVC,YAAac,EACbb,MAAOpB,EACPqB,SAAU,SAACC,GACTxB,EAASkB,EAAoBM,EAAEC,OAAOH,aCsCjCe,EA9DE,SAAC,GAAsC,IAApClD,EAAmC,EAAnCA,OAAQe,EAA2B,EAA3BA,UAAWZ,EAAgB,EAAhBA,UAC/BuC,EAAa1B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKpC,UAC/CiC,EAAgBxB,aAAY,SAACC,GAAD,OAAWA,EAAMwB,YAAYzC,UACzDK,EAAgBW,aAAY,SAACC,GAAD,OAAWA,EAAMwB,YAAYhD,aACzDe,EAASQ,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKnC,UAC3CJ,EACJoC,IAAkBxC,GAAqB,cAAXQ,GAA0BH,EAClD8C,EAAkBnC,aAAY,SAACC,GAAD,OAAWA,EAAMmC,UAAU7C,UACzDM,EAAWC,cACjB,OACE,yBAAKM,UAAU,iBAAiBiC,IAAKrD,GACnC,yBACEoB,UAAU,qBACVC,QAAS,WACPR,EAASkB,EAAkB/B,GAASG,MAEtC,0BAAMiB,UAAU,YACd,uBACEA,UACEjB,EACI,6BACA,+BAIXC,EACC,kBAAC,EAAD,CACEJ,OAAQA,EACRP,UAAWY,EACX2C,QAASjC,IAGX,GAEF,4BACEK,UACEhB,EAAc,2BAA6B,sBAE7CiB,QAAS,WAEHR,EAASkB,EADbS,IAAkBxC,EACkB,KACAA,IACpCa,EAASkB,GAAuBoB,MAElC,8BAAOpC,IAET,yBACEK,UAAU,wBACVC,QAAS,WACPR,EAASkB,GAAkBW,EAAY,YAAa1C,MAEtD,yBAAKoB,UAAU,4BACb,4BAAQA,UAAU,OAChB,uBAAGA,UAAU,sBAGjB,kBAAC,EAAD,CAAM/B,GAAImD,EAAehC,OAAQ,YAAaC,SAAUT,OC9DnDsD,EAAU,SAACC,GAEtB,OADY,IAAI1B,MAAO2B,SAAS,EAAG,EAAG,EAAG,KAC3B,IAAI3B,KAAK0B,GAAWC,SAAS,EAAG,EAAG,EAAG,IAOzCC,EAAU,SAACF,GAGtB,OAFY,IAAI1B,MAAO2B,SAAS,EAAG,EAAG,EAAG,GAC7B,IAAI3B,KAAK0B,GAAWC,SAAS,EAAG,EAAG,EAAG,ICiErCE,EAvEG,WAChB,IAAMC,EAAQ3C,aAAY,SAACC,GAAD,OAAWA,EAAM0C,SACrCzC,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAYxB,UAEzDiE,EAAa,WACjB,OAAQ1C,GACN,IAAK,SACH,OAAOyC,EAAME,KAAI,SAACC,GAChB,OAAOR,EAAQQ,EAAKtC,cAClB,kBAAC,EAAD,CACE6B,IAAKS,EAAKzE,GACVW,OAAQ8D,EAAKzE,GACb0B,UAAW+C,EAAKvE,MAChBY,UAAW2D,EAAK3D,YAEhB,QAGR,IAAK,YACH,OAAOwD,EAAME,KAAI,SAACC,GAChB,OAAOA,EAAKrC,UACV,kBAAC,EAAD,CACE4B,IAAKS,EAAKzE,GACVW,OAAQ8D,EAAKzE,GACb0B,UAAW+C,EAAKvE,MAChBY,UAAW2D,EAAK3D,YAEhB,QAGR,IAAK,UACH,OAAOwD,EAAME,KAAI,SAACC,GAChB,OAAOL,EAAQK,EAAKpC,SAClB,kBAAC,EAAD,CACE2B,IAAKS,EAAKzE,GACVW,OAAQ8D,EAAKzE,GACb0B,UAAW+C,EAAKvE,MAChBY,UAAW2D,EAAK3D,YAEhB,QAGR,IAAK,QACH,OAAOwD,EAAME,KAAI,SAACC,GAChB,MAA2B,UAApBA,EAAKnC,WACV,kBAAC,EAAD,CACE0B,IAAKS,EAAKzE,GACVW,OAAQ8D,EAAKzE,GACb0B,UAAW+C,EAAKvE,MAChBY,UAAW2D,EAAK3D,YAEhB,QAGR,QACE,OAAOwD,EAAME,KAAI,SAACC,GAChB,OAAOA,EAAKnC,aAAeT,EACzB,kBAAC,EAAD,CACEmC,IAAKS,EAAKzE,GACVW,OAAQ8D,EAAKzE,GACb0B,UAAW+C,EAAKvE,MAChBY,UAAW2D,EAAK3D,YAEhB,UAKZ,OAAO,yBAAKiB,UAAU,cAAc,kBAACwC,EAAD,QCpCvBG,EAjCM,SAAC,GAAoC,IAAlCpE,EAAiC,EAAjCA,OAAQF,EAAyB,EAAzBA,UAAWuD,EAAc,EAAdA,QACnCnC,EAAWC,cACXkD,EAAYhD,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY5B,SAM3D,OAJA0D,qBAAU,WACRpC,EAASkB,EAAsBtC,OAI/B,yBAAK2B,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EP4DD,CACL1B,KAAM,YACNC,QAAS,CACPC,GO/D8BM,EPgE9BJ,MOhEsCyE,KAClCnD,EAASkB,EAAoB,KAC7BlB,EAASkB,GAAsB,MAEjC,uBAAGX,UAAU,oBAEf,2BACEjC,KAAK,OACL6C,KAAK,WACLC,UAAU,MACVC,YAAac,EACbb,MAAO6B,EACP5B,SAAU,SAACC,GACTxB,EAASkB,EAAoBM,EAAEC,OAAOH,aCmCjC8B,EA3DK,SAAC,GAAyC,IAAvC/C,EAAsC,EAAtCA,cAAegD,EAAuB,EAAvBA,iBAC9BpE,EAAgBkB,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAY1B,aAEzDI,EAAyB,gBADhBmB,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKnC,WACDV,EAE1Ce,EAAWC,cACX4B,EAAa1B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKpC,UAErD,OACE,yBAAKa,UAAU,iBACb,yBAAKA,UAAU,uBACZvB,EACC,kBAAC,EAAD,CACEF,OAAQuB,EACRzB,UAAWK,EACXkD,QAASkB,IAGX,GAEF,yBACE9C,UACEvB,EACI,gCACA,4BAEN,wBAAIuB,UAAU,cAAc8C,KAGb,WAAlBhD,GACiB,cAAlBA,GACkB,YAAlBA,GACkB,UAAlBA,EACE,GAEA,yBACEE,UAAU,wBACVC,QAAS,WACPR,EACEkB,GAAkBW,EAAY,cAAexB,MAGjD,yBAAKE,UAAU,4BACb,4BAAQA,UAAU,OAChB,uBAAGA,UAAU,sBAIjB,kBAAC,EAAD,CACE/B,GAAI6B,EACJV,OAAQ,cACRC,SAAUS,OCDPiD,EAjDD,WACZ,IAAMC,EAAQpD,aAAY,SAACC,GAAD,OAAWA,EAAMmD,SACrClD,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAME,YAAYxB,UACzDwB,EAAciD,EAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKjF,KAAO6B,KAC/CgD,OACYK,IAAhBpD,EAA4BD,EAAgBC,EAAY5B,MACpDiF,EAAcxD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,OAAOC,SAClDvB,EAAkBnC,aAAY,SAACC,GAAD,OAAWA,EAAMmC,UAAU7C,UACzDoE,EAAgB3D,aAAY,SAACC,GAAD,OAAWA,EAAM2D,QAAQrE,UACrDsE,EAAY1B,GAAmBwB,EAE/B9D,EAAWC,cACjB,OACE,yBAAKM,UAAU,8BACb,4BACEA,UACEoD,EAAc,IAAM,kBAAoB,uBAE1CnD,QAAS,WACPR,EAASkB,GAAqB4C,MAEhC,uBAAGvD,UAAU,mBAGf,yBACEA,UACEoD,EAAc,MAAQK,EAAY,iBAAmB,UAEvDxD,QAAS,WACPR,EAASkB,GAAsB,IAC/BlB,EAASkB,GAAoB,IAC7BlB,EAASkB,EAAuB,UAGpC,yBAAKX,UAAU,gBACb,kBAAC,EAAD,CACEF,cAAeA,EACfgD,iBAAkBA,IAGpB,kBAAC,EAAD,MAEA,kBAAC,EAAD,SCNOY,EAvCC,WACd,IAAMjE,EAAWC,cACXkD,EAAYhD,aAAY,SAACC,GAAD,OAAWA,EAAMrB,WAAWL,SAE1D,OACE,yBAAK6B,UAAU,sBACb,yBAAKA,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EVoDH,CACL1B,KAAM,WACNC,QAAS,CACPC,GUvD+BiC,cVwD/B/B,MUxDuCyE,EVyDvCe,MUzDkD,QAC5ClE,EAASkB,EAAmB,OAE9B,uBAAGX,UAAU,oBAEf,2BACEjC,KAAK,OACL6C,KAAK,UACLC,UAAU,MACVC,YAAY,WACZC,MAAO6B,EACP5B,SAAU,SAACC,GACTxB,EAASkB,EAAmBM,EAAEC,OAAOH,YAI3C,yBAAKf,UAAU,aACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EVfH,CACL1B,KAAM,YACNC,QAAS,CACPC,GUYgCiC,cVXhC/B,MUWwC,iBAEpC,uBAAG6B,UAAU,6BCPR4D,EAzBG,SAAC,GAA4C,IAA1CrF,EAAyC,EAAzCA,OAAQqE,EAAiC,EAAjCA,UAAWiB,EAAsB,EAAtBA,gBAChCpE,EAAWC,cACjB,OACE,yBACEuC,IAAK1D,EACL0B,QAAS,WACPR,EAASkB,EAAuBpC,MAElC,wBAAIyB,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,8BAAO4C,IAET,yBAAK5C,UAAU,iBACZ6D,EAAkB,EAAIA,EAAkB,QCetCC,EAhCO,SAAC,GAAqC,IAAnChG,EAAkC,EAAlCA,QAASO,EAAyB,EAAzBA,UAAWuD,EAAc,EAAdA,QACrCnC,EAAWC,cACXqE,EAAanE,aAAY,SAACC,GAAD,OAAWA,EAAM3B,YAAYC,SAM5D,OAJA0D,qBAAU,WACRpC,EAASkB,EAAuBtC,OAIhC,yBAAK2B,UAAU,YACb,4BACEA,UAAU,MACVC,QAAS,WACPR,EZYD,CACL1B,KAAM,aACNC,QAAS,CACPC,GYf+BH,EZgB/BK,MYhBwC4F,KACpCtE,EAASkB,EAAoB,OAE/B,uBAAGX,UAAU,oBAEf,2BACEjC,KAAK,OACL6C,KAAK,YACLC,UAAU,MACVC,YAAac,EACbb,MAAOgD,EACP/C,SAAU,SAACC,GACTxB,EAASkB,EAAoBM,EAAEC,OAAOH,aCuDjCiD,EA9ED,SAAC,GAA6B,IAA3BlG,EAA0B,EAA1BA,QAASiG,EAAiB,EAAjBA,WAClBtE,EAAWC,cACX6C,EAAQ3C,aAAY,SAACC,GAAD,OAAWA,EAAM0C,SACrCS,EAAQpD,aAAY,SAACC,GAAD,OAAWA,EAAMmD,SACrCiB,EAAerE,aAAY,SAACC,GAAD,OAAWA,EAAMoE,aAAanG,WACzDM,EAAiBwB,aAAY,SAACC,GAAD,OAAWA,EAAMoE,aAAa5F,aAC3D6F,EAAgBD,IAAiBnG,GAA0B,cAAfiG,EAO5CI,EAAanB,EAAMoB,QAAO,SAAClB,GAAD,OAAUA,EAAKS,QAAU7F,KAEzD,OACE,oCACE,6BACE,wBAAIkC,UAAU,gBACXkE,EACC,kBAAC,EAAD,CACEpG,QAASA,EACTO,WAAW,EACXuD,QAASmC,IAGX,GAEF,yBACE/D,UACE5B,GAAkB8F,EACd,qBACA,gBAENjC,IAAKnE,EACLmC,QAAS,WACPgE,IAAiBnG,EACb2B,EAASkB,EAAwB,QACjClB,EAASkB,GAAuB,IAChClB,EAASkB,EAAwB7C,MAEvC,yBAAKkC,UAAU,gBACb,uBAAGA,UAAU,qBAEf,yBAAKA,UAAU,iBACb,8BAAO+D,IAERI,EAAWE,OAAS,EACnB,yBAAKrE,UAAU,0BACb,uBAAGA,UAAU,qBAGf,MAKR,wBACEA,UACEiE,IAAiBnG,EAAU,qBAAuB,eAEnDkF,EAAMP,KAAI,SAACS,GACV,OAAOA,EAAKS,QAAU7F,EACpB,kBAAC,EAAD,CACEmE,IAAKiB,EAAKjF,GACVM,OAAQ2E,EAAKjF,GACb2E,UAAWM,EAAK/E,MAChB0F,iBA5DQtF,EA4DoB2E,EAAKjF,GA3D/BsE,EAAM6B,QAChB,SAAC1B,GAAD,OAAUA,EAAKnC,aAAehC,IAA6B,IAAnBmE,EAAK3D,cA0DAsF,SAGvC,GA/DS,IAAC9F,QCGP+F,EAbA,WACb,IAAMC,EAAS3E,aAAY,SAACC,GAAD,OAAWA,EAAM0E,UAC5C,OACE,yBAAKvE,UAAU,UACZuE,EAAO9B,KAAI,SAACkB,GACX,OACE,kBAAC,EAAD,CAAO1B,IAAK0B,EAAM1F,GAAIH,QAAS6F,EAAM1F,GAAI8F,WAAYJ,EAAMxF,aC0GtDqG,EA9GM,WACnB,IAAM/E,EAAWC,cAEX6C,EAAQ3C,aAAY,SAAC6E,GAAD,OAAWA,EAAMlC,SACvCmC,EAAQ,EACRC,EAAY,EACZC,EAAU,EACVC,EAAY,EAiBhB,OAfAtC,EAAMuC,SAAQ,SAACC,GACT7C,EAAQ6C,EAAI3E,gBAAkB2E,EAAIhG,WACpC2F,IAEEK,EAAI1E,YAAc0E,EAAIhG,WACxB4F,IAEEtC,EAAQ0C,EAAIzE,WAAayE,EAAIhG,WAC/B6F,IAEqB,UAAnBG,EAAIxE,YAA2BwE,EAAIhG,WACrC8F,OAKF,oCACE,yBACE5E,QAAS,WACPR,EAASkB,EAAuB,WAChClB,EAASkB,GAAsB,IAC/BlB,EAASkB,GAAoB,IAC7BlB,EAASkB,EAAuB,SAElC,wBAAIX,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,yCAEF,yBAAKA,UAAU,iBAAiB0E,EAAQ,EAAIA,EAAQ,OAI1D,yBACEzE,QAAS,WACPR,EAASkB,EAAuB,cAChClB,EAASkB,GAAsB,IAC/BlB,EAASkB,GAAoB,IAC7BlB,EAASkB,EAAuB,SAElC,wBAAIX,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,oBAEf,yBAAKA,UAAU,iBACb,4CAEF,yBAAKA,UAAU,iBACZ2E,EAAY,EAAIA,EAAY,OAKrC,yBACE1E,QAAS,WACPR,EAASkB,EAAuB,YAChClB,EAASkB,GAAsB,IAC/BlB,EAASkB,GAAoB,IAC7BlB,EAASkB,EAAuB,SAElC,wBAAIX,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,wBAEf,yBAAKA,UAAU,iBACb,0CAEF,yBAAKA,UAAU,iBAAiB4E,EAAU,EAAIA,EAAU,OAI9D,yBACE3E,QAAS,WACPR,EAASkB,EAAuB,UAChClB,EAASkB,GAAsB,IAC/BlB,EAASkB,GAAoB,IAC7BlB,EAASkB,EAAuB,SAElC,wBAAIX,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,oBAEf,yBAAKA,UAAU,iBACb,wCAEF,yBAAKA,UAAU,iBACZ6E,EAAY,EAAIA,EAAY,SC7E5BG,EAzBF,SAAC,GAA4C,IAA1CzG,EAAyC,EAAzCA,OAAQqE,EAAiC,EAAjCA,UAAWiB,EAAsB,EAAtBA,gBAC3BpE,EAAWC,cACjB,OACE,yBACEuC,IAAK1D,EACL0B,QAAS,WACPR,EAASkB,EAAuBpC,MAElC,wBAAIyB,UAAU,gBACZ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,8BAAO4C,IAET,yBAAK5C,UAAU,iBACZ6D,EAAkB,EAAIA,EAAkB,QCgCtCoB,EA9CC,WACd,IAAMjC,EAAQpD,aAAY,SAACC,GAAD,OAAWA,EAAMmD,SACrCT,EAAQ3C,aAAY,SAACC,GAAD,OAAWA,EAAM0C,SACrCgB,EAAgB3D,aAAY,SAACC,GAAD,OAAWA,EAAM2D,QAAQrE,UACrDiE,EAAcxD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,OAAOC,SAQxD,OACE,yBACEtD,UACEoD,EAAc,KAAOG,EACjB,mCACA,4BAEN,yBAAKvD,UAAU,gBACb,4BACE,kBAAC,EAAD,MAEA,yBAAKA,UAAU,YAEf,kBAAC,EAAD,MACCgD,EAAMP,KAAI,SAACS,GACV,OAAsB,OAAfA,EAAKS,MACV,kBAAC,EAAD,CACE1B,IAAKiB,EAAKjF,GACVM,OAAQ2E,EAAKjF,GACb2E,UAAWM,EAAK/E,MAChB0F,iBA3BMtF,EA2BsB2E,EAAKjF,GA1BjCsE,EAAM6B,QAChB,SAAC1B,GAAD,OAAUA,EAAKnC,aAAehC,IAA6B,IAAnBmE,EAAK3D,cAyBEsF,SAGvC,GA9BO,IAAC9F,OAoChB,kBAAC,EAAD,QC3BS2G,EAnBC,WACd,OACE,yBAAKlF,UAAU,8CACb,yBAAKA,UAAU,qBACb,4BAAQA,UAAU,oBAChB,uBAAGA,UAAU,oBAEf,2BACEA,UAAU,eACVjC,KAAK,OACL6C,KAAK,UACLC,UAAU,MACVC,YAAY,gBCYPqE,EAtBI,SAAC,GAAgB,IAAdvG,EAAa,EAAbA,OACda,EAAWC,cACjB,OACE,yBACEM,UAAU,8BACVC,QAAS,WnBiMa,IAAChC,EAAImH,EmBhMzB3F,GnBgMqBxB,EmBhMSW,EnBgMLwG,EmBhMa3E,KAAKC,MnBiM1C,CACL3C,KAAM,gBACNC,QAAS,CACPC,GAAIA,EACJmC,aAAcgF,MmBpMZ3F,EAASkB,GAAsB,IAC/BlB,EAASkB,EAAuB,SAElC,yBAAKX,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,mBAEf,yBAAKA,UAAU,iBACb,mDCcKqF,EA7BM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChB7F,EAAWC,cAEjB,OACE,yBAAKM,UAAU,8BACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,yBACVC,QAAS,WACPR,EAASkB,GAAsB,IAC/BlB,EAASkB,EAAuB,SAElC,4BAAQX,UAAU,OAChB,uBAAGA,UAAU,sBAGjB,yBAAKA,UAAU,iBACb,4CAAkBsF,IAEpB,yBAAKtF,UAAU,2BACb,4BAAQA,UAAU,OAChB,uBAAGA,UAAU,wBCMVuF,EA3BD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcrF,EAAY,EAAZA,MACvBV,EAAWC,cACjB,OAAOS,EAAMsC,KAAI,SAACgD,GAChB,OACE,yBAAKxD,IAAKwD,EAAKxH,GAAI+B,UAAU,yCAC3B,yBACEA,UAAU,qBACVC,QAAS,WACPR,ErBgJa,SAAC+F,EAAcvH,EAAIc,GAC1C,MAAO,CACLhB,KAAM,aACNC,QAAS,CACPwH,aAAcA,EACdvH,GAAIA,EACJc,UAAWA,IqBtJI4B,CAAkB6E,EAAcC,EAAKxH,IAAKwH,EAAK1G,cAE1D,0BAAMiB,UAAU,YACd,uBACEA,UACEyF,EAAK1G,UACD,6BACA,+BAIZ,4BAAQiB,UAAU,uBAChB,8BAAOyF,EAAKtH,aCqDPuH,EAtEI,SAAC,GAKb,IAJLtE,EAII,EAJJA,cACAuE,EAGI,EAHJA,iBACA5G,EAEI,EAFJA,UACA6G,EACI,EADJA,iBAEM3G,EAAgBW,aAAY,SAACC,GAAD,OAAWA,EAAMwB,YAAYhD,aAEzDW,EAAyB,gBADhBY,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKnC,WACDH,EAE1CQ,EAAWC,cACX4B,EAAa1B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,KAAKpC,UACrD,OACE,yBAAKa,UAAU,oCACb,yBAAKA,UAAU,sBACb,yBACEA,UAAU,qBACVC,QAAS,WACPR,EAASkB,EAAkBS,GAAgBrC,MAE7C,0BAAMiB,UAAU,YACd,uBACEA,UACEjB,EACI,6BACA,+BAIXC,EACC,kBAAC,EAAD,CACEJ,OAAQwC,EACR/C,UAAWY,EACX2C,QAAS+D,IAGX,GAEF,4BACE3F,UACEhB,EAAc,2BAA6B,uBAE7C,8BACE,4BAAK2G,KAGT,yBACE3F,UAAU,wBACVC,QAAS,WACPR,EACEkB,GAAkBW,EAAY,cAAeF,MAGjD,yBAAKpB,UAAU,4BACb,4BAAQA,UAAU,OAChB,uBAAGA,UAAU,sBAGjB,kBAAC,EAAD,CACE/B,GAAImD,EACJhC,OAAQ,cACRC,SAAU+B,MAIhB,kBAAC,EAAD,CAAOoE,aAAcpE,EAAejB,MAAOyF,MCnBlCC,EA9CG,WAChB,IAAMtD,EAAQ3C,aAAY,SAACC,GAAD,OAAWA,EAAM0C,SACrCnB,EAAgBxB,aAAY,SAACC,GAAD,OAAWA,EAAMwB,YAAYzC,UAEzDyC,EAAckB,EAAMU,MAAK,SAACP,GAAD,OAAUA,EAAKzE,KAAOmD,KAE/CuE,OACYxC,IAAhB9B,EAA4BD,EAAgBC,EAAYlD,MAEpD2H,OACY3C,IAAhB9B,GAAoCA,EAAYtC,UAE5C6G,OAAmCzC,IAAhB9B,EAA4B,GAAKA,EAAYlB,MAEhEmF,OACYnC,IAAhB9B,EACID,EACA,IAAIX,KAAKY,EAAYb,WAAWuF,eAEhChE,EAAkBnC,aAAY,SAACC,GAAD,OAAWA,EAAMmC,UAAU7C,UACzDiE,EAAcxD,aAAY,SAACC,GAAD,OAAWA,EAAMwD,OAAOC,SAExD,OACE,yBACEtD,UACEoD,EAAc,MAAQrB,EAClB,4BACAqB,EAAc,OAASrB,EACvB,iCACAqB,EAAc,MAAQrB,EACtB,oCACA,6BAEN,kBAAC,EAAD,CACEX,cAAeA,EACfuE,iBAAkBA,EAClB5G,UAAW+G,EACXF,iBAAkBA,IAEpB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYhH,OAAQwC,IACpB,kBAAC,EAAD,CAAckE,gBAAiBA,MCxBtBU,MAhBf,WACE,IAAMvG,EAAWC,cAMjB,OAJAuG,OAAOC,iBAAiB,UAAU,WAChCzG,ExBgRK,CACL1B,KAAM,YACNC,QAAS,CACPoF,YwBnR8B+C,SAASC,gBAAgBC,kBAIzD,yBAAKrG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,qBCoFSsG,EArGM,WAAsC,IAArCzG,EAAoC,uDAA5B0G,EAAUxD,MAAOyD,EAAW,uCACxD,OAAQA,EAAOzI,MACb,IAAK,WACH,MAAM,GAAN,mBACK8B,GADL,CAEE,CACE5B,GAAIuI,EAAOxI,QAAQC,GACnBE,MAAOqI,EAAOxI,QAAQG,MACtBgC,MAAOqG,EAAOxI,QAAQmC,MACtBpB,UAAWyH,EAAOxI,QAAQe,UAC1BqB,aAAcoG,EAAOxI,QAAQoC,aAC7BC,UAAWmG,EAAOxI,QAAQqC,UAC1BC,QAASkG,EAAOxI,QAAQsC,QACxBC,WAAYiG,EAAOxI,QAAQuC,WAC3BC,UAAWgG,EAAOxI,QAAQwC,aAIhC,IAAK,YACH,IAAMiG,EAAmB5G,EAAMoD,MAC7B,SAACP,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MAEjCyI,EAAkB7G,EAAMuE,QAC5B,SAAC1B,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MAEvC,MAAM,GAAN,mBACKyI,GADL,4BAGOD,GAHP,IAIItI,MAAOqI,EAAOxI,QAAQG,UAI5B,IAAK,aACH,IAAMwI,EAAY9G,EAAMoD,MAAK,SAACP,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MAC5D2I,EAAW/G,EAAMuE,QAAO,SAAC1B,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MACnE,MAAM,GAAN,mBACK2I,GADL,4BAGOD,GAHP,IAII5H,UAAWyH,EAAOxI,QAAQe,cAIhC,IAAK,gBACH,IAAM8H,EAAiBhH,EAAMoD,MAC3B,SAACP,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MAEjC6I,EAAgBjH,EAAMuE,QAC1B,SAAC1B,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MAEvC,MAAM,GAAN,mBACK6I,GADL,4BAGOD,GAHP,IAIIzG,aAAcoG,EAAOxI,QAAQoC,iBAInC,IAAK,aACH,IAAM2G,EAAkBlH,EAAMoD,MAC5B,SAACP,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQwH,gBAEjCwB,EAAYD,EAAgB5G,MAAM8C,MACtC,SAACwC,GAAD,OAAUA,EAAKxH,KAAOuI,EAAOxI,QAAQC,MAEjCgJ,EAAYF,EAAgB5G,MAAMiE,QACtC,SAACqB,GAAD,OAAUA,EAAKxH,KAAOuI,EAAOxI,QAAQC,MAEjCiJ,EAAY,sBACbD,GADa,4BAGXD,GAHW,IAIdjI,UAAWyH,EAAOxI,QAAQe,cAGxBoI,EAAO,2BACRJ,GADQ,IAEX5G,MAAM,YAAK+G,KAEPE,EAAevH,EAAMuE,QACzB,SAAC1B,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQwH,gBAEvC,MAAM,GAAN,mBACK4B,GADL,gBAGOD,KAIT,IAAK,cACH,IAAME,EAAiBxH,EAAMuE,QAC3B,SAAC1B,GAAD,OAAUA,EAAKzE,KAAOuI,EAAOxI,QAAQC,MAEvC,OAAO,YAAIoJ,GAEb,QACE,OAAOxH,IC3DEyH,EAtCM,WAAsC,IAArCzH,EAAoC,uDAA5B0G,EAAUgB,MAAOf,EAAW,uCACxD,OAAQA,EAAOzI,MACb,IAAK,WACH,MAAM,GAAN,mBACK8B,GADL,CAEE,CACE5B,GAAIuI,EAAOxI,QAAQC,GACnBE,MAAOqI,EAAOxI,QAAQG,MACtBwF,MAAO6C,EAAOxI,QAAQ2F,SAI5B,IAAK,YACH,IAAM6D,EAAmB3H,EAAMoD,MAC7B,SAACC,GAAD,OAAUA,EAAKjF,KAAOuI,EAAOxI,QAAQC,MAEjCyI,EAAkB7G,EAAMuE,QAC5B,SAAClB,GAAD,OAAUA,EAAKjF,KAAOuI,EAAOxI,QAAQC,MAEvC,MAAM,GAAN,mBACKyI,GADL,4BAGOc,GAHP,IAIIrJ,MAAOqI,EAAOxI,QAAQG,UAI5B,IAAK,cACH,IAAMkJ,EAAiBxH,EAAMuE,QAC3B,SAAClB,GAAD,OAAUA,EAAKjF,KAAOuI,EAAOxI,QAAQC,MAEvC,OAAO,YAAIoJ,GAEb,QACE,OAAOxH,ICRE4H,GA1BO,WAAuC,IAAtC5H,EAAqC,uDAA7B0G,EAAUjC,OAAQkC,EAAW,uCAC1D,OAAQA,EAAOzI,MACb,IAAK,YACH,MAAM,GAAN,mBACK8B,GADL,CAEE,CACE5B,GAAIuI,EAAOxI,QAAQC,GACnBE,MAAOqI,EAAOxI,QAAQG,SAI5B,IAAK,aACH,IAAMyI,EAAW/G,EAAMuE,QAAO,SAACT,GAAD,OAAWA,EAAM1F,KAAOuI,EAAOxI,QAAQC,MACrE,MAAM,GAAN,mBACK2I,GADL,CAEE,CACE3I,GAAIuI,EAAOxI,QAAQC,GACnBE,MAAOqI,EAAOxI,QAAQG,SAI5B,QACE,OAAO0B,ICNE6H,GAlBK,WAGd,IAFJ7H,EAEG,uDAFK,CAAEV,QAAQ,EAAOC,OAAQ,KAAMC,SAAU,MACjDmH,EACG,uCACH,OAAQA,EAAOzI,MACb,IAAK,YACH,OAAO,2BACF8B,GADL,IAEEV,OAAQqH,EAAOxI,QAAQmB,OACvBC,OAAQoH,EAAOxI,QAAQoB,OACvBC,SAAUmH,EAAOxI,QAAQqB,WAG7B,QACE,OAAOQ,ICEE8H,GAhBO,WAGhB,IAFJ9H,EAEG,uDAFK,CAAEyD,MAAO6C,SAASC,gBAAgBC,aAC1CG,EACG,uCACH,OAAQA,EAAOzI,MACb,IAAK,YACH,OAAO,2BACF8B,GADL,IAEEyD,MAAOkD,EAAOxI,QAAQoF,cAG1B,QACE,OAAOvD,I,QCuBE+H,GAhBKC,aAAgB,CAClCtF,MAAO+D,EACPtD,MAAOsE,EACP/C,OAAQkD,GACR1H,YCvBkC,WAG9B,IAFJF,EAEG,uDAFK,CAAEtB,OAAQ,QAASJ,MAAO,GAAIE,WAAW,GACjDmI,EACG,uCACH,OAAQA,EAAOzI,MACb,IAAK,WACH,OAAO,2BAAK8B,GAAZ,IAAmBtB,OAAQiI,EAAOxI,QAAQC,KAE5C,IAAK,kBACH,OAAO,2BAAK4B,GAAZ,IAAmBxB,UAAWmI,EAAOxI,QAAQK,YAE/C,IAAK,eACH,OAAO,2BAAKwB,GAAZ,IAAmB1B,MAAOqI,EAAOxI,QAAQG,QAE3C,IAAK,iBACH,OAAO,2BACF0B,GADL,IAEEtB,OAAQiI,EAAOxI,QAAQO,OACvBF,UAAWmI,EAAOxI,QAAQK,YAG9B,QACE,OAAOwB,IDEXoE,aCEmC,WAG/B,IAFJpE,EAEG,uDAFK,CAAE/B,QAAS,KAAMO,WAAW,GACpCmI,EACG,uCACH,OAAQA,EAAOzI,MACb,IAAK,YACH,OAAO,2BAAK8B,GAAZ,IAAmB/B,QAAS0I,EAAOxI,QAAQC,KAE7C,IAAK,mBACH,OAAO,2BAAK4B,GAAZ,IAAmBxB,UAAWmI,EAAOxI,QAAQK,YAE/C,QACE,OAAOwB,IDbXwB,YCiBkC,WAG9B,IAFJxB,EAEG,uDAFK,CAAEjB,OAAQ,KAAMT,MAAO,GAAIE,WAAW,GAC9CmI,EACG,uCACH,OAAQA,EAAOzI,MACb,IAAK,WACH,OAAO,2BAAK8B,GAAZ,IAAmBjB,OAAQ4H,EAAOxI,QAAQC,KAE5C,IAAK,kBACH,OAAO,2BAAK4B,GAAZ,IAAmBxB,UAAWmI,EAAOxI,QAAQK,YAE/C,IAAK,eACH,OAAO,2BAAKwB,GAAZ,IAAmB1B,MAAOqI,EAAOxI,QAAQG,QAE3C,IAAK,iBACH,OAAO,2BACF0B,GADL,IAEEjB,OAAQ4H,EAAOxI,QAAQY,OACvBP,UAAWmI,EAAOxI,QAAQK,YAG9B,QACE,OAAOwB,IDtCXrB,WE1B+B,WAAoC,IAAnCqB,EAAkC,uDAA1B,CAAE1B,MAAO,IAAMqI,EAAW,uCAClE,OAAQA,EAAOzI,MACb,IAAK,cACH,OAAO,2BAAK8B,GAAZ,IAAmB1B,MAAOqI,EAAOxI,QAAQG,QAE3C,QACE,OAAO0B,IFqBX3B,YEjBgC,WAAoC,IAAnC2B,EAAkC,uDAA1B,CAAE1B,MAAO,IAAMqI,EAAW,uCACnE,OAAQA,EAAOzI,MACb,IAAK,eACH,OAAO,2BAAK8B,GAAZ,IAAmB1B,MAAOqI,EAAOxI,QAAQG,QAE3C,QACE,OAAO0B,IFYXhB,WER+B,WAAoC,IAAnCgB,EAAkC,uDAA1B,CAAE1B,MAAO,IAAMqI,EAAW,uCAClE,OAAQA,EAAOzI,MACb,IAAK,cACH,OAAO,2BAAK8B,GAAZ,IAAmB1B,MAAOqI,EAAOxI,QAAQG,QAE3C,QACE,OAAO0B,IFGX0B,KAAMmG,GACN1F,UG9B8B,WAAwC,IAAvCnC,EAAsC,uDAA9B,CAAEV,QAAQ,GAASqH,EAAW,uCACrE,OAAQA,EAAOzI,MACb,IAAK,iBACH,OAAO,2BACF8B,GADL,IAEEV,OAAQqH,EAAOxI,QAAQmB,SAG3B,QACE,OAAOU,IHsBX2D,QGlB4B,WAAwC,IAAvC3D,EAAsC,uDAA9B,CAAEV,QAAQ,GAASqH,EAAW,uCACnE,OAAQA,EAAOzI,MACb,IAAK,eACH,OAAO,2BACF8B,GADL,IAEEV,OAAQqH,EAAOxI,QAAQmB,SAG3B,QACE,OAAOU,IHUXwD,OAAQsE,KIxBKlD,GALDqD,aACZF,GACA3B,OAAO8B,8BAAgC9B,OAAO8B,gCCEhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUzD,MAAOA,IACf,kBAAC,EAAD,QAGJ0B,SAASgC,eAAe,U","file":"static/js/main.1850afdc.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                Group Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentGroup = (groupId) => {\r\n  return {\r\n    type: \"SET_GROUP\",\r\n    payload: { id: groupId },\r\n  };\r\n};\r\n\r\nexport const addingGroup = (title) => {\r\n  return {\r\n    type: \"ADDING_GROUP\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addGroup = (id, title) => {\r\n  return {\r\n    type: \"ADD_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editGroup = (id, title) => {\r\n  return {\r\n    type: \"EDIT_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const isEditingGroup = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_GROUP\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                List Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentList = (listId) => {\r\n  return {\r\n    type: \"SET_LIST\",\r\n    payload: { id: listId },\r\n  };\r\n};\r\n\r\nexport const addingList = (title) => {\r\n  return {\r\n    type: \"ADDING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addList = (id, title, groupId) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      group: groupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editList = (id, title) => {\r\n  return {\r\n    type: \"EDIT_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingList = (title) => {\r\n  return {\r\n    type: \"EDITING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingList = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_LIST\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Task Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentTask = (taskId) => {\r\n  return {\r\n    type: \"SET_TASK\",\r\n    payload: { id: taskId },\r\n  };\r\n};\r\n\r\nexport const addingTask = (title) => {\r\n  return {\r\n    type: \"ADDING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addTask = (id, title, listId) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      steps: [],\r\n      isChecked: false,\r\n      addedToMyDay: null,\r\n      Important: false,\r\n      Planned: null,\r\n      parentList: listId,\r\n      createdAt: Date.now(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkTask = (id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_TASK\",\r\n    payload: {\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkStep = (parentTaskId, id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_STEP\",\r\n    payload: {\r\n      parentTaskId: parentTaskId,\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editTask = (id, title) => {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingTask = (title) => {\r\n  return {\r\n    type: \"EDITING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingTask = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_TASK\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addedToMyDay = (id, date) => {\r\n  return {\r\n    type: \"ADD_TO_MY_DAY\",\r\n    payload: {\r\n      id: id,\r\n      addedToMyDay: date,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Menu Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openMenu = (isOpen, source, sourceId) => {\r\n  return {\r\n    type: \"OPEN_MENU\",\r\n    payload: { isOpen: isOpen, source: source, sourceId: sourceId },\r\n  };\r\n};\r\n\r\nexport const menuRename = (source, sourceId) => {\r\n  switch (source) {\r\n    case \"TASK_ITEM\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_DETAIL\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_HEADER\":\r\n      return {\r\n        type: \"RENAMEING_LIST\",\r\n        payload: {\r\n          listId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Bars Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openDetailbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_DETAILBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\nexport const openToolbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_TOOLBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Screen Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setScreenWidth = (screenWidth) => {\r\n  return {\r\n    type: \"SET_WIDTH\",\r\n    payload: {\r\n      screenWidth: screenWidth,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.addingTask.title);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  return (\r\n    <div className=\"task-item-body add-task-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button\r\n          className=\"btn btn-no-hover\"\r\n          onClick={() => {\r\n            dispatch(actions.addTask(uuid(), taskTitle, currentListId));\r\n            dispatch(actions.addingTask(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Task\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingTask(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\n// id={currentTaskId} type={\"TASK_ITEM\"}\r\n// id={currentTaskId} type={\"TASK_DETAIL\"}\r\n// id={currentListId} type={\"TASK_HEADER\"}\r\n\r\nconst Menu = ({ id, source, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n  const openOrNot =\r\n    source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        openOrNot ? \"tasks-toolbar-menu unhide\" : \"tasks-toolbar-menu\"\r\n      }>\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditTaskName = ({ taskId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingTask(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editTask(taskId, taskTitle));\r\n          dispatch(actions.editingTask(\"\"));\r\n          dispatch(actions.isEditingTask(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editTask\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingTask(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskName;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Menu from \"../Menu\";\r\nimport EditTaskName from \"./EditTaskName\";\r\n\r\nconst TaskItem = ({ taskId, taskTitle, isChecked }) => {\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask =\r\n    currentTaskId === taskId && source === \"TASK_ITEM\" && isEditingTask;\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"task-item-body\" key={taskId}>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.checkTask(taskId, !isChecked));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isChecked\r\n                ? \"icon icon-checkbox-checked\"\r\n                : \"icon icon-checkbox-empty\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      {editingTask ? (\r\n        <EditTaskName\r\n          taskId={taskId}\r\n          isEditing={isEditingTask}\r\n          oldName={taskTitle}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button\r\n        className={\r\n          editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n        }\r\n        onClick={() => {\r\n          currentTaskId === taskId\r\n            ? dispatch(actions.setCurrentTask(null))\r\n            : dispatch(actions.setCurrentTask(taskId));\r\n          dispatch(actions.openDetailbar(!isDetailbarOpen));\r\n        }}>\r\n        <span>{taskTitle}</span>\r\n      </button>\r\n      <div\r\n        className=\"tasks-toolbar-options\"\r\n        onClick={() => {\r\n          dispatch(actions.openMenu(!isMenuOpen, \"TASK_ITEM\", taskId));\r\n        }}>\r\n        <div className=\"tasks-toolbar-title-item\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <Menu id={currentTaskId} source={\"TASK_ITEM\"} sourceId={taskId} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","export const isToday = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  if (today === new Date(inputDate).setHours(0, 0, 0, 0)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isFutur = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  let futur = new Date(inputDate).setHours(0, 0, 0, 0);\r\n  if (today < futur) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst TaskItmes = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n\r\n  const WhatToShow = () => {\r\n    switch (currentListId) {\r\n      case \"My Day\":\r\n        return tasks.map((task) => {\r\n          return isToday(task.addedToMyDay) ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Important\":\r\n        return tasks.map((task) => {\r\n          return task.Important ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Planned\":\r\n        return tasks.map((task) => {\r\n          return isFutur(task.Planned) ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Tasks\":\r\n        return tasks.map((task) => {\r\n          return task.parentList === \"Tasks\" ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      default:\r\n        return tasks.map((task) => {\r\n          return task.parentList === currentListId ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n            />\r\n          ) : null;\r\n        });\r\n    }\r\n  };\r\n\r\n  return <div className=\"task-items\">{<WhatToShow />}</div>;\r\n};\r\n\r\nexport default TaskItmes;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditListName = ({ listId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.currentList.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingList(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editList(listId, listTitle));\r\n          dispatch(actions.editingList(\"\"));\r\n          dispatch(actions.isEditingList(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editList\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={listTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingList(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListName;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport EditListName from \"./EditListName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TasksHeader = ({ currentListId, currentListTitle }) => {\r\n  const isEditingList = useSelector((state) => state.currentList.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingList = source === \"TASK_HEADER\" && isEditingList;\r\n\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n\r\n  return (\r\n    <div className=\"tasks-toolbar\">\r\n      <div className=\"tasks-toolbar-title\">\r\n        {editingList ? (\r\n          <EditListName\r\n            listId={currentListId}\r\n            isEditing={isEditingList}\r\n            oldName={currentListTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            editingList\r\n              ? \"tasks-toolbar-title-item hide\"\r\n              : \"tasks-toolbar-title-item\"\r\n          }>\r\n          <h1 className=\"list-title\">{currentListTitle}</h1>\r\n        </div>\r\n      </div>\r\n      {currentListId === \"My Day\" ||\r\n      currentListId === \"Important\" ||\r\n      currentListId === \"Planned\" ||\r\n      currentListId === \"Tasks\" ? (\r\n        \"\"\r\n      ) : (\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_HEADER\", currentListId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <Menu\r\n            id={currentListId}\r\n            source={\"TASK_HEADER\"}\r\n            sourceId={currentListId}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksHeader;\r\n","import React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskItmes from \"./TaskItems\";\r\nimport TasksHeader from \"./TasksHeader\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Tasks = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentList = lists.find((list) => list.id === currentListId);\r\n  const currentListTitle =\r\n    currentList === undefined ? currentListId : currentList.title;\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const isBarOpen = isDetailbarOpen || isToolbarOpen;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container container-center\">\r\n      <button\r\n        className={\r\n          screenWidth < 800 ? \"btn overlay-btn\" : \"btn overlay-btn hide\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openToolbar(!isToolbarOpen));\r\n        }}>\r\n        <i className=\"icon icon-ham\"></i>\r\n      </button>\r\n\r\n      <div\r\n        className={\r\n          screenWidth < 1020 && isBarOpen ? \"overlay unhide\" : \"overlay\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}></div>\r\n\r\n      <div className=\"center tasks\">\r\n        <TasksHeader\r\n          currentListId={currentListId}\r\n          currentListTitle={currentListTitle}\r\n        />\r\n        {/* Task Items */}\r\n        <TaskItmes />\r\n        {/* Add Task */}\r\n        <AddTask />\r\n        {/* End Task Items */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.addingList.title);\r\n\r\n  return (\r\n    <div className=\"add-list-and-group\">\r\n      <div className=\"add-list\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addList(uuid(), listTitle, null));\r\n            dispatch(actions.addingList(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addList\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New List\"\r\n          value={listTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingList(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"add-group\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addGroup(uuid(), \"New Group\"));\r\n          }}>\r\n          <i className=\"icon icon-group-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupList = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditGroupName = ({ groupId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const groupTitle = useSelector((state) => state.addingGroup.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingGroup(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editGroup(groupId, groupTitle));\r\n          dispatch(actions.addingGroup(\"\"));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editGroup\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={groupTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.addingGroup(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupName;\r\n","import React from \"react\";\r\nimport GroupList from \"./GroupList\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditGroupName from \"./EditGroupName\";\r\n\r\nconst Group = ({ groupId, groupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentGroup = useSelector((state) => state.currentGroup.groupId);\r\n  const isEditingGroup = useSelector((state) => state.currentGroup.isEditing);\r\n  const checkNewGroup = currentGroup === groupId && groupTitle === \"New Group\";\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n  const listsCount = lists.filter((list) => list.group === groupId);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li className=\"toolbar-item\">\r\n          {checkNewGroup ? (\r\n            <EditGroupName\r\n              groupId={groupId}\r\n              isEditing={true}\r\n              oldName={groupTitle}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className={\r\n              isEditingGroup && checkNewGroup\r\n                ? \"toolbar-inner hide\"\r\n                : \"toolbar-inner\"\r\n            }\r\n            key={groupId}\r\n            onClick={() => {\r\n              currentGroup === groupId\r\n                ? dispatch(actions.setCurrentGroup(null)) &&\r\n                  dispatch(actions.isEditingGroup(false))\r\n                : dispatch(actions.setCurrentGroup(groupId));\r\n            }}>\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-group\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>{groupTitle}</span>\r\n            </div>\r\n            {listsCount.length > 0 ? (\r\n              <div className=\"toolbar-collapse-arrow\">\r\n                <i className=\"icon icon-arrow\"></i>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <ul\r\n        className={\r\n          currentGroup === groupId ? \"group-lists unhide\" : \"group-lists\"\r\n        }>\r\n        {lists.map((list) => {\r\n          return list.group === groupId ? (\r\n            <GroupList\r\n              key={list.id}\r\n              listId={list.id}\r\n              listTitle={list.title}\r\n              activeTaskCount={tasksCount(list.id).length}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Groups = () => {\r\n  const groups = useSelector((state) => state.groups);\r\n  return (\r\n    <div className=\"groups\">\r\n      {groups.map((group) => {\r\n        return (\r\n          <Group key={group.id} groupId={group.id} groupTitle={group.title} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst PremadeLists = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector((store) => store.tasks);\r\n  let myDay = 0;\r\n  let important = 0;\r\n  let planned = 0;\r\n  let tasksList = 0;\r\n\r\n  tasks.forEach((obj) => {\r\n    if (isToday(obj.addedToMyDay) && !obj.isChecked) {\r\n      myDay++;\r\n    }\r\n    if (obj.Important && !obj.isChecked) {\r\n      important++;\r\n    }\r\n    if (isFutur(obj.Planned) && !obj.isChecked) {\r\n      planned++;\r\n    }\r\n    if (obj.parentList === \"Tasks\" && !obj.isChecked) {\r\n      tasksList++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"My Day\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-sun\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>My Day</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{myDay > 0 ? myDay : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Important\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-star\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Important</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {important > 0 ? important : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Planned\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-calendar\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Planned</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{planned > 0 ? planned : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Tasks\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-home\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Tasks</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {tasksList > 0 ? tasksList : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremadeLists;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst List = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport AddList from \"./AddList\";\r\nimport Groups from \"./Groups\";\r\nimport PremadeLists from \"./PremadeLists\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"./List\";\r\n\r\nconst Toolbar = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth < 800 && isToolbarOpen\r\n          ? \"container container-left unshift\"\r\n          : \"container container-left\"\r\n      }>\r\n      <div className=\"left toolbar\">\r\n        <ul>\r\n          <PremadeLists />\r\n          {/* Devider */}\r\n          <div className=\"devider\"></div>\r\n          {/* End Devider */}\r\n          <Groups />\r\n          {lists.map((list) => {\r\n            return list.group === null ? (\r\n              <List\r\n                key={list.id}\r\n                listId={list.id}\r\n                listTitle={list.title}\r\n                activeTaskCount={tasksCount(list.id).length}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* Add List */}\r\n      <AddList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nconst AddStep = () => {\r\n  return (\r\n    <div className=\"task-item-body add-task-body add-step-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button className=\"btn btn-no-hover\">\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Step\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStep;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddToMyDay = ({ taskId }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"toolbar-item detailbar-item\"\r\n      onClick={() => {\r\n        dispatch(actions.addedToMyDay(taskId, Date.now()));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-sun\"></i>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Add To My Day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToMyDay;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DetailFooter = ({ currentTaskDate }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toolbar-item detail-footer\">\r\n      <div className=\"toolbar-inner\">\r\n        <div\r\n          className=\"toolbar-icon add-group\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Created on {currentTaskDate}</span>\r\n        </div>\r\n        <div className=\"add-group detail-delete\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailFooter;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Steps = ({ parentTaskId, steps }) => {\r\n  const dispatch = useDispatch();\r\n  return steps.map((step) => {\r\n    return (\r\n      <div key={step.id} className=\"task-item-body task-detail-title step\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkStep(parentTaskId, step.id, !step.isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                step.isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        <button className=\"btn task-item-title\">\r\n          <span>{step.title}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport Steps from \"./Steps\";\r\nimport EditTaskName from \"../center/EditTaskName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TaskDetail = ({\r\n  currentTaskId,\r\n  currentTaskTitle,\r\n  isChecked,\r\n  currentTaskSteps,\r\n}) => {\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask = source === \"TASK_DETAIL\" && isEditingTask;\r\n\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  return (\r\n    <div className=\"task-item-body task-detail-title\">\r\n      <div className=\"task-detail-header\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkTask(currentTaskId, !isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        {editingTask ? (\r\n          <EditTaskName\r\n            taskId={currentTaskId}\r\n            isEditing={isEditingTask}\r\n            oldName={currentTaskTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          className={\r\n            editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n          }>\r\n          <span>\r\n            <h2>{currentTaskTitle}</h2>\r\n          </span>\r\n        </button>\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_DETAIL\", currentTaskId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n          <Menu\r\n            id={currentTaskId}\r\n            source={\"TASK_DETAIL\"}\r\n            sourceId={currentTaskId}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Steps parentTaskId={currentTaskId} steps={currentTaskSteps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport AddStep from \"./AddStep\";\r\nimport AddToMyDay from \"./AddToMyDay\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Detailbar = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n\r\n  const currentTask = tasks.find((task) => task.id === currentTaskId);\r\n\r\n  const currentTaskTitle =\r\n    currentTask === undefined ? currentTaskId : currentTask.title;\r\n\r\n  const currentTaskIsChecked =\r\n    currentTask === undefined ? false : currentTask.isChecked;\r\n\r\n  const currentTaskSteps = currentTask === undefined ? [] : currentTask.steps;\r\n\r\n  const currentTaskDate =\r\n    currentTask === undefined\r\n      ? currentTaskId\r\n      : new Date(currentTask.createdAt).toDateString();\r\n\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth > 1020 && isDetailbarOpen\r\n          ? \"container container-right\"\r\n          : screenWidth > 1020 && !isDetailbarOpen\r\n          ? \"container container-right hide\"\r\n          : screenWidth < 1020 && isDetailbarOpen\r\n          ? \"container container-right unshift\"\r\n          : \"container container-right\"\r\n      }>\r\n      <TaskDetail\r\n        currentTaskId={currentTaskId}\r\n        currentTaskTitle={currentTaskTitle}\r\n        isChecked={currentTaskIsChecked}\r\n        currentTaskSteps={currentTaskSteps}\r\n      />\r\n      <AddStep />\r\n      <AddToMyDay taskId={currentTaskId} />\r\n      <DetailFooter currentTaskDate={currentTaskDate} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detailbar;\r\n","import React from \"react\";\nimport Tasks from \"./components/center/Tasks\";\nimport Toolbar from \"./components/left/Toolbar\";\nimport Detailbar from \"./components/right/Detailbar\";\n\nimport * as actions from \"./redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  window.addEventListener(\"resize\", () => {\n    dispatch(actions.setScreenWidth(document.documentElement.clientWidth));\n  });\n\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Tasks />\n      <Detailbar />\n    </div>\n  );\n}\n\nexport default App;\n","import DummyData from \"../DummyData\";\r\n\r\nconst tasksReducer = (state = DummyData.Tasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          steps: action.payload.steps,\r\n          isChecked: action.payload.isChecked,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n          Important: action.payload.Important,\r\n          Planned: action.payload.Planned,\r\n          parentList: action.payload.parentList,\r\n          createdAt: action.payload.createdAt,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_TASK\":\r\n      const foundEditingTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingTask,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_TASK\":\r\n      const foundTask = state.find((task) => task.id === action.payload.id);\r\n      const newState = state.filter((task) => task.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          ...foundTask,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n\r\n    case \"ADD_TO_MY_DAY\":\r\n      const foundMyDayTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newMyDayState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newMyDayState,\r\n        {\r\n          ...foundMyDayTask,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_STEP\":\r\n      const foundParentTask = state.find(\r\n        (task) => task.id === action.payload.parentTaskId\r\n      );\r\n      const foundStep = foundParentTask.steps.find(\r\n        (step) => step.id === action.payload.id\r\n      );\r\n      const taskSteps = foundParentTask.steps.filter(\r\n        (step) => step.id !== action.payload.id\r\n      );\r\n      const newTaskSteps = [\r\n        ...taskSteps,\r\n        {\r\n          ...foundStep,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n      const newTask = {\r\n        ...foundParentTask,\r\n        steps: [...newTaskSteps],\r\n      };\r\n      const newStepState = state.filter(\r\n        (task) => task.id !== action.payload.parentTaskId\r\n      );\r\n      return [\r\n        ...newStepState,\r\n        {\r\n          ...newTask,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_TASK\":\r\n      const newDeleteState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst listsReducer = (state = DummyData.Lists, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          group: action.payload.group,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_LIST\":\r\n      const foundEditingList = state.find(\r\n        (list) => list.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingList,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_LIST\":\r\n      const newDeleteState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst groupsReducer = (state = DummyData.Groups, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GROUP\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_GROUP\":\r\n      const newState = state.filter((group) => group.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupsReducer;\r\n","const menuReducer = (\r\n  state = { isOpen: false, source: null, sourceId: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n        source: action.payload.source,\r\n        sourceId: action.payload.sourceId,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menuReducer;\r\n","const screenReducer = (\r\n  state = { width: document.documentElement.clientWidth },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WIDTH\":\r\n      return {\r\n        ...state,\r\n        width: action.payload.screenWidth,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import tasksReducer from \"./tasksReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport groupsReducer from \"./groupsReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\nimport {\r\n  currentListIdReducer,\r\n  currentTaskIdReducer,\r\n  currentGroupIdReducer,\r\n} from \"./currentReducer\";\r\nimport {\r\n  addingListReducer,\r\n  addingTaskReducer,\r\n  addingGroupReducer,\r\n} from \"./addingReducer\";\r\nimport { detailbarReducer, toolbarReducer } from \"./barsReducer\";\r\nimport screenReducer from \"./screenReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  lists: listsReducer,\r\n  groups: groupsReducer,\r\n  currentList: currentListIdReducer,\r\n  currentGroup: currentGroupIdReducer,\r\n  currentTask: currentTaskIdReducer,\r\n  addingList: addingListReducer,\r\n  addingGroup: addingGroupReducer,\r\n  addingTask: addingTaskReducer,\r\n  menu: menuReducer,\r\n  detailbar: detailbarReducer,\r\n  toolbar: toolbarReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const currentListIdReducer = (\r\n  state = { listId: \"Tasks\", title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LIST\":\r\n      return { ...state, listId: action.payload.id };\r\n\r\n    case \"IS_EDITING_LIST\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_LIST\":\r\n      return {\r\n        ...state,\r\n        listId: action.payload.listId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentGroupIdReducer = (\r\n  state = { groupId: null, isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_GROUP\":\r\n      return { ...state, groupId: action.payload.id };\r\n\r\n    case \"IS_EDITING_GROUP\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentTaskIdReducer = (\r\n  state = { taskId: null, title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_TASK\":\r\n      return { ...state, taskId: action.payload.id };\r\n\r\n    case \"IS_EDITING_TASK\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_TASK\":\r\n      return {\r\n        ...state,\r\n        taskId: action.payload.taskId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const addingListReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingGroupReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_GROUP\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingTaskReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const detailbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_DETAILBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toolbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_TOOLBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}