{"version":3,"sources":["redux/actions/actions.js","components/center/AddTask.js","components/MenuV2.js","components/center/EditTaskName.js","components/center/TaskItem.js","redux/utilities.js","components/center/TaskItems.js","components/center/EditListName.js","components/center/TasksHeader.js","components/center/Tasks.js","components/left/AddList.js","components/left/GroupList.js","components/left/EditGroupName.js","components/left/Group.js","components/left/Groups.js","components/left/PremadeLists.js","components/left/List.js","components/left/Toolbar.js","components/right/AddStep.js","components/right/AddToMyDay.js","components/right/DetailFooter.js","components/Menu.js","components/right/Steps.js","components/right/TaskDetail.js","components/right/Detailbar.js","App.js","redux/reducers/tasksReducer.js","redux/reducers/listsReducer.js","redux/reducers/groupsReducer.js","redux/reducers/menuReducer.js","redux/reducers/screenReducer.js","redux/reducers/rootReducer.js","redux/reducers/currentReducer.js","redux/reducers/addingReducer.js","redux/reducers/barsReducer.js","redux/store.js","index.js"],"names":["setCurrentGroup","groupId","type","payload","id","addingGroup","title","isEditingGroup","isEditing","setCurrentList","listId","addingList","editingList","isEditingList","deleteList","setCurrentTask","taskId","addingTask","checkTask","isChecked","editingTask","isEditingTask","deleteTask","openMenu","isOpen","source","sourceId","menuRename","openDetailbar","openToolbar","AddTask","dispatch","useDispatch","taskTitle","useSelector","state","currentListId","currentList","className","onClick","uuid","steps","addedToMyDay","Important","Planned","parentList","createdAt","Date","now","actions","name","maxLength","placeholder","value","onChange","e","target","MenuV2","taskOrList","menuSource","menu","EditTaskName","oldName","currentTask","useEffect","TaskItem","isImportant","isMenuOpen","currentTaskId","isDetailbarOpen","detailbar","key","console","log","isToday","inputDate","setHours","isFutur","TaskItmes","tasks","WhatToShow","map","task","EditListName","listTitle","TasksHeader","currentListTitle","globalListId","Tasks","lists","find","list","undefined","screenWidth","screen","width","isToolbarOpen","toolbar","isBarOpen","AddList","group","GroupList","activeTaskCount","EditGroupName","groupTitle","Group","currentGroup","checkNewGroup","listsCount","filter","length","Groups","groups","PremadeLists","store","myDay","important","planned","tasksList","forEach","obj","List","Toolbar","AddStep","AddToMyDay","date","DetailFooter","currentTaskDate","Menu","openOrNot","Steps","parentTaskId","step","TaskDetail","currentTaskTitle","currentTaskSteps","Detailbar","currentTaskIsChecked","toDateString","App","window","addEventListener","document","documentElement","clientWidth","tasksReducer","DummyData","action","foundEditingTask","newEditingState","foundTask","newState","foundImportanTask","newImportantState","foundMyDayTask","newMyDayState","foundParentTask","foundStep","taskSteps","newTaskSteps","newTask","newStepState","newDeleteState","listsReducer","Lists","foundEditingList","groupsReducer","menuReducer","screenReducer","rootReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.055770ae.chunk.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                Group Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentGroup = (groupId) => {\r\n  return {\r\n    type: \"SET_GROUP\",\r\n    payload: { id: groupId },\r\n  };\r\n};\r\n\r\nexport const addingGroup = (title) => {\r\n  return {\r\n    type: \"ADDING_GROUP\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addGroup = (id, title) => {\r\n  return {\r\n    type: \"ADD_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editGroup = (id, title) => {\r\n  return {\r\n    type: \"EDIT_GROUP\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const isEditingGroup = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_GROUP\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                List Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentList = (listId) => {\r\n  return {\r\n    type: \"SET_LIST\",\r\n    payload: { id: listId },\r\n  };\r\n};\r\n\r\nexport const addingList = (title) => {\r\n  return {\r\n    type: \"ADDING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addList = (id, title, groupId) => {\r\n  return {\r\n    type: \"ADD_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      group: groupId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editList = (id, title) => {\r\n  return {\r\n    type: \"EDIT_LIST\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingList = (title) => {\r\n  return {\r\n    type: \"EDITING_LIST\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingList = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_LIST\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteList = (id) => {\r\n  return {\r\n    type: \"DELETE_LIST\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Task Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setCurrentTask = (taskId) => {\r\n  return {\r\n    type: \"SET_TASK\",\r\n    payload: { id: taskId },\r\n  };\r\n};\r\n\r\nexport const addingTask = (title) => {\r\n  return {\r\n    type: \"ADDING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const addTask = (id, title, listId) => {\r\n  return {\r\n    type: \"ADD_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n      steps: [],\r\n      isChecked: false,\r\n      addedToMyDay: null,\r\n      Important: false,\r\n      Planned: null,\r\n      parentList: listId,\r\n      createdAt: Date.now(),\r\n    },\r\n  };\r\n};\r\n\r\nexport const importantTask = (id, isImportant) => {\r\n  console.log(`id: ${id}, isImportant ${isImportant}`);\r\n  return {\r\n    type: \"IMPORTANT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      Important: isImportant,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkTask = (id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_TASK\",\r\n    payload: {\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const checkStep = (parentTaskId, id, isChecked) => {\r\n  return {\r\n    type: \"CHECK_STEP\",\r\n    payload: {\r\n      parentTaskId: parentTaskId,\r\n      id: id,\r\n      isChecked: isChecked,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editTask = (id, title) => {\r\n  return {\r\n    type: \"EDIT_TASK\",\r\n    payload: {\r\n      id: id,\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editingTask = (title) => {\r\n  return {\r\n    type: \"EDITING_TASK\",\r\n    payload: { title: title },\r\n  };\r\n};\r\n\r\nexport const isEditingTask = (isEditing) => {\r\n  return {\r\n    type: \"IS_EDITING_TASK\",\r\n    payload: {\r\n      isEditing: isEditing,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: \"DELETE_TASK\",\r\n    payload: {\r\n      id: id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addedToMyDay = (id, date) => {\r\n  return {\r\n    type: \"ADD_TO_MY_DAY\",\r\n    payload: {\r\n      id: id,\r\n      addedToMyDay: date,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Menu Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openMenu = (isOpen, source, sourceId) => {\r\n  return {\r\n    type: \"OPEN_MENU\",\r\n    payload: { isOpen: isOpen, source: source, sourceId: sourceId },\r\n  };\r\n};\r\n\r\nexport const menuRename = (source, sourceId) => {\r\n  switch (source) {\r\n    case \"TASK_ITEM\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_DETAIL\":\r\n      return {\r\n        type: \"RENAMEING_TASK\",\r\n        payload: {\r\n          taskId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    case \"TASK_HEADER\":\r\n      return {\r\n        type: \"RENAMEING_LIST\",\r\n        payload: {\r\n          listId: sourceId,\r\n          isEditing: true,\r\n        },\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                                Bars Actions                                */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const openDetailbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_DETAILBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\nexport const openToolbar = (isOpen) => {\r\n  return {\r\n    type: \"OPEN_TOOLBAR\",\r\n    payload: {\r\n      isOpen: isOpen,\r\n    },\r\n  };\r\n};\r\n\r\n/* -------------------------------------------------------------------------- */\r\n/*                               Screen Actions                               */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nexport const setScreenWidth = (screenWidth) => {\r\n  return {\r\n    type: \"SET_WIDTH\",\r\n    payload: {\r\n      screenWidth: screenWidth,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.addingTask.title);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  return (\r\n    <div className=\"task-item-body add-task-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button\r\n          className=\"btn btn-no-hover\"\r\n          onClick={() => {\r\n            dispatch(actions.addTask(uuid(), taskTitle, currentListId));\r\n            dispatch(actions.addingTask(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Task\"\r\n          value={taskTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingTask(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\nconst MenuV2 = ({ source, sourceId, taskOrList }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const currentListId = useSelector((state) => state.currentList.listId);\r\n  // const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  // const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n\r\n  // const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n\r\n  // const openOrNot =\r\n  //   source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  // const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div className=\"tasks-toolbar-menu unhide\">\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuV2;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditTaskName = ({ taskId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const taskTitle = useSelector((state) => state.currentTask.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingTask(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editTask(taskId, taskTitle));\r\n          dispatch(actions.editingTask(\"\"));\r\n          dispatch(actions.isEditingTask(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editTask\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={taskTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingTask(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskName;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditTaskName from \"./EditTaskName\";\r\n\r\nconst TaskItem = ({ taskId, taskTitle, isChecked, isImportant }) => {\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask =\r\n    currentTaskId === taskId && source === \"TASK_ITEM\" && isEditingTask;\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"task-item-body\" key={taskId}>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.checkTask(taskId, !isChecked));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isChecked\r\n                ? \"icon icon-checkbox-checked\"\r\n                : \"icon icon-checkbox-empty\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      {editingTask ? (\r\n        <EditTaskName\r\n          taskId={taskId}\r\n          isEditing={isEditingTask}\r\n          oldName={taskTitle}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button\r\n        className={\r\n          editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n        }\r\n        onClick={() => {\r\n          currentTaskId === taskId\r\n            ? dispatch(actions.setCurrentTask(null))\r\n            : dispatch(actions.setCurrentTask(taskId));\r\n          dispatch(actions.openDetailbar(!isDetailbarOpen));\r\n        }}>\r\n        <span>{taskTitle}</span>\r\n      </button>\r\n      <div\r\n        className=\"task-item-checkbox\"\r\n        onClick={() => {\r\n          dispatch(actions.importantTask(taskId, !isImportant));\r\n        }}>\r\n        <span className=\"checkbox\">\r\n          <i\r\n            className={\r\n              isImportant ? \"icon icon-star-checked\" : \"icon icon-star\"\r\n            }></i>\r\n        </span>\r\n      </div>\r\n      <div\r\n        className=\"tasks-toolbar-options\"\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentTask(taskId));\r\n          dispatch(actions.openMenu(false, null, null));\r\n          dispatch(actions.openMenu(!isMenuOpen, \"TASK_ITEM\", taskId));\r\n        }}>\r\n        <div className=\"tasks-toolbar-title-item\">\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        {/* <Menu id={currentTaskId} source={\"TASK_ITEM\"} sourceId={taskId} /> */}\r\n\r\n        {taskId === currentTaskId &&\r\n        menuSource === \"TASK_ITEM\" &&\r\n        isMenuOpen ? (\r\n          <MenuV2 source={\"TASK_ITEM\"} sourceId={taskId} taskOrList={\" task\"} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","export const isToday = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  if (today === new Date(inputDate).setHours(0, 0, 0, 0)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isFutur = (inputDate) => {\r\n  let today = new Date().setHours(0, 0, 0, 0);\r\n  let futur = new Date(inputDate).setHours(0, 0, 0, 0);\r\n  if (today < futur) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst TaskItmes = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n\r\n  const WhatToShow = () => {\r\n    switch (currentListId) {\r\n      case \"My Day\":\r\n        return tasks.map((task) => {\r\n          return isToday(task.addedToMyDay) ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Important\":\r\n        return tasks.map((task) => {\r\n          return task.Important ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Planned\":\r\n        return tasks.map((task) => {\r\n          return isFutur(task.Planned) ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      case \"Tasks\":\r\n        return tasks.map((task) => {\r\n          return task.parentList === \"Tasks\" ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n\r\n      default:\r\n        return tasks.map((task) => {\r\n          return task.parentList === currentListId ? (\r\n            <TaskItem\r\n              key={task.id}\r\n              taskId={task.id}\r\n              taskTitle={task.title}\r\n              isChecked={task.isChecked}\r\n              isImportant={task.Important}\r\n            />\r\n          ) : null;\r\n        });\r\n    }\r\n  };\r\n\r\n  return <div className=\"task-items\">{<WhatToShow />}</div>;\r\n};\r\n\r\nexport default TaskItmes;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditListName = ({ listId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.currentList.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingList(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editList(listId, listTitle));\r\n          dispatch(actions.editingList(\"\"));\r\n          dispatch(actions.isEditingList(false));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editList\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={listTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.editingList(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditListName;\r\n","import React from \"react\";\r\nimport MenuV2 from \"../MenuV2\";\r\nimport EditListName from \"./EditListName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TasksHeader = ({ currentListId, currentListTitle }) => {\r\n  const isEditingList = useSelector((state) => state.currentList.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingList = source === \"TASK_HEADER\" && isEditingList;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const globalListId = useSelector((state) => state.currentList.listId);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  return (\r\n    <div className=\"tasks-toolbar\">\r\n      <div className=\"tasks-toolbar-title\">\r\n        {editingList ? (\r\n          <EditListName\r\n            listId={currentListId}\r\n            isEditing={isEditingList}\r\n            oldName={currentListTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div\r\n          className={\r\n            editingList\r\n              ? \"tasks-toolbar-title-item hide\"\r\n              : \"tasks-toolbar-title-item\"\r\n          }>\r\n          <h1 className=\"list-title\">{currentListTitle}</h1>\r\n        </div>\r\n      </div>\r\n      {currentListId === \"My Day\" ||\r\n      currentListId === \"Important\" ||\r\n      currentListId === \"Planned\" ||\r\n      currentListId === \"Tasks\" ? (\r\n        \"\"\r\n      ) : (\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(actions.openMenu(false, null, null));\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_HEADER\", currentListId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          {/* <Menu\r\n            id={currentListId}\r\n            source={\"TASK_HEADER\"}\r\n            sourceId={currentListId}\r\n          /> */}\r\n\r\n          {/* Open menu if menu is opened and currentList is current list */}\r\n\r\n          {globalListId === currentListId &&\r\n          menuSource === \"TASK_HEADER\" &&\r\n          isMenuOpen ? (\r\n            <MenuV2\r\n              source={\"TASK_HEADER\"}\r\n              sourceId={currentListId}\r\n              taskOrList={\" list\"}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksHeader;\r\n","import React from \"react\";\r\nimport AddTask from \"./AddTask\";\r\nimport TaskItmes from \"./TaskItems\";\r\nimport TasksHeader from \"./TasksHeader\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Tasks = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentList = lists.find((list) => list.id === currentListId);\r\n  const currentListTitle =\r\n    currentList === undefined ? currentListId : currentList.title;\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const isBarOpen = isDetailbarOpen || isToolbarOpen;\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"container container-center\">\r\n      <button\r\n        className={\r\n          screenWidth < 800 ? \"btn overlay-btn\" : \"btn overlay-btn hide\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openToolbar(!isToolbarOpen));\r\n        }}>\r\n        <i className=\"icon icon-ham\"></i>\r\n      </button>\r\n\r\n      <div\r\n        className={\r\n          screenWidth < 1020 && isBarOpen ? \"overlay unhide\" : \"overlay\"\r\n        }\r\n        onClick={() => {\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}></div>\r\n\r\n      <div className=\"center tasks\">\r\n        <TasksHeader\r\n          currentListId={currentListId}\r\n          currentListTitle={currentListTitle}\r\n        />\r\n        {/* Task Items */}\r\n        <TaskItmes />\r\n        {/* Add Task */}\r\n        <AddTask />\r\n        {/* End Task Items */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst AddList = () => {\r\n  const dispatch = useDispatch();\r\n  const listTitle = useSelector((state) => state.addingList.title);\r\n\r\n  return (\r\n    <div className=\"add-list-and-group\">\r\n      <div className=\"add-list\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addList(uuid(), listTitle, null));\r\n            dispatch(actions.addingList(\"\"));\r\n          }}>\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          name=\"addList\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New List\"\r\n          value={listTitle}\r\n          onChange={(e) => {\r\n            dispatch(actions.addingList(e.target.value));\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"add-group\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            dispatch(actions.addGroup(uuid(), \"New Group\"));\r\n          }}>\r\n          <i className=\"icon icon-group-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupList = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React, { useEffect } from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst EditGroupName = ({ groupId, isEditing, oldName }) => {\r\n  const dispatch = useDispatch();\r\n  const groupTitle = useSelector((state) => state.addingGroup.title);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.isEditingGroup(isEditing));\r\n  });\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          dispatch(actions.editGroup(groupId, groupTitle));\r\n          dispatch(actions.addingGroup(\"\"));\r\n        }}>\r\n        <i className=\"icon icon-plus\"></i>\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        name=\"editGroup\"\r\n        maxLength=\"255\"\r\n        placeholder={oldName}\r\n        value={groupTitle}\r\n        onChange={(e) => {\r\n          dispatch(actions.addingGroup(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditGroupName;\r\n","import React from \"react\";\r\nimport GroupList from \"./GroupList\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditGroupName from \"./EditGroupName\";\r\n\r\nconst Group = ({ groupId, groupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const lists = useSelector((state) => state.lists);\r\n  const currentGroup = useSelector((state) => state.currentGroup.groupId);\r\n  const isEditingGroup = useSelector((state) => state.currentGroup.isEditing);\r\n  const checkNewGroup = currentGroup === groupId && groupTitle === \"New Group\";\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n  const listsCount = lists.filter((list) => list.group === groupId);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <li className=\"toolbar-item\">\r\n          {checkNewGroup ? (\r\n            <EditGroupName\r\n              groupId={groupId}\r\n              isEditing={true}\r\n              oldName={groupTitle}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className={\r\n              isEditingGroup && checkNewGroup\r\n                ? \"toolbar-inner hide\"\r\n                : \"toolbar-inner\"\r\n            }\r\n            key={groupId}\r\n            onClick={() => {\r\n              currentGroup === groupId\r\n                ? dispatch(actions.setCurrentGroup(null)) &&\r\n                  dispatch(actions.isEditingGroup(false))\r\n                : dispatch(actions.setCurrentGroup(groupId));\r\n            }}>\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-group\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>{groupTitle}</span>\r\n            </div>\r\n            {listsCount.length > 0 ? (\r\n              <div className=\"toolbar-collapse-arrow\">\r\n                <i className=\"icon icon-arrow\"></i>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <ul\r\n        className={\r\n          currentGroup === groupId ? \"group-lists unhide\" : \"group-lists\"\r\n        }>\r\n        {lists.map((list) => {\r\n          return list.group === groupId ? (\r\n            <GroupList\r\n              key={list.id}\r\n              listId={list.id}\r\n              listTitle={list.title}\r\n              activeTaskCount={tasksCount(list.id).length}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport Group from \"./Group\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Groups = () => {\r\n  const groups = useSelector((state) => state.groups);\r\n  return (\r\n    <div className=\"groups\">\r\n      {groups.map((group) => {\r\n        return (\r\n          <Group key={group.id} groupId={group.id} groupTitle={group.title} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isToday, isFutur } from \"../../redux/utilities\";\r\n\r\nconst PremadeLists = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector((store) => store.tasks);\r\n  let myDay = 0;\r\n  let important = 0;\r\n  let planned = 0;\r\n  let tasksList = 0;\r\n\r\n  tasks.forEach((obj) => {\r\n    if (isToday(obj.addedToMyDay) && !obj.isChecked) {\r\n      myDay++;\r\n    }\r\n    if (obj.Important && !obj.isChecked) {\r\n      important++;\r\n    }\r\n    if (isFutur(obj.Planned) && !obj.isChecked) {\r\n      planned++;\r\n    }\r\n    if (obj.parentList === \"Tasks\" && !obj.isChecked) {\r\n      tasksList++;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"My Day\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-sun\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>My Day</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{myDay > 0 ? myDay : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Important\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-star\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Important</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {important > 0 ? important : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Planned\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-calendar\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Planned</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">{planned > 0 ? planned : \"\"}</div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          dispatch(actions.setCurrentList(\"Tasks\"));\r\n          dispatch(actions.openDetailbar(false));\r\n          dispatch(actions.openToolbar(false));\r\n          dispatch(actions.setCurrentTask(null));\r\n        }}>\r\n        <li className=\"toolbar-item\">\r\n          <div className=\"toolbar-inner\">\r\n            <div className=\"toolbar-icon\">\r\n              <i className=\"icon icon-home\"></i>\r\n            </div>\r\n            <div className=\"toolbar-title\">\r\n              <span>Tasks</span>\r\n            </div>\r\n            <div className=\"toolbar-count\">\r\n              {tasksList > 0 ? tasksList : \"\"}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PremadeLists;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst List = ({ listId, listTitle, activeTaskCount }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={listId}\r\n      onClick={() => {\r\n        dispatch(actions.setCurrentList(listId));\r\n      }}>\r\n      <li className=\"toolbar-item\">\r\n        <div className=\"toolbar-inner\">\r\n          <div className=\"toolbar-icon\">\r\n            <i className=\"icon icon-ham\"></i>\r\n          </div>\r\n          <div className=\"toolbar-title\">\r\n            <span>{listTitle}</span>\r\n          </div>\r\n          <div className=\"toolbar-count\">\r\n            {activeTaskCount > 0 ? activeTaskCount : \"\"}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport AddList from \"./AddList\";\r\nimport Groups from \"./Groups\";\r\nimport PremadeLists from \"./PremadeLists\";\r\nimport { useSelector } from \"react-redux\";\r\nimport List from \"./List\";\r\n\r\nconst Toolbar = () => {\r\n  const lists = useSelector((state) => state.lists);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const isToolbarOpen = useSelector((state) => state.toolbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n  const tasksCount = (listId) => {\r\n    let count = tasks.filter(\r\n      (task) => task.parentList === listId && task.isChecked === false\r\n    );\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth < 800 && isToolbarOpen\r\n          ? \"container container-left unshift\"\r\n          : \"container container-left\"\r\n      }>\r\n      <div className=\"left toolbar\">\r\n        <ul>\r\n          <PremadeLists />\r\n          {/* Devider */}\r\n          <div className=\"devider\"></div>\r\n          {/* End Devider */}\r\n          <Groups />\r\n          {lists.map((list) => {\r\n            return list.group === null ? (\r\n              <List\r\n                key={list.id}\r\n                listId={list.id}\r\n                listTitle={list.title}\r\n                activeTaskCount={tasksCount(list.id).length}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      {/* Add List */}\r\n      <AddList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\n\r\nconst AddStep = () => {\r\n  return (\r\n    <div className=\"task-item-body add-task-body add-step-body\">\r\n      <div className=\"add-list add-task\">\r\n        <button className=\"btn btn-no-hover\">\r\n          <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n        <input\r\n          className=\"btn-no-hover\"\r\n          type=\"text\"\r\n          name=\"addTask\"\r\n          maxLength=\"255\"\r\n          placeholder=\"New Step\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStep;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddToMyDay = ({ taskId }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className=\"toolbar-item detailbar-item\"\r\n      onClick={() => {\r\n        dispatch(actions.addedToMyDay(taskId, Date.now()));\r\n        dispatch(actions.openDetailbar(false));\r\n        dispatch(actions.setCurrentTask(null));\r\n      }}>\r\n      <div className=\"toolbar-inner\">\r\n        <div className=\"toolbar-icon\">\r\n          <i className=\"icon icon-sun\"></i>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Add To My Day</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddToMyDay;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DetailFooter = ({ currentTaskDate, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toolbar-item detail-footer\">\r\n      <div className=\"toolbar-inner\">\r\n        <div\r\n          className=\"toolbar-icon add-group\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-arrow\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"toolbar-title\">\r\n          <span>Created on {currentTaskDate}</span>\r\n        </div>\r\n        <div\r\n          className=\"add-group detail-delete\"\r\n          onClick={() => {\r\n            dispatch(actions.openDetailbar(false));\r\n            dispatch(actions.deleteTask(sourceId));\r\n            dispatch(actions.setCurrentTask(null));\r\n          }}>\r\n          <button className=\"btn\">\r\n            <i className=\"icon icon-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailFooter;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actions\";\r\n\r\nconst Menu = ({ id, source, sourceId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentListId = useSelector((state) => state.currentList.listId);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  const menuSource = useSelector((state) => state.menu.source);\r\n  const idTarget = menuSource === \"TASK_HEADER\" ? currentListId : currentTaskId;\r\n  const openOrNot =\r\n    source === menuSource && id === idTarget && isMenuOpen ? true : false;\r\n\r\n  const taskOrList = menuSource === \"TASK_HEADER\" ? \" list\" : \" task\";\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        openOrNot ? \"tasks-toolbar-menu unhide\" : \"tasks-toolbar-menu\"\r\n      }>\r\n      <ul>\r\n        <div\r\n          onClick={() => {\r\n            dispatch(actions.menuRename(source, sourceId));\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Rename{taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Move list to</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        {/* <div>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Remove from group</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div> */}\r\n        <div\r\n          onClick={() => {\r\n            if (menuSource === \"TASK_HEADER\") {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.setCurrentList(\"Tasks\"));\r\n              dispatch(actions.deleteList(sourceId));\r\n            } else {\r\n              dispatch(actions.openDetailbar(false));\r\n              dispatch(actions.deleteTask(sourceId));\r\n            }\r\n          }}>\r\n          <li className=\"toolbar-item\">\r\n            <div className=\"toolbar-inner\">\r\n              <div className=\"toolbar-icon\">\r\n                <i className=\"icon icon-ham\"></i>\r\n              </div>\r\n              <div className=\"toolbar-title\">\r\n                <span>Delete {taskOrList}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Steps = ({ parentTaskId, steps }) => {\r\n  const dispatch = useDispatch();\r\n  return steps.map((step) => {\r\n    return (\r\n      <div key={step.id} className=\"task-item-body task-detail-title step\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkStep(parentTaskId, step.id, !step.isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                step.isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        <button className=\"btn task-item-title\">\r\n          <span>{step.title}</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Steps;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport Steps from \"./Steps\";\r\nimport EditTaskName from \"../center/EditTaskName\";\r\nimport * as actions from \"../../redux/actions/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst TaskDetail = ({\r\n  currentTaskId,\r\n  currentTaskTitle,\r\n  isChecked,\r\n  currentTaskSteps,\r\n}) => {\r\n  const isEditingTask = useSelector((state) => state.currentTask.isEditing);\r\n  const source = useSelector((state) => state.menu.source);\r\n  const editingTask = source === \"TASK_DETAIL\" && isEditingTask;\r\n\r\n  const dispatch = useDispatch();\r\n  const isMenuOpen = useSelector((state) => state.menu.isOpen);\r\n  return (\r\n    <div className=\"task-item-body task-detail-title\">\r\n      <div className=\"task-detail-header\">\r\n        <div\r\n          className=\"task-item-checkbox\"\r\n          onClick={() => {\r\n            dispatch(actions.checkTask(currentTaskId, !isChecked));\r\n          }}>\r\n          <span className=\"checkbox\">\r\n            <i\r\n              className={\r\n                isChecked\r\n                  ? \"icon icon-checkbox-checked\"\r\n                  : \"icon icon-checkbox-empty\"\r\n              }></i>\r\n          </span>\r\n        </div>\r\n        {editingTask ? (\r\n          <EditTaskName\r\n            taskId={currentTaskId}\r\n            isEditing={isEditingTask}\r\n            oldName={currentTaskTitle}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <button\r\n          className={\r\n            editingTask ? \"btn task-item-title hide\" : \"btn task-item-title\"\r\n          }>\r\n          <span>\r\n            <h2>{currentTaskTitle}</h2>\r\n          </span>\r\n        </button>\r\n        <div\r\n          className=\"tasks-toolbar-options\"\r\n          onClick={() => {\r\n            dispatch(\r\n              actions.openMenu(!isMenuOpen, \"TASK_DETAIL\", currentTaskId)\r\n            );\r\n          }}>\r\n          <div className=\"tasks-toolbar-title-item\">\r\n            <button className=\"btn\">\r\n              <i className=\"icon icon-arrow\"></i>\r\n            </button>\r\n          </div>\r\n          <Menu\r\n            id={currentTaskId}\r\n            source={\"TASK_DETAIL\"}\r\n            sourceId={currentTaskId}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Steps parentTaskId={currentTaskId} steps={currentTaskSteps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetail;\r\n","import React from \"react\";\r\nimport AddStep from \"./AddStep\";\r\nimport AddToMyDay from \"./AddToMyDay\";\r\nimport DetailFooter from \"./DetailFooter\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Detailbar = () => {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const currentTaskId = useSelector((state) => state.currentTask.taskId);\r\n\r\n  const currentTask = tasks.find((task) => task.id === currentTaskId);\r\n\r\n  const currentTaskTitle =\r\n    currentTask === undefined ? currentTaskId : currentTask.title;\r\n\r\n  const currentTaskIsChecked =\r\n    currentTask === undefined ? false : currentTask.isChecked;\r\n\r\n  const currentTaskSteps = currentTask === undefined ? [] : currentTask.steps;\r\n\r\n  const currentTaskDate =\r\n    currentTask === undefined\r\n      ? currentTaskId\r\n      : new Date(currentTask.createdAt).toDateString();\r\n\r\n  const isDetailbarOpen = useSelector((state) => state.detailbar.isOpen);\r\n  const screenWidth = useSelector((state) => state.screen.width);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        screenWidth > 1020 && isDetailbarOpen\r\n          ? \"container container-right\"\r\n          : screenWidth > 1020 && !isDetailbarOpen\r\n          ? \"container container-right hide\"\r\n          : screenWidth < 1020 && isDetailbarOpen\r\n          ? \"container container-right unshift\"\r\n          : \"container container-right\"\r\n      }>\r\n      <TaskDetail\r\n        currentTaskId={currentTaskId}\r\n        currentTaskTitle={currentTaskTitle}\r\n        isChecked={currentTaskIsChecked}\r\n        currentTaskSteps={currentTaskSteps}\r\n      />\r\n      <AddStep />\r\n      <AddToMyDay taskId={currentTaskId} />\r\n      <DetailFooter\r\n        currentTaskDate={currentTaskDate}\r\n        sourceId={currentTaskId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detailbar;\r\n","import React from \"react\";\nimport Tasks from \"./components/center/Tasks\";\nimport Toolbar from \"./components/left/Toolbar\";\nimport Detailbar from \"./components/right/Detailbar\";\n\nimport * as actions from \"./redux/actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  window.addEventListener(\"resize\", () => {\n    dispatch(actions.setScreenWidth(document.documentElement.clientWidth));\n  });\n\n  return (\n    <div className=\"App\">\n      <Toolbar />\n      <Tasks />\n      <Detailbar />\n    </div>\n  );\n}\n\nexport default App;\n","import DummyData from \"../DummyData\";\r\n\r\nconst tasksReducer = (state = DummyData.Tasks, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          steps: action.payload.steps,\r\n          isChecked: action.payload.isChecked,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n          Important: action.payload.Important,\r\n          Planned: action.payload.Planned,\r\n          parentList: action.payload.parentList,\r\n          createdAt: action.payload.createdAt,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_TASK\":\r\n      const foundEditingTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingTask,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_TASK\":\r\n      const foundTask = state.find((task) => task.id === action.payload.id);\r\n      const newState = state.filter((task) => task.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          ...foundTask,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n\r\n    case \"IMPORTANT_TASK\":\r\n      const foundImportanTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newImportantState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newImportantState,\r\n        {\r\n          ...foundImportanTask,\r\n          Important: action.payload.Important,\r\n        },\r\n      ];\r\n\r\n    case \"ADD_TO_MY_DAY\":\r\n      const foundMyDayTask = state.find(\r\n        (task) => task.id === action.payload.id\r\n      );\r\n      const newMyDayState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newMyDayState,\r\n        {\r\n          ...foundMyDayTask,\r\n          addedToMyDay: action.payload.addedToMyDay,\r\n        },\r\n      ];\r\n\r\n    case \"CHECK_STEP\":\r\n      const foundParentTask = state.find(\r\n        (task) => task.id === action.payload.parentTaskId\r\n      );\r\n      const foundStep = foundParentTask.steps.find(\r\n        (step) => step.id === action.payload.id\r\n      );\r\n      const taskSteps = foundParentTask.steps.filter(\r\n        (step) => step.id !== action.payload.id\r\n      );\r\n      const newTaskSteps = [\r\n        ...taskSteps,\r\n        {\r\n          ...foundStep,\r\n          isChecked: action.payload.isChecked,\r\n        },\r\n      ];\r\n      const newTask = {\r\n        ...foundParentTask,\r\n        steps: [...newTaskSteps],\r\n      };\r\n      const newStepState = state.filter(\r\n        (task) => task.id !== action.payload.parentTaskId\r\n      );\r\n      return [\r\n        ...newStepState,\r\n        {\r\n          ...newTask,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_TASK\":\r\n      const newDeleteState = state.filter(\r\n        (task) => task.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst listsReducer = (state = DummyData.Lists, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_LIST\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n          group: action.payload.group,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_LIST\":\r\n      const foundEditingList = state.find(\r\n        (list) => list.id === action.payload.id\r\n      );\r\n      const newEditingState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [\r\n        ...newEditingState,\r\n        {\r\n          ...foundEditingList,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"DELETE_LIST\":\r\n      const newDeleteState = state.filter(\r\n        (list) => list.id !== action.payload.id\r\n      );\r\n      return [...newDeleteState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import DummyData from \"../DummyData\";\r\n\r\nconst groupsReducer = (state = DummyData.Groups, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_GROUP\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    case \"EDIT_GROUP\":\r\n      const newState = state.filter((group) => group.id !== action.payload.id);\r\n      return [\r\n        ...newState,\r\n        {\r\n          id: action.payload.id,\r\n          title: action.payload.title,\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupsReducer;\r\n","const menuReducer = (\r\n  state = { isOpen: false, source: null, sourceId: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MENU\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n        source: action.payload.source,\r\n        sourceId: action.payload.sourceId,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default menuReducer;\r\n","const screenReducer = (\r\n  state = { width: document.documentElement.clientWidth },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WIDTH\":\r\n      return {\r\n        ...state,\r\n        width: action.payload.screenWidth,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default screenReducer;\r\n","import tasksReducer from \"./tasksReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport groupsReducer from \"./groupsReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\nimport {\r\n  currentListIdReducer,\r\n  currentTaskIdReducer,\r\n  currentGroupIdReducer,\r\n} from \"./currentReducer\";\r\nimport {\r\n  addingListReducer,\r\n  addingTaskReducer,\r\n  addingGroupReducer,\r\n} from \"./addingReducer\";\r\nimport { detailbarReducer, toolbarReducer } from \"./barsReducer\";\r\nimport screenReducer from \"./screenReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  lists: listsReducer,\r\n  groups: groupsReducer,\r\n  currentList: currentListIdReducer,\r\n  currentGroup: currentGroupIdReducer,\r\n  currentTask: currentTaskIdReducer,\r\n  addingList: addingListReducer,\r\n  addingGroup: addingGroupReducer,\r\n  addingTask: addingTaskReducer,\r\n  menu: menuReducer,\r\n  detailbar: detailbarReducer,\r\n  toolbar: toolbarReducer,\r\n  screen: screenReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const currentListIdReducer = (\r\n  state = { listId: \"Tasks\", title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_LIST\":\r\n      return { ...state, listId: action.payload.id };\r\n\r\n    case \"IS_EDITING_LIST\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_LIST\":\r\n      return {\r\n        ...state,\r\n        listId: action.payload.listId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentGroupIdReducer = (\r\n  state = { groupId: null, isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_GROUP\":\r\n      return { ...state, groupId: action.payload.id };\r\n\r\n    case \"IS_EDITING_GROUP\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentTaskIdReducer = (\r\n  state = { taskId: null, title: \"\", isEditing: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_TASK\":\r\n      return { ...state, taskId: action.payload.id };\r\n\r\n    case \"IS_EDITING_TASK\":\r\n      return { ...state, isEditing: action.payload.isEditing };\r\n\r\n    case \"EDITING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    case \"RENAMEING_TASK\":\r\n      return {\r\n        ...state,\r\n        taskId: action.payload.taskId,\r\n        isEditing: action.payload.isEditing,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const addingListReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_LIST\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingGroupReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_GROUP\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addingTaskReducer = (state = { title: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"ADDING_TASK\":\r\n      return { ...state, title: action.payload.title };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const detailbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_DETAILBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toolbarReducer = (state = { isOpen: false }, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_TOOLBAR\":\r\n      return {\r\n        ...state,\r\n        isOpen: action.payload.isOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import rootReducer from \"./reducers/rootReducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}